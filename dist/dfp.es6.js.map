{"version":3,"file":"dfp.es6.js","sources":["../src/utils/cookieUtils.js","../src/globalConfig.js","../src/utils/time.js","../src/utils/breakpoints.js","../src/objects/impressionsManager.js","../src/objects/user.js","../src/objects/conflictResolver.js","../src/objects/adSlot.js","../src/utils/arrays.js","../src/objects/adManager.js","../src/dfp.js","../src/index.js"],"sourcesContent":["/**\n * Htz-cookie-util\n * @module htzCookieUtil\n * @author Elia Grady elia.grady@haaretz.co.il\n * @license MIT\n */\n\n/**\n * Translates Key-Value string into a convenient map.\n * @param {string} string String in format of \"key<operator>value<separator>.....\"\n * @param {object} options object for overriding defaults:\n * options.separator is a String or regExp that separates between each key value pairs\n * (default is ';'). options.operator is a String or regExp that separates between each key\n * and value within a pair (default is '=').\n * @returns {object} a map object, with key-value mapping according to the passed configuration.\n */\nfunction stringToMap(string,\n  { separator = ';', operator = '=' } = {}) {\n  const map = {};\n  const itemsArr = string.split(separator);\n  //console.log(`called stringToMap with separator:`, separator, `therefore, itemsArr is now:`,itemsArr);\n  for (const key in itemsArr) {\n    if (itemsArr.hasOwnProperty(key)) {\n      const keyValue = itemsArr[key].split(operator);\n      if(keyValue.length == 2 ) { //Only operate on valid splits\n        map[keyValue[0]] = decodeURIComponent(keyValue[1]);\n      }\n    }\n  }\n  return map;\n}\nexport const ssoKey = window.location.hostname.indexOf('haaretz.com') > -1 ? 'engsso' : 'tmsso';\n\n// Translates Cookie string into a convenient map.\nexport default function getCookieAsMap() {\n  const map = stringToMap(document.cookie, { separator: /;\\s?/ });\n  if (typeof map['tmsso'] === 'string') {\n    map['tmsso'] = stringToMap(map['tmsso'], { separator: ':' });\n  }\n  if (typeof map['engsso'] === 'string') {\n    map['engsso'] = stringToMap(map['engsso'], { separator: ':' });\n  }\n  return map;\n}\n\n","/*global dfpBaseConf*/\nimport getCookieAsMap, { ssoKey } from './utils/cookieUtils';\n//globalConfig for DFP\nconst dfpConfig = Object.assign({\n  get referrer() {\n    return document.referrer ? document.referrer : \"\";\n  },\n  get isMobile() {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i\n      .test(window.navigator.userAgent || \"\"));\n  },\n  /**\n   * Returns true iff the loaded page is the homepage (no inner path)\n   * @returns {boolean}\n   */\n  get isHomepage() {\n    return window.location.pathname === \"/\" || this.environment === 3; //'prod'\n  },\n  get department() {\n    return this.isHomepage ? '_homepage' : '_section';\n  },\n  /**\n   * returns the domain the page was loaded to. i.e: 'haaretz.co.il', 'haaretz.com'\n   * @returns {string} the domain name from the windows's location hostname property\n   */\n  get domain() {\n    const regexMatch = /([\\d|\\w]+)(\\.co\\.il|\\.com)(.*)?/.exec(window.location.hostname);\n    const result = regexMatch ? regexMatch[0] : window.location.hostname;\n    return result;\n  },\n  /**\n   * Returns an array of concatenated paths, separated by a dot.\n   * For example, for the URL:\n   * http://www.haaretz.co.il/news/world/america/us-election-2016/LIVE-1.2869045\n   * the path is '/news/world/america/us-election-2016/LIVE-1.2869045'.\n   * This function takes the directories ['news', 'world', 'america', 'us-election-2016']\n   * and converts it to the following format:\n   * ['.news', '.news.world', '.news.world.america', '.news.world.america.us-election-2016']\n   * This denotes the path configuration for the given adSlot\n   * @returns {Array.<T>} an array of path names\n   */\n  get path() {\n    let sectionArray = this.articleId ?\n      window.location.pathname.split('/').slice(1,-1) :\n      window.location.pathname.split('/').slice(1);\n    sectionArray = sectionArray.filter(path => path != 'wwwMobileSite' && path != 'whtzMobileSite');\n    return sectionArray\n      .map(section => `.${section}`)\n      .map((section, index, arr) => arr.slice(0,index+1)\n        .reduce((last, current) => last.concat(current)));\n  },\n  /**\n   * Returns the current environment targeting param, if such is defined.\n   * @returns {number} targeting param, 1 for local development, 2 for test servers and 3 for prod.\n   * May return undefined if no targeting is specified.\n   */\n  get environment() {\n    const env = {\n      dev: 1,\n      test: 2,\n      prod: 3,\n    };\n    return window.location.port === '8080' ? env.dev :\n      (window.location.hostname.indexOf('pre.haaretz.co.il') > -1\n      || window.location.hostname.indexOf('tmtest.themarker.com') > -1) ? env.test :\n        (window.location.pathname.indexOf('/cmlink/Haaretz.HomePage') > -1\n        || window.location.pathname.indexOf('/cmlink/TheMarker.HomePage') > -1) ? env.prod : undefined;\n  },\n  /**\n   * Returns the articleIf if on an article page, or null otherwise\n   * @returns {string} an articleId string from the pathname, or null if none is found\n   */\n  get articleId() {\n    const articleIdMatch = /\\d\\.\\d+/g.exec(window.location.pathname);\n    let articleId;\n    if(articleIdMatch) {\n      articleId = articleIdMatch.pop(); //Converts [\"1.23145\"] to \"1.23145\"\n    }\n    return articleId;\n  },\n  utm_ : {\n    get content() {\n      return this.getUrlParam('utm_content');\n    },\n    get source() {\n      return this.getUrlParam('utm_source');\n    },\n    get medium() {\n      return this.getUrlParam('utm_medium');\n    },\n    get campaign() {\n      return this.getUrlParam('utm_campaign');\n    },\n    getUrlParam(key) {\n      let results = RegExp(`(${key})(=)([^&\"]+)`).exec(window.location.search);\n      return results && results[3] ? results[3] : undefined;\n    },\n  },\n  get adBlockRemoved() {\n    let adBlockRemoved = false;\n    try {\n      adBlockRemoved = localStorage.getItem('adblock_removed') ? true : false;\n    }\n    catch (err) {}\n    return adBlockRemoved;\n  },\n  get wifiLocation() {\n    let wifiLocation = '';\n    let cookieMap = getCookieAsMap();\n    try {\n      if(cookieMap && cookieMap['_htzwif']) {\n        wifiLocation = (cookieMap['_htzwif'] == 'arcaffe')? 'ArCafe' : 'university';\n      }\n    }\n    catch (err) {\n\n    }\n    return wifiLocation;\n  },\n  get gStatCampaignNumber() {\n    let gstatCampaign;\n    try {\n      gstatCampaign = localStorage.getItem('GstatCampaign') ?\n        JSON.parse(localStorage.getItem('GstatCampaign')) : undefined;\n    }\n    catch (err) {\n      //In case of thrown 'SecurityError' or 'QuotaExceededError', the variable should be undefined\n      gstatCampaign = undefined;\n    }\n    return gstatCampaign ? gstatCampaign['CampaignNumber'] : undefined;\n  },\n  adSlotConfig: {\n    \"haaretz.co.il.example.slot\" : {\n      id: \"slotId\",\n      //path : \"/network/base/slotId/slotId_subsection\", Will be calculated from AdManager\n      responsive: true,\n      adSizeMapping: [['width1','height1'],...['widthN','heightN']],\n      priority: 'normal',\n      fluid: false,\n      responsiveAdSizeMapping : {\n        xxs: [['width1','height1'],...['widthN','heightN'],],\n        xs: [['width1','height1'],...['widthN','heightN'],],\n        s: [['width1','height1'],...['widthN','heightN'],],\n        m: [['width1','height1'],...['widthN','heightN'],],\n        l: [['width1','height1'],...['widthN','heightN'],],\n        xl: [['width1','height1'],...['widthN','heightN'],],\n        xxl: [['width1','height1'],...['widthN','heightN'],],\n      },\n      blacklistReferrers: \"comma, delimited, blacklisted, referrer, list\",\n      whitelistReferrers: \"comma, delimited, referrer, list\",\n    }\n  },\n  adManagerConfig : {\n    network: '9401',\n    adUnitBase: 'haaretz.co.il_Web',\n  },\n  breakpointsConfig : {\n    get breakpoints() {\n      const isType1 = true; //Override in VM from backend to control this toggle.\n      return isType1 ? this.breakpoints1 : this.breakpoints2;\n    },\n    // Type 1\n    breakpoints1 : {\n      xxs: 600,\n      xs: 761,\n      s: 993,\n      m: 1009,\n      l: 1291,\n      xl: 1600,\n      xxl: 1900,\n    },\n    // Type 2\n    breakpoints2 : {\n      xxs: 600,\n      xs: 1000,\n      s: 1150,\n      m: 1281,\n      l: 1600,\n      xl: 1920,\n      xxl: 1920,\n    }\n  },\n  userConfig: {\n    type : undefined,\n    age: undefined,\n    gender: undefined,\n  },\n  conflictManagementConfig: {\n    \"blocking.ad.unit.name\": [\n      {\n        onsize: \"1280x200,970x250,3x3\",\n        avoid: \"blocked.ad.unit.name\"\n      },\n      {\n        onsize: \"1280x200,970x250,3x3\",\n        avoid: \"blocked.ad.unit.name\"\n      }\n    ]\n  },\n  impressionManagerConfig: {\n    \"ad.unit.name\": {\n      target: 'all|section|homepage',\n      frequency: '$1/$2(day|hour)',\n      exposed: 0,\n      expires: (new Date).getTime()\n    }\n  },\n  sso: ssoKey,\n\n},window.dfpConfig);\n\nexport default dfpConfig;\n","/**\n * Helper function. Adds N hours to a given date object.\n * @param date the date to derive from\n * @param hours the amount of hours to add, in whole numbers\n * @returns {Date} the new date, derived from adding the given hours\n */\nexport function addHours(date, hours) {\n  if(!date) {\n    throw new SyntaxError(`addHours called without a required 'date' parameter!`);\n  }\n  if(!hours) {\n    throw new SyntaxError(`addHours called without a required 'hours' parameter!`);\n  }\n  else if(isNaN(parseInt(hours))) {\n    throw new TypeError(`addHours called with an invalid integer 'hours' parameter!`);\n  }\n  const result = new Date(date);\n  result.setHours(result.getHours() + parseInt(hours));\n  return result;\n}\n\n/**\n * Helper function. Adds N days to a given date object.\n * @param date the date to derive from\n * @param hours the amount of days to add, in whole numbers\n * @returns {Date} the new date, derived from adding the given days\n */\nexport function addDays(date, days) {\n  if(!date) {\n    throw new SyntaxError(`addDays called without a required 'date' parameter!`);\n  }\n  if(!days) {\n    throw new SyntaxError(`addDays called without a required 'hours' parameter!`);\n  }\n  else if(isNaN(parseInt(days))) {\n    throw new TypeError(`addDays called with an invalid integer 'hours' parameter!`);\n  }\n  const result = new Date(date);\n  result.setDate(result.getDate() + parseInt(days));\n  return result;\n}\n","import globalConfig from '../globalConfig';\n\nconst breakpoints = globalConfig.breakpointsConfig.breakpoints;\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @param func the function to run\n * @param wait the timeout period to avoid running the function\n * @param immediate leading edge modifier\n * @returns {Function} the debounced function\n * //TODO translate to ES6 format - in progress...\n */\nexport function debounce(func, wait = 100, immediate) {\n  let timeout;\n  return function() {\n    const context = this, args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @returns {number} the break that the current width represents\n */\nexport function getBreakpoint() {\n  let breakpoint = breakpoints.xxl;\n  let windowWidth = window.innerWidth;\n  if(windowWidth < breakpoints.xxl) { breakpoint = breakpoints.xl } else { return breakpoint }\n  if(windowWidth < breakpoints.xl) { breakpoint = breakpoints.l } else { return breakpoint }\n  if(windowWidth < breakpoints.l) { breakpoint = breakpoints.m } else { return breakpoint }\n  if(windowWidth < breakpoints.m) { breakpoint = breakpoints.s } else { return breakpoint }\n  if(windowWidth < breakpoints.s) { breakpoint = breakpoints.xs } else { return breakpoint }\n  if(windowWidth < breakpoints.xs) { breakpoint = breakpoints.xxs } else { return breakpoint }\n  return breakpoint\n}\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @returns {string} the breakpoint label that the current width represents\n */\nexport function getBreakpointName(breakpoint) {\n  let resultBreakpoint = 'xxl';\n  let windowWidth = breakpoint || window.innerWidth;\n  if(windowWidth < breakpoints.xxl) { resultBreakpoint = 'xl' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.xl) { resultBreakpoint = 'l' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.l) { resultBreakpoint = 'm' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.m) { resultBreakpoint = 's' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.s) { resultBreakpoint = 'xs' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.xs) { resultBreakpoint = 'xxs' } else { return resultBreakpoint }\n  return resultBreakpoint\n}\n\n","import globalConfig from '../globalConfig';\nimport { addHours, addDays } from '../utils/time';\nimport { debounce }  from '../utils/breakpoints';\n\nexport const keys = {\n  impressions : 'impressions',\n  frequency : 'frequency',\n  /**\n   * [0] - full match\n   * [1] - impression count i.e: \"1\" | \"22\"\n   * [2] - impression expiry range quantifier  i.e: \"1\" | \"22\"\n   * [3] - impression expiry range unit i.e: \"day\" | \"hour\"\n   */\n  frequencyRegex: /(\\d+)\\/(\\d+)(day|hour)/,\n  expires : 'expires',\n  exposed : 'exposed',\n  target : 'target',\n  maxImpressions : 'maxImpressions',\n  hours : 'hour',\n  days : 'day',\n  adSlotId : 'id',\n};\n\n\n\n\nexport default class ImpressionsManager {\n\n  constructor(impressionManagerConfig) {\n    this.now = (new Date).getTime(); //this date is used for comparisons only\n    this.config = Object.assign({}, impressionManagerConfig);\n    this.impressions = this.retrieveImpressionsData();\n    this.initImpressionMap();\n  }\n\n  retrieveImpressionsData() {\n    let impressions = this.migrateImpressionsData();\n    //Merge migrated data with new data\n    //console.log('Migrated: ',impressions);\n    Object.keys(impressions).map((key, index) => {\n      impressions[key] = Object.assign({},impressions[key],this.config[key]);\n    });\n    //console.log('Merged: ',impressions);\n    //Filter out entries without frequency\n    for(const key in impressions) {\n      if(impressions.hasOwnProperty(key)) {\n        if(!impressions[key][keys.frequency]) {\n          //console.log(`Removing ${key} - since it does not have a frequency`,impressions[key]);\n          delete impressions[key];\n        }\n      }\n    }\n    //console.log('Filtered: ',impressions);\n    return impressions;\n  }\n\n  migrateImpressionsData() {\n    let impressions;\n    let impressionsData;\n    try {\n      impressionsData = window.localStorage.getItem(keys.impressions);\n    }\n    catch (err) {\n      //In case of thrown 'SecurityError' or 'QuotaExceededError', the variable should be undefined\n      impressionsData = undefined;\n    }\n    try {\n      impressions = JSON.parse(impressionsData);\n    }\n    catch (err) {\n      //Here is where old impression data is converted to new format\n      impressions = {};\n      const oldImpressionsArray = impressionsData.split(';').filter(e => e);\n\n      oldImpressionsArray.forEach((impression) => {\n        try {\n          const adUnitImpression = impression.split(' = ');\n          const name = adUnitImpression[0];\n          const data = adUnitImpression[1];\n          let tmp = name.split('.');\n          let target = tmp.pop();\n          if(target && target == 'hp') {\n            target = 'homepage';\n          }\n          const slotId = tmp.join('.');\n          const id = `${slotId}_${target}`;\n          const exposed = parseInt(data.split('/')[0]) || 0;\n          const expires = parseInt(data.split('/')[1]) || this.now;\n          impressions[id] = {};\n          impressions[id][keys.adSlotId] = slotId;\n          impressions[id][keys.target] = target;\n          impressions[id][keys.exposed] = exposed;\n          impressions[id][keys.expires] = expires;\n        }\n        catch (err) {\n          console.log(`Failed converting impression: ${impression}`,err);\n        }\n\n      });\n    }\n    return impressions || {};\n  }\n\n  /**\n   * Define the debounced version of the local storage save\n   */\n  saveImpressionsToLocalStorage() {\n    if(this.debouncedSave && typeof this.debouncedSave === 'function') {\n      this.debouncedSave();\n    }\n    else {\n      this.debouncedSave = debounce(this.saveImpressionsToLocalStorageImpl, 250, false);\n      this.debouncedSave();\n    }\n  }\n\n  /**\n   * Implementation of saving the impression map to localstorage\n   */\n  saveImpressionsToLocalStorageImpl() {\n    try {\n      localStorage.setItem(keys.impressions, JSON.stringify(this.impressions));\n    }\n    catch (err) {\n      //In case of thrown 'SecurityError' or 'QuotaExceededError', the operation should not break\n      console.log(`localStorage isn't available:`,err);\n    }\n  }\n\n  /**\n   * Initializes the impression map based on the retrieved impressions and the global\n   * configuration.\n   */\n  initImpressionMap() {\n    Object.keys(this.config).map((key, index) => {\n      const adSlotId = key;\n      let slot, shouldUpdateExpiryDate = false;\n      // Case I: Existing slot (update)\n      if(slot = this.impressions[adSlotId]) {\n        // Case I.I Existing slot, frequency has changed\n        if( this.config[adSlotId][keys.frequency] =!  slot[keys.frequency]) {\n          // Updating the frequency will trigger a new expiry date\n          shouldUpdateExpiryDate = true;\n          this.impressions[adSlotId][keys.frequency] = this.config[adSlotId][keys.frequency];\n        } // Case I.II Existing slot, old expiry date\n        else if(this.now >  slot[keys.expires]) {\n          // Old value that should trigger a new expiry date\n          shouldUpdateExpiryDate = true;\n        }\n      } // Case II: Non-existing slot (create new slot)\n      else {\n        this.initSlotFromConfig(adSlotId);\n      } //Finally, updates the expiry date (cases I.I and I.II)\n      if(shouldUpdateExpiryDate) {\n        this.updateExpiryDate(adSlotId);\n      }\n    });\n  }\n\n  /**\n   * Updates the expiry date of a slotName based on the configured slot frequency\n   * @param slotName the slotName to update.\n   */\n  updateExpiryDate(slotName) {\n    let now = new Date();\n    if(!(this.impressions[slotName] && this.impressions[slotName][keys.frequency])) {\n      throw new Error(`Unable to update expiry date for slot: ${slotName}\n      - this.impressions[slotName]:`,this.impressions[slotName]);\n    }\n    const frequencyMap = this.impressions[slotName][keys.frequency].match(keys.frequencyRegex);\n    now.setMilliseconds(0);\n    now.setSeconds(0);\n    now.setMinutes(0);\n    if(frequencyMap.indexOf(keys.days) > -1) {\n      now.setHours(0);\n    }\n    this.impressions[slotName][keys.expires] = (frequencyMap.indexOf(keys.days) > -1 ?\n      addDays(now, frequencyMap[2]) : addHours(now, frequencyMap[2])).getTime();\n\n    //Set max impressions:\n    this.impressions[slotName][keys.maxImpressions] = parseInt(frequencyMap[1]);\n    //Reset exposed\n    this.impressions[slotName][keys.exposed] = 0;\n  }\n\n\n\n  /**\n   * Initializes a non-existing slot from the passed global configuration for the slot\n   * @param slotName the name of the slot to create\n   */\n  initSlotFromConfig(slotName) {\n    let slot = this.impressions[slotName] || {};\n    slot[keys.frequency] = this.config[slotName][keys.frequency];\n    slot[keys.target] = this.config[slotName][keys.target];\n    slot[keys.exposed] = 0;\n    this.impressions[slotName] = slot;\n    this.updateExpiryDate(slotName);\n  }\n\n  /**\n   * Registers an impression for a given adSlot.\n   * @param adSlotId the adSlot id to register an impression for\n   * @returns {boolean} returns true iff the impression has been registered\n   */\n  registerImpression(adSlotId) {\n    if(adSlotId) {\n      const slot = this.impressions[adSlotId];\n      if(slot) {\n        const exposed = slot[keys.exposed];\n        if(isNaN(parseInt(exposed)) === false) {\n          this.impressions[adSlotId][keys.exposed] += 1;\n          try {\n            this.saveImpressionsToLocalStorage();\n          }\n          catch (err) {\n            console.log('Error saving ad impressions to localStorage!', err);\n          }\n          return true;\n        }\n      }\n\n    }\n    return false;\n  }\n\n  /**\n   * Checks whether an adSlot has reached it's allocated impressions count.\n   * @param adSlotId the adSlot to check\n   * @returns {boolean} true iff there is a quota for the adSlot, and it has been reached\n   */\n  reachedQuota(adSlotId) {\n    // An adSlotId is suffixed with _homepage | _section if it's targeting is different\n    // between the two. If there is no difference, an _all suffix can be used.\n    adSlotId = this.impressions[`${adSlotId}${globalConfig.department}`] ?\n      `${adSlotId}${globalConfig.department}`: `${adSlotId}_all`;\n\n    let slot = this.impressions[adSlotId];\n    let atQuota = false;\n    if(slot) {\n      let now = (new Date()).getTime();\n      //Second element of 2/4day matches '2'\n      const expires = this.impressions[adSlotId][keys.expires];\n      if(expires < now) {\n        this.updateExpiryDate(adSlotId);\n      }\n      else {\n        const maxImpressions = this.impressions[adSlotId][keys.maxImpressions];\n        //Not expired, did reach max impressions?\n        if(maxImpressions) {\n          atQuota = this.impressions[adSlotId][keys.exposed] >= maxImpressions;\n        }\n      }\n\n    }\n    return atQuota;\n  }\n\n\n  /**\n   * Clears the impression map from 'exposed' impressions\n   */\n  resetImpressions() {\n    const impressions = this.impressions;\n    for(const key in impressions) {\n      if(impressions.hasOwnProperty(key)) {\n        if(impressions[key][keys.exposed]) {\n          impressions[key][keys.exposed] = 0;\n        }\n      }\n    }\n    this.saveImpressionsToLocalStorage();\n  }\n}\n","import getCookieAsMap, { ssoKey } from '../utils/cookieUtils';\nimport ImpressionManager from './impressionsManager';\nimport globalConfig from '../globalConfig';\n\nexport const userTypes = {\n  payer: 'payer',\n  registered: 'registered',\n  anonymous: 'anonymous'\n};\n\nexport default class User {\n  constructor(config) {\n    this.config = Object.assign({}, config.userConfig);\n    let cookieMap = getCookieAsMap();\n    this.ssoKey = globalConfig.sso;\n    if(!cookieMap[this.ssoKey]) {\n      //console.log(`ssoKey flipped! - was ${this.ssoKey}`);\n      //Flips the ssoKey, since cookieMap.ssoKey cannot be used to retrieve data\n      this.ssoKey = this.ssoKey === 'tmsso' ? 'engsso' : 'tmsso';\n      //console.log(`ssoKey flipped! - now ${this.ssoKey}`);\n    }\n    this.type = this.getUserType(cookieMap);\n    this.impressionManager = new ImpressionManager(config.impressionManagerConfig);\n    this.age = this.getUserAge(cookieMap);\n    this.gender = this.getUserGender(cookieMap);\n  }\n\n  getUserType(cookieMap) {\n    if(cookieMap && cookieMap[this.ssoKey]) {\n      const payerProp = window.location.hostname.indexOf(\"haaretz.com\") > -1 ? 'HdcPusr' : 'HtzPusr';\n      return cookieMap[payerProp] ? userTypes.payer : userTypes.registered\n    }\n    else {\n      return userTypes.anonymous;\n    }\n  }\n\n  getUserAge(cookieMap) {\n    let age;\n    const usrae = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].usrae;\n    if(usrae) {\n      age = parseInt(cookieMap[this.ssoKey].usrae);\n      age = age > 0 ? age : undefined;\n    }\n    return age;\n  }\n\n  getUserGender(cookieMap) {\n    let gender;\n    const urgdr = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].urgdr;\n    if(urgdr) {\n      gender = parseInt(cookieMap[this.ssoKey].urgdr);\n      gender = gender === 2 || gender === 1 ? gender : undefined;\n    }\n    return gender;\n  }\n}\n","class ConflictResolver {\n  constructor(conflictManagementConfig) {\n    this.dependencyMap = this.initializeDependencyMap(conflictManagementConfig);\n    this.deferredSlots = new Set();\n  }\n  initializeDependencyMap(conflictManagementJson) {\n    let queue = new Map();\n    Object.keys(conflictManagementJson).map(function(key, value) {\n      let rules = conflictManagementJson[key];\n      if(rules) {\n        rules = rules.filter((item) => item.onsize && item.avoid);\n      }\n      queue.set(key, {\n        id: key,\n        rules: rules,\n        resolvedWith: null\n      })\n    });\n    return queue;\n  }\n\n  updateResolvedSlot(adSlotId,resolvedSize) {\n    if(!adSlotId) {\n      throw new Error(\"updateResolvedSlot must be called with an adSlotId!\");\n    }\n    if(!resolvedSize) {\n      throw new Error(\"updateResolvedSlot must be called with a resolved size!\");\n    }\n    if(this.dependencyMap.has(adSlotId)) {\n      this.dependencyMap.get(adSlotId).resolvedWith = resolvedSize;\n    }\n  }\n\n\n  isBlocked(adSlotId) {\n    if(!adSlotId) {\n      throw new Error(\"isBlocked must be called with an adSlotId!\");\n    }\n    let isBlocked = false;\n    for(const adSlotKey of this.dependencyMap.keys()) {\n      const adSlot = this.dependencyMap.get(adSlotKey);\n      for(const adSlotRule of adSlot.rules) {\n        //Found rule specific to our target\n        if(adSlotRule.avoid === adSlotId) {\n          const parentResolvedWith = adSlot.resolvedWith;\n          // Fail fast: parent is not resolved yet - unknown returned size.\n          if(!parentResolvedWith) {\n            isBlocked = true;\n            this.deferredSlots.add(adSlotId);\n          }\n          if(adSlotRule.onsize.split(',').find(size => {\n              size = size.split('x').map(numberStr => parseInt(numberStr));\n              return this.arraysEqual(size,parentResolvedWith)\n            })) {\n            //Block found\n            this.deferredSlots.add(adSlotId);\n            isBlocked = true;\n          }\n        }\n      }\n    }\n    return isBlocked;\n  }\n\n  isBlocking(adSlotId) {\n    if(!adSlotId) {\n      throw new Error(\"isBlocking must be called with an adSlotId!\");\n    }\n    let isBlocking = false;\n    for(const adSlotKey of this.dependencyMap.keys()) {\n      if(adSlotKey === adSlotId) {\n        isBlocking = true;\n      }\n    }\n    return isBlocking;\n  }\n\n  getBlockedSlotsIds(adSlotId) {\n    if(this.dependencyMap.has(adSlotId)) {\n      return Array.from(this.dependencyMap.get(adSlotId).rules.map(adSlot => adSlot.avoid));\n    }\n  }\n\n  arraysEqual(a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length != b.length) return false;\n    for (let i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n}\nConflictResolver.EMPTY_SIZE = []; //TODO : add this to the testing scenarios\nexport default ConflictResolver;\n","import { adTargets, adTypes } from '../objects/adManager';\nimport globalConfig from '../globalConfig';\nimport dfpInstance from '../index';\nexport default class adSlot {\n\n  constructor(adSlotConfig) {\n    this.config = Object.assign({}, adSlotConfig);\n\n    // Part I : Markup configuration - passed from AdManager\n    this.id = this.config.id;\n    if(!this.config.id) {\n      throw new Error(\"an adSlot requires an id!\")\n    }\n    this.target = this.config.target;\n    this.type = this.config.type;\n    this.responsive = this.config.responsive;\n    this.user = this.config.user;\n    this.adManager = this.config.adManager;\n    this.htmlElement = this.config.htmlElement;\n    this.priority = this.config.priority;\n    this.deferredSlot = this.config.deferredSlot;\n\n    // Part II : Global, general ad configuration - passed from AdManager\n    this.department = this.config.department;\n    this.network = this.config.network;\n    this.adUnitBase = this.config.adUnitBase;\n\n    // Part III : ad specific configuration - passed from globalConfig.adSlotConfig\n    this.adSizeMapping = this.config.adSizeMapping;\n    this.responsiveAdSizeMapping = this.config.responsiveAdSizeMapping;\n    this.blacklistReferrers = this.config.blacklistReferrers ?\n      this.config.blacklistReferrers.split(',') : [];\n    this.whitelistReferrers = this.config.whitelistReferrers ?\n      this.config.whitelistReferrers.split(',') : [];\n\n\n    // Part IV : Runtime configuration - calculated data - only present in runtime\n    this.lastResolvedSize = undefined; // Initialized in 'slotRenderEnded' callback\n    this.lastResolvedWithBreakpoint = undefined; // Initialized in 'slotRenderEnded' callback\n    this.slot  = undefined; // Holds a googletag.Slot object\n    // [https://developers.google.com/doubleclick-gpt/reference#googletag.Slot]\n    try {\n      if(!this.deferredSlot) {\n        this.slot = this.defineSlot();\n      }\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * Checks whether this adSlot is an 'Out-of-page' slot or not.\n   * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n   * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n   */\n  isOutOfPage() {\n    if(typeof this.type != 'string') {\n      throw new Error(\"An adSlot cannot by typeless!\",this);\n    }\n    if(this.isMobile() == true) {\n      return false;\n    }\n    switch(this.type) {\n      case adTypes.maavaron: return true;\n      case adTypes.popunder: return true;\n      case adTypes.talkback: return false;\n      case adTypes.regular: return false;\n      default: return false;\n    }\n  }\n\n  /**\n   * Checks whether this adSlot is a 'maavaron' slot or not.\n   * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n   * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n   */\n  isMaavaron() {\n    if(typeof this.type != 'string') {\n      throw new Error(\"An adSlot cannot by typeless!\",this);\n    }\n    if(this.isMobile() == true) {\n      return false;\n    }\n    switch(this.type) {\n      case adTypes.maavaron: return true;\n      default: return false;\n    }\n  }\n\n  isMobile() {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i\n      .test(window.navigator.userAgent || \"\"));\n  }\n  /**\n   * Checks whether or not this adSlot has a non-empty whitelist, and if so, that the current\n   * referrer appears in the whitelist.\n   * Should return false iff there is a whitelist for the current adSlot, but the referrer is not\n   * mentioned in the whitelist.\n   * @returns {boolean} true iff the ad can be displayed.\n   */\n  isWhitelisted() {\n    let whitelisted = false;\n    if (this.whitelistReferrers.length !== 0) {\n      for (const referrer of this.whitelistReferrers) {\n        if (globalConfig.referrer.indexOf(referrer) > -1) {\n          whitelisted = true;\n          break;\n        }\n      }\n    }\n    else {\n      whitelisted = true;\n    }\n    return whitelisted;\n  }\n\n  /**\n   * Checks whether or not this adSlot has a non-empty blacklist, and if so, that the current\n   * referrer does not appear in the blacklist.\n   * Should return true iff there is a blacklist for the current adSlot, and the referrer is\n   * mentioned in the blacklist - to indicate that the adSlot is 'blocked'.\n   * @returns {boolean} true iff the ad cannot be displayed.\n   */\n  isBlacklisted() {\n    let blacklisted = false;\n    if (this.blacklistReferrers.length !== 0) {\n      for (const referrer of this.blacklistReferrers) {\n        if (globalConfig.referrer.indexOf(referrer) > -1) {\n          blacklisted = true;\n          break;\n        }\n      }\n    }\n    return blacklisted;\n  }\n\n\n  /**\n   * Shows the current adSlot.\n   * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n   */\n  show() {\n    if(!this.shown === true) {\n      this.shown = true; //Ensure show will be called once per adSlot\n      googletag.cmd.push(() =>  {\n        if(this.deferredSlot) {\n          this.slot = this.defineSlot();\n        }\n        //console.log('calling show for slot',this.id,' called @',window.performance.now());\n        document.getElementById(this.id).classList.remove('h-hidden');\n        googletag.display(this.id);\n      })\n    }\n  }\n\n  /**\n   * Shows the current adSlot.\n   * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n   */\n  hide() {\n    googletag.cmd.push(() =>  {\n      document.getElementById(this.id).classList.add('h-hidden');\n    })\n  }\n\n  /**\n   * Initializes page-level slot definition for the current slot\n   */\n  defineSlot() {\n    if(this.isMaavaron()) {\n      const maavaronSlot = this.defineMaavaron();\n      if(this.adManager.shouldSendRequestToDfp(this)) {\n        if(!this.shown) {\n          this.shown = true; //Ensure show will be called once\n          maavaronSlot.display();\n        }\n      }\n      return maavaronSlot;\n    }\n    const googletag = window.googletag;\n    const pubads = googletag.pubads();\n    let args = [];\n    let defineFn = this.isOutOfPage() ? googletag.defineOutOfPageSlot : googletag.defineSlot;\n    //3 or 2 params according to the function that we want to activate.\n    args.push(this.getPath());\n    if(this.isOutOfPage() === false) {\n      args.push(this.adSizeMapping);\n    }\n    args.push(this.id);\n    let slot = defineFn.apply(defineFn, args);\n    if(slot) {\n      // Responsive size Mapping\n      if(this.responsive) {\n        let responsiveSlotSizeMapping = googletag.sizeMapping();\n        const breakpoints = globalConfig.breakpointsConfig.breakpoints;\n        const keys = Object.keys(this.responsiveAdSizeMapping);\n        for(const key of keys) { //['xxs','xs',...]\n          responsiveSlotSizeMapping.addSize(\n            [breakpoints[key],100],//100 is a default height, since it is height agnostic\n            this.responsiveAdSizeMapping[key]);\n        }\n        responsiveSlotSizeMapping = responsiveSlotSizeMapping.build();\n        slot = slot.defineSizeMapping(responsiveSlotSizeMapping);\n      }\n      slot = slot.addService(pubads);\n      if(this.isOutOfPage() === false) {\n        slot.setCollapseEmptyDiv(true);\n      }\n    }\n    return slot;\n  }\n\n  /**\n   * Returns the current path calculated for the adSlot\n   * @returns {*} a formatted string that represent the path for the slot definition\n   */\n  getPath() {\n    let path = globalConfig.path || [];\n    path = path.filter(path => path != '.');\n    path = path.map(section => `${this.id}${this.department}${section}`).join('/');\n    //If a path exist, it will be preceded with a forward slash\n    path = path && this.config.department !== '_homepage' ? `/${path}` : '';\n    const calculatedPath = `/${this.config.network}/${this.config.adUnitBase}/${this.id}/${this.id}${this.department}${path}`;\n    return calculatedPath.toLowerCase();\n  }\n\n  slotRendered(event) {\n    const id = event.slot.getAdUnitPath().split('/')[3]; // Convention: [0]/[1]network/[2]base/[3]id\n    const isEmpty = event.isEmpty; // Did the ad return as empty?\n    const resolvedSize = event.size; // What 'creative' size did the ad return with?\n    // Empty or onload callback should be called next?\n\n  }\n\n  /**\n   * Refresh this adSlot\n   */\n  refresh() {\n    googletag.cmd.push(() => {\n      googletag.pubads().refresh([this.slot]);\n    });\n  }\n\n  /**\n   * Shows 'Maavaron' type adSlot using Passback definition\n   */\n  defineMaavaron() {\n    if(!document.referrer.match('loc.haaretz')) {\n      const adUnitMaavaronPath = this.getPath();\n      const adUnitMaavaronSize = [\n        [2, 1]\n      ];\n      const slot = googletag.pubads().definePassback(adUnitMaavaronPath, adUnitMaavaronSize)\n        .setTargeting('UserType', [this.user.type])\n        .setTargeting('age', [this.user.age])\n        .setTargeting('urgdr', [this.user.gender])\n        .setTargeting('articleId', [globalConfig.articleId])\n        .setTargeting('stg', [globalConfig.environment]);\n      return slot;\n    }\n  }\n  /*\n   These functions were on the adUnitDFP prototype:\n   getNumOfImpressions: ()\n   getPeriodImpression: ()\n   hasMoreImpressions: ()\n   hasValidReferrer: ()\n   hide: ()\n   isMaavaron: ()\n   maxImpressions: ()\n   maxImpressionsPeriod: ()\n   nextExpiresDate: ()\n   onEmptyCallBack: ()\n   onLoaded: ()\n   refresh: ()\n   setNumOfImpressions: ()\n   show: ()\n   updateNumOfImpressions: ()\n   */\n}\n","/**\n * Checks whether two arrays are equal\n * @param a the first array to check\n * @param b the second array to check\n * @returns {boolean} true iff both a and b are arrays, with equal values\n */\nexport function arraysEqual(a, b) {\n  if (!a || !b) return false;\n  if (!Array.isArray(a) || !Array.isArray(b)) return false;\n  if (a === b) return true;\n  if (a.length != b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n","/*global googletag*/\nimport User from '../objects/user';\nimport ConflictResolver from '../objects/conflictResolver';\nimport AdSlot from '../objects/adSlot';\nimport { getBreakpoint, getBreakpointName } from '../utils/breakpoints';\nimport { arraysEqual } from '../utils/arrays';\n\n// There are a total of 7 adTargets:\n// \"all\",\"nonPaying\",\"anonymous\",\"registered\",\"paying\",\"digitalOnly\" and \"digitalAndPrint\"\nexport const adPriorities = {\n  high: 'high',\n  normal: 'normal',\n  low: 'low',\n};\n\nexport const adTargets = {\n  all: 'all',\n  nonPaying: 'nonPaying',\n  anonymous: 'anonymous',\n  registered: 'registered',\n  paying: 'paying',\n  digitalOnly: 'digitalOnly',\n  digitalAndPrint: 'digitalAndPrint',\n};\n\n// There are a total of 3 userTypes: \"anonymous\", \"registered\" and \"payer\"\nexport const userTypes = {\n  anonymous: 'anonymous',\n  registered: 'registered',\n  payer: 'payer',\n};\n\nexport const adTypes = {\n  maavaron: '.maavaron',\n  popunder: '.popunder',\n  talkback: '.talkback',\n  regular: '',\n};\n\n\nexport default class AdManager {\n\n  constructor(config) {\n    this.config = Object.assign({}, config);\n    this.user = new User(config);\n    this.conflictResolver = new ConflictResolver(config.conflictManagementConfig);\n    /**\n     * Avoid race conditions by making sure to respect the usual timing of GPT.\n     * This DFP implementation uses Enable-Define-Display:\n     * Define page-level settings\n     * enableServices()\n     * Define slots\n     * Display slots\n     */\n    try {\n      googletag.cmd.push(() => {\n        this.initGoogleTargetingParams(); //  Define page-level settings\n        this.initGoogleGlobalSettings();  //  enableServices()\n        this.initSlotRenderedCallback();  //  Define callbacks\n      });\n      // Holds adSlot objects as soon as possible.\n      googletag.cmd.push(() => {\n        this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.high);\n      });\n      // Once DOM ready, add more adSlots.\n      document.addEventListener('DOMContentLoaded', () => {\n        googletag.cmd.push(() => {\n          this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.high);\n          googletag.cmd.push(() => {\n            this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.normal);\n          });\n        });\n      });\n      // Once window was loaded, add the rest of the adSlots.\n      window.addEventListener('load', () => {\n        googletag.cmd.push(() => {\n          this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.low);\n        });\n      });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * Shows all of the adSlots that can be displayed.\n   */\n  showAllSlots() {\n    for(const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if(adSlot.type !== adTypes.talkback && this.shouldSendRequestToDfp(adSlot)) {\n        adSlot.show();\n      }\n    }\n  }\n\n  /**\n   * Gets all adSlots that has a certain priority\n   */\n  getAdSlotsByPriority(priority) {\n    function priorityFilter(adSlot) {\n      return adSlot.priority === priority;\n    }\n    return Array.from(this.adSlots.values()).filter(priorityFilter);\n  }\n\n  showAllDeferredSlots() {\n    for(const deferredSlotId of this.conflictResolver.deferredSlots) {\n      if(this.adSlots.has(deferredSlotId)) {\n        if(!this.conflictResolver.isBlocked(deferredSlotId)) {\n          const deferredAdSlot = this.adSlots.get(deferredSlotId);\n          if(this.shouldSendRequestToDfp(deferredAdSlot)) {\n            deferredAdSlot.show();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Refreshes all responsive adSlots\n   */\n  refreshAllSlots() {\n    const currentBreakpoint = getBreakpoint();\n    for(const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if(adSlot.responsive) {\n        if(adSlot.lastResolvedWithBreakpoint != currentBreakpoint && this.shouldSendRequestToDfp(adSlot)) {\n          //console.log(`calling refresh for adSlot: ${adSlot.id}`);\n          adSlot.refresh();\n        } else {\n          adSlot.hide();\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes adSlots based on the currently found slot markup (HTML page specific),\n   * and the predefined configuration for the slots.\n   * @param adSlotConfig\n   * @returns {Map}\n   */\n  initAdSlots(adSlotConfig, filteredPriority) {\n    let adSlots = new Map(this.adSlots);\n    let adSlotPlaceholders = Array.from(document.getElementsByClassName('js-dfp-ad'));\n    adSlotPlaceholders = adSlotPlaceholders.filter(node => node.id); //only nodes with an id\n    const adSlotNodeSet = new Set();\n    adSlotPlaceholders = Array.prototype.filter.call(adSlotPlaceholders, node => {\n      if(adSlotNodeSet.has(node.id) === false) { //first occurrence of Node\n        adSlotNodeSet.add(node.id);\n        return true;\n      }\n      return false;\n    });\n    //adSlotPlaceholders = adSlotPlaceholders.sort((a,b) => a.offsetTop - b.offsetTop);\n    adSlotPlaceholders.forEach(adSlot => {\n      const adSlotPriority = adSlotConfig[adSlot.id] ? adSlotConfig[adSlot.id].priority || adPriorities.normal : undefined;\n      if(adSlotConfig[adSlot.id] && adSlots.has(adSlot.id) === false && adSlotPriority === filteredPriority) {\n        //the markup has a matching configuration from adSlotConfig AND was not already defined\n        try {\n          // adSlotConfig is built from globalConfig, but can be overridden by markup\n          const computedAdSlotConfig = Object.assign({},adSlotConfig[adSlot.id],{\n            id: adSlot.id,\n            target: adSlot.attributes['data-audtarget'] ? adSlot.attributes['data-audtarget'].value : adTargets.all,\n            type: this.getAdType(adSlot.id),\n            responsive: adSlotConfig[adSlot.id].responsive,\n            user: this.user,\n            adManager: this,\n            htmlElement: adSlot,\n            department: this.config.department,\n            network: this.config.adManagerConfig.network,\n            adUnitBase: this.config.adManagerConfig.adUnitBase,\n            deferredSlot: this.conflictResolver.isBlocked(adSlot.id),\n            priority: adSlotPriority,\n          });\n          const adSlotInstance = new AdSlot(computedAdSlotConfig);\n          adSlots.set(adSlot.id, adSlotInstance);\n          if(adSlotInstance.type !== adTypes.talkback && adSlotInstance.priority === adPriorities.high && this.shouldSendRequestToDfp(adSlotInstance)) {\n            //console.log('calling show for high priority slot', adSlotInstance.id, ' called @', window.performance.now());\n            adSlotInstance.show();\n          }\n        }\n        catch (err) {\n          console.log(err);\n        }\n      }\n    });\n    return adSlots;\n  }\n\n  isPriority(adSlotId) {\n    return (typeof adSlotId === 'string' && (adSlotId.indexOf('plazma') > 0 || adSlotId.indexOf('maavaron') > 0 || adSlotId.indexOf('popunder') > 0 ));\n  }\n\n  /**\n   * Returns the adType based on the adSlot name.\n   * @param adSlotId the adSlot's identifier.\n   * @returns {*} enumerated export 'adTypes'\n   */\n  getAdType(adSlotId) {\n    if(!adSlotId) {\n      throw new Error(`Missing argument: a call to getAdType must have an adSlotId`,this);\n    }\n    if(adSlotId.indexOf(adTypes.maavaron) > -1) return adTypes.maavaron;\n    if(adSlotId.indexOf(adTypes.popunder) > -1) return adTypes.popunder;\n    if(adSlotId.indexOf(adTypes.talkback) > -1) return adTypes.talkback;\n    return adTypes.regular;\n  }\n\n  /**\n   * @param {object} adSlot the AdSlot\n   * @returns {boolean|*}\n   */\n  shouldSendRequestToDfp(adSlot) {\n    // TODO: go over each one of the following and mark as checked once implemented\n    // Conflict management check\n    return this.conflictResolver.isBlocked(adSlot.id) === false &&\n        // Valid Referrer check\n      adSlot.isWhitelisted() &&\n        // Not in referrer Blacklist\n      adSlot.isBlacklisted() === false &&\n      this.shouldDisplayAdAfterAdBlockRemoval(adSlot) &&\n        // Responsive: breakpoint contains ad?\n      this.doesBreakpointContainAd(adSlot) &&\n        // Targeting check (userType vs. slotTargeting)\n      this.doesUserTypeMatchBannerTargeting(adSlot) &&\n        // Impressions Manager check (limits number of impressions per slot)\n      this.user.impressionManager.reachedQuota(adSlot.id) === false;\n  }\n\n  shouldDisplayAdAfterAdBlockRemoval(adSlot) {\n    return !(this.config.adBlockRemoved === true && (adSlot.type === adTypes.maavaron || adSlot.type === adTypes.popunder));\n  }\n\n  /**\n   * Check whether or not an ad slot should appear for the current user type\n   * @param adSlotOrTarget the adSlot to check or the target as a sting\n   * @returns {boolean} true iff the slot should appear for the user type\n   */\n  doesUserTypeMatchBannerTargeting(adSlotOrTarget) {\n\n    const userType = this.user.type;\n    const adTarget = typeof adSlotOrTarget === 'string' ? adSlotOrTarget : adSlotOrTarget.target;\n\n    switch (adTarget) {\n      case adTargets.all : return true;\n      case adTargets.nonPaying : return userType === userTypes.anonymous || userType === userTypes.registered;\n      case adTargets.anonymous : return userType === userTypes.anonymous;\n      case adTargets.registered : return userType === userTypes.registered;\n      case adTargets.paying : return userType === userTypes.payer;\n      case adTargets.digitalOnly : return userType === userTypes.payer;\n      case adTargets.digitalAndPrint : return userType === userTypes.payer;\n      default: return false;\n    }\n  }\n\n  /**\n   * Report to the AdManager that a breakpoint has been switched (passed from one break to\n   * another). Should there be a responsive slot with a\n   * @param breakpoint the breakpoint that is currently being displayed\n   * @returns {number} the number of adSlots affected by the change\n   */\n  switchedToBreakpoint(breakpoint) {\n    if(!breakpoint) {\n      throw new Error(`Missing argument: a call to switchedToBreakpoint must have an breakpoint`,this);\n    }\n    let count = 0;\n    for(const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if(adSlot.responsive === true && adSlot.lastResolvedWithBreakpoint) {\n        if(adSlot.lastResolvedWithBreakpoint !== breakpoint) {\n          adSlot.refresh();\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Checks whether an adSlot is defined for a given breakpoint (Default: current breakpoint)\n   * @returns {boolean} true iff the adSlot is defined for the given breakpoint.\n   */\n  doesBreakpointContainAd(adSlot, breakpoint = getBreakpoint()) {\n    if(!adSlot) {\n      throw new Error(`Missing argument: a call to doesBreakpointContainAd must have an adSlot`,this);\n    }\n    let containsBreakpoint = true;\n    if(adSlot.responsive === true) {\n      const mapping = adSlot.responsiveAdSizeMapping[getBreakpointName(breakpoint)];\n      if(Array.isArray(mapping) === false) {\n        throw new Error(`Invalid argument: breakpoint:${breakpoint} doesn't exist!`,this);\n      }\n      containsBreakpoint = mapping.length > 0 && !arraysEqual(mapping,[0,0]);\n    }\n    return containsBreakpoint;\n  }\n\n  /**\n   * Initializes the callback from the 'slotRenderEnded' event for each slot\n   */\n  initSlotRenderedCallback() {\n    if(window.googletag && window.googletag.apiReady) {\n      const pubads = window.googletag.pubads();\n      pubads.addEventListener('slotRenderEnded', event => {\n        const id = event.slot.getAdUnitPath().split('/')[3];\n        const isEmpty = event.isEmpty;\n        const resolvedSize = event.size;\n        //console.log('slotRenderEnded for slot',id,' called @',window.performance.now());\n        if(this.adSlots.has(id)) {\n          const adSlot = this.adSlots.get(id);\n          adSlot.lastResolvedSize = resolvedSize;\n          adSlot.lastResolvedWithBreakpoint = getBreakpoint();\n          if(isEmpty) {\n            adSlot.lastResolvedSize = ConflictResolver.EMPTY_SIZE;\n            adSlot.hide();\n            this.releaseSlotDependencies(adSlot);\n          }\n          else {\n            this.user.impressionManager.registerImpression(`${adSlot.id}${this.config.department}`);\n            this.user.impressionManager.registerImpression(`${adSlot.id}_all`);\n            this.releaseSlotDependencies(adSlot, adSlot.lastResolvedSize);\n          }\n        }\n        else {\n          console.error(`Cannot find an adSlot with id: ${id} - Ad Unit path is ${event.slot.getAdUnitPath()}`);\n        }\n      });\n    }\n    else {\n      throw new Error(`googletag api was not ready when 'initSlotRenderedCallback' was called!`);\n    }\n  }\n\n  releaseSlotDependencies(adSlot) {\n    try {\n      const id = adSlot.id;\n      this.conflictResolver.updateResolvedSlot(id, adSlot.lastResolvedSize);\n      if(this.conflictResolver.isBlocking(id)) {\n        // Hide all blocked adSlots\n        for(const blockedSlot of this.conflictResolver.getBlockedSlotsIds(id)) {\n          if(this.conflictResolver.isBlocked(blockedSlot)) {\n            if(this.adSlots.has(blockedSlot)) {\n              this.adSlots.get(blockedSlot).hide();\n            }\n          }\n        }\n        // Show the non blocked\n        for(const deferredSlotKey of this.conflictResolver.deferredSlots.keys()) {\n          const deferredAdSlot = this.adSlots.get(deferredSlotKey);\n          if(deferredAdSlot && this.shouldSendRequestToDfp(deferredAdSlot)) {\n            this.conflictResolver.deferredSlots.delete(deferredSlotKey);\n            if(deferredAdSlot.deferredSlot) {\n              deferredAdSlot.defineSlot();\n              deferredAdSlot.deferredSlot = false;\n            }\n            deferredAdSlot.show();\n          }\n        }\n      }\n    }\n    catch (err) {\n      console.error(`Cannot updateSlotDependencies for adSlot: ${adSlot.id}`);\n    }\n  }\n\n  //TODO - move these to a separate service\n  /**\n   * Initializes page-level targeting params.\n   */\n  initGoogleTargetingParams() {\n    if(window.googletag && window.googletag.apiReady) {\n\n      //Returns a reference to the pubads service.\n      const pubads = googletag.pubads();\n\n      // Environment targeting (dev, test, prod)\n      if (this.config.environment) {\n        pubads.setTargeting('stg', [this.config.environment]);\n      }\n\n      // User targeting\n      if (this.user.type) {\n        pubads.setTargeting('UserType', [this.user.type]);\n      }\n      if (this.user.age) {\n        pubads.setTargeting('age', [this.user.age]);\n      }\n      if (this.user.gender) {\n        pubads.setTargeting('urgdr', [this.user.gender]);\n      }\n\n      // Context targeting\n      if (this.config.articleId) {\n        pubads.setTargeting('articleId', [this.config.articleId]);\n      }\n      if (this.config.gStatCampaignNumber && this.config.gStatCampaignNumber != -1) {\n        pubads.setTargeting('gstat_campaign_id', [this.config.gStatCampaignNumber]);\n      }\n\n      // UTM targeting\n      if (this.config.utm_.content) {\n        pubads.setTargeting('utm_content', [this.config.utm_.content]);\n      }\n      if (this.config.utm_.source) {\n        pubads.setTargeting('utm_source', [this.config.utm_.source]);\n      }\n      if (this.config.utm_.medium) {\n        pubads.setTargeting('utm_medium', [this.config.utm_.medium]);\n      }\n      if (this.config.utm_.campaign) {\n        pubads.setTargeting('utm_campaign', [this.config.utm_.campaign]);\n      }\n      // AdBlock removal\n      if (this.config.adBlockRemoved) {\n        pubads.setTargeting('adblock_removed', [this.config.adBlockRemoved]);\n      }\n      // University targeting - triggered via cookie\n      if (this.config.wifiLocation) {\n        pubads.setTargeting('wifi', [this.config.wifiLocation]);\n      }\n\n      // Ads Centering\n      pubads.setCentering(true);\n    }\n    else {\n      throw new Error(`googletag api was not ready when 'initGoogleTargetingParams' was called!`);\n    }\n  }\n\n  /**\n   * Initializes googletag services.\n   */\n  initGoogleGlobalSettings() {\n    if(window.googletag && window.googletag.apiReady) {\n      if(window.location.search && window.location.search.indexOf('sraon') > 0) {\n        console.log('enableSingleRequest mode: active');\n        googletag.pubads().enableSingleRequest();\n      }\n      if(!this.config.isMobile) {\n        googletag.pubads().enableAsyncRendering();\n      }\n      else {\n        googletag.pubads().enableAsyncRendering(); // disabled: googletag.pubads().enableSyncRendering();\n      }\n      // Enables all GPT services that have been defined for ad slots on the page.\n      googletag.enableServices();\n    }\n    else {\n      throw new Error(`googletag api was not ready when 'initGoogleGlobalSettings' was called!`);\n    }\n  }\n}\n","/* globals googletag */\nimport AdManager  from '../src/objects/adManager';\nimport globalConfig from './globalConfig';\nconst defaultConfig = globalConfig || {};\nimport { getBreakpoint, debounce }  from '../src/utils/breakpoints';\nconst googletagInitTimeout = 10000;\nconst resizeTimeout = 250;\n\nexport default class DFP {\n\n  constructor(config) {\n    this.config = Object.assign({}, defaultConfig, config);\n    this.wasInitialized = false;\n    this.breakpoint = getBreakpoint();\n    this.initWindowResizeListener();\n  }\n\n  /**\n   * This part of the object's construction is dependent on the call to 'init'\n   */\n  resumeInit() {\n    try{\n      this.adManager = new AdManager(this.config);\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * initializes the 'googletag' global namespace and add the\n   * google publish tags library to the page\n   * @returns {Promise} that resolves to true once the googletag api is ready to use\n   * (googletag.apiReady = true)\n   */\n  initGoogleTag() {\n    const dfpThis = this;\n    return new Promise((resolve,reject) => {\n      if (dfpThis.wasInitialized == true || (window.googletag && window.googletag.apiReady)) {\n        this.adManager = this.adManager || new AdManager(this.config);\n        dfpThis.wasInitialized = true;\n        resolve(this.isGoogleTagReady);\n      }\n      else {\n        // set up a place holder for the gpt code downloaded from google\n        window.googletag = window.googletag || {};\n\n        // this is a command queue used by GPT any methods added to it will be\n        // executed when GPT code is available, if GPT is already available they\n        // will be executed immediately\n        window.googletag.cmd = window.googletag.cmd || [];\n        //load google tag services JavaScript\n        (() => {\n          const tag = window.document.createElement('script');\n          tag.async = false;\n          tag.type = 'text/javascript';\n          //var useSSL = 'https:' == document.location.protocol;\n          tag.setAttribute('src','//www.googletagservices.com/tag/js/gpt.js');\n          var node = window.document.getElementsByTagName('script')[0];\n          tag.onload = (() => {\n            dfpThis.wasInitialized = true;\n            dfpThis.resumeInit();\n            resolve(this.isGoogleTagReady);\n          });\n          tag.onerror = ((error) => {\n            dfpThis.wasInitialized = false;\n            reject(error);\n          });\n          node.parentNode.insertBefore(tag, node);\n        })();\n      }\n    });\n  }\n\n  /**\n   *\n   * @returns {Promise}\n   */\n  isGoogleTagReady() {\n    let promise = new Promise((resolve,reject) => {\n      googletag.cmd.push(() => {\n        resolve(this);\n      });\n      setTimeout(() => {\n        if(!(googletag && googletag.apiReady === true)) {\n          reject(new Error(\"googletag failed to initialize on the page!\"));\n        }\n      },googletagInitTimeout);\n    });\n    return promise;\n  }\n\n  /**\n   * Initializes the window resize listener to support responsive ad refreshes\n   */\n  initWindowResizeListener() {\n    const dfpThis = this;\n    function onResize() {\n      const currentBreakpoint = getBreakpoint();\n      if(dfpThis.breakpoint != currentBreakpoint) {\n        dfpThis.breakpoint = currentBreakpoint;\n        if(dfpThis.adManager) {\n          dfpThis.adManager.refreshAllSlots();\n        }\n        else {\n          throw new Error(\"initWindowResizeListener error - adManager instance is not available\")\n        }\n      }\n    }\n    const debouncedFunction = debounce(onResize,resizeTimeout);\n    window.onresize = debouncedFunction;\n  }\n}\n","import DFP from './dfp';\nimport globalConfig from './globalConfig';\n\n// Correct version will be set with the 'rollup-replace plugin'\nDFP.version = 'VERSION';\n\n//// Only for development mode\n//if ( process.env.NODE_ENV !== 'production' ) {\n//  DFP.dev = '123';\n//}\n\nexport const config = globalConfig;\nexport const version = DFP.version;\nexport default DFP;\n"],"names":["globalConfig","userTypes","ImpressionManager","adSlot","AdSlot"],"mappings":"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"}