{"version":3,"file":"dfp.js","sources":["../src/utils/cookieUtils.js","../src/globalConfig.js","../src/utils/time.js","../src/utils/breakpoints.js","../src/objects/impressionsManager.js","../src/objects/user.js","../src/objects/conflictResolver.js","../src/objects/adSlot.js","../src/utils/arrays.js","../src/objects/adManager.js","../src/dfp.js","../src/index.js"],"sourcesContent":["/**\n * Htz-cookie-util\n * @module htzCookieUtil\n * @author Elia Grady elia.grady@haaretz.co.il\n * @license MIT\n */\n\n/**\n * Translates Key-Value string into a convenient map.\n * @param {string} string String in format of \"key<operator>value<separator>.....\"\n * @param {object} options object for overriding defaults:\n * options.separator is a String or regExp that separates between each key value pairs\n * (default is ';'). options.operator is a String or regExp that separates between each key\n * and value within a pair (default is '=').\n * @returns {object} a map object, with key-value mapping according to the passed configuration.\n */\nfunction stringToMap(string,\n  { separator = ';', operator = '=' } = {}) {\n  const map = {};\n  const itemsArr = string.split(separator);\n  //console.log(`called stringToMap with separator:`, separator, `therefore, itemsArr is now:`,itemsArr);\n  for (const key in itemsArr) {\n    if (itemsArr.hasOwnProperty(key)) {\n      const keyValue = itemsArr[key].split(operator);\n      if(keyValue.length == 2 ) { //Only operate on valid splits\n        map[keyValue[0]] = decodeURIComponent(keyValue[1]);\n      }\n    }\n  }\n  return map;\n}\nexport const ssoKey = window.location.hostname.indexOf('haaretz.com') > -1 ? 'engsso' : 'tmsso';\n\n// Translates Cookie string into a convenient map.\nexport default function getCookieAsMap() {\n  const map = stringToMap(document.cookie, { separator: /;\\s?/ });\n  if (typeof map['tmsso'] === 'string') {\n    map['tmsso'] = stringToMap(map['tmsso'], { separator: ':' });\n  }\n  if (typeof map['engsso'] === 'string') {\n    map['engsso'] = stringToMap(map['engsso'], { separator: ':' });\n  }\n  return map;\n}\n\n","/*global dfpBaseConf*/\r\nimport { ssoKey } from '../src/utils/cookieUtils';\r\n//globalConfig for DFP\r\nconst dfpConfig = Object.assign({\r\n  get referrer() {\r\n    return document.referrer ? document.referrer : \"\";\r\n  },\r\n  get isMobile() {\r\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i\r\n      .test(window.navigator.userAgent || \"\"));\r\n  },\r\n  /**\r\n   * Returns true iff the loaded page is the homepage (no inner path)\r\n   * @returns {boolean}\r\n   */\r\n  get isHomepage() {\r\n    return window.location.pathname === \"/\" || this.environment === 3; //'prod'\r\n  },\r\n  get department() {\r\n    return this.isHomepage ? '_homepage' : '_section';\r\n  },\r\n  /**\r\n   * returns the domain the page was loaded to. i.e: 'haaretz.co.il', 'haaretz.com'\r\n   * @returns {string} the domain name from the windows's location hostname property\r\n   */\r\n  get domain() {\r\n    const regexMatch = /([\\d|\\w]+)(\\.co\\.il|\\.com)(.*)?/.exec(window.location.hostname);\r\n    const result = regexMatch ? regexMatch[0] : window.location.hostname;\r\n    return result;\r\n  },\r\n  /**\r\n   * Returns an array of concatenated paths, separated by a dot.\r\n   * For example, for the URL:\r\n   * http://www.haaretz.co.il/news/world/america/us-election-2016/LIVE-1.2869045\r\n   * the path is '/news/world/america/us-election-2016/LIVE-1.2869045'.\r\n   * This function takes the directories ['news', 'world', 'america', 'us-election-2016']\r\n   * and converts it to the following format:\r\n   * ['.news', '.news.world', '.news.world.america', '.news.world.america.us-election-2016']\r\n   * This denotes the path configuration for the given adSlot\r\n   * @returns {Array.<T>} an array of path names\r\n   */\r\n  get path() {\r\n    let sectionArray = this.articleId ?\r\n      window.location.pathname.split('/').slice(1,-1) :\r\n      window.location.pathname.split('/').slice(1);\r\n    sectionArray = sectionArray.filter(path => path != 'wwwMobileSite' && path != 'whtzMobileSite');\r\n    return sectionArray\r\n      .map(section => `.${section}`)\r\n      .map((section, index, arr) => arr.slice(0,index+1)\r\n        .reduce((last, current) => last.concat(current)));\r\n  },\r\n  /**\r\n   * Returns the current environment targeting param, if such is defined.\r\n   * @returns {number} targeting param, 1 for local development, 2 for test servers and 3 for prod.\r\n   * May return undefined if no targeting is specified.\r\n   */\r\n  get environment() {\r\n    const env = {\r\n      dev: 1,\r\n      test: 2,\r\n      prod: 3,\r\n    };\r\n    return window.location.port === '8080' ? env.dev :\r\n      (window.location.hostname.indexOf('pre.haaretz.co.il') > -1\r\n      || window.location.hostname.indexOf('tmtest.themarker.com') > -1) ? env.test :\r\n        (window.location.pathname.indexOf('/cmlink/Haaretz.HomePage') > -1\r\n        || window.location.pathname.indexOf('/cmlink/TheMarker.HomePage') > -1) ? env.prod : undefined;\r\n  },\r\n  /**\r\n   * Returns the articleIf if on an article page, or null otherwise\r\n   * @returns {string} an articleId string from the pathname, or null if none is found\r\n   */\r\n  get articleId() {\r\n    const articleIdMatch = /\\d\\.\\d+/g.exec(window.location.pathname);\r\n    let articleId;\r\n    if(articleIdMatch) {\r\n      articleId = articleIdMatch.pop(); //Converts [\"1.23145\"] to \"1.23145\"\r\n    }\r\n    return articleId;\r\n  },\r\n  utm_ : {\r\n    get content() {\r\n      return this.getUrlParam('utm_content');\r\n    },\r\n    get source() {\r\n      return this.getUrlParam('utm_source');\r\n    },\r\n    get medium() {\r\n      return this.getUrlParam('utm_medium');\r\n    },\r\n    get campaign() {\r\n      return this.getUrlParam('utm_campaign');\r\n    },\r\n    getUrlParam(key) {\r\n      let results = RegExp(`(${key})(=)([^&\"]+)`).exec(window.location.search);\r\n      return results && results[3] ? results[3] : undefined;\r\n    },\r\n  },\r\n  get adBlockRemoved() {\r\n    let adBlockRemoved;\r\n    try {\r\n      adBlockRemoved = localStorage.getItem('adblock_removed') ?\r\n        true : false;\r\n    }\r\n    catch (err) {\r\n      adBlockRemoved = false;\r\n    }\r\n    return adBlockRemoved;\r\n  },\r\n  get gStatCampaignNumber() {\r\n    let gstatCampaign;\r\n    try {\r\n      gstatCampaign = localStorage.getItem('GstatCampaign') ?\r\n        JSON.parse(localStorage.getItem('GstatCampaign')) : undefined;\r\n    }\r\n    catch (err) {\r\n      //In case of thrown 'SecurityError' or 'QuotaExceededError', the variable should be undefined\r\n      gstatCampaign = undefined;\r\n    }\r\n    return gstatCampaign ? gstatCampaign['CampaignNumber'] : undefined;\r\n  },\r\n  adSlotConfig: {\r\n    \"haaretz.co.il.example.slot\" : {\r\n      id: \"slotId\",\r\n      //path : \"/network/base/slotId/slotId_subsection\", Will be calculated from AdManager\r\n      responsive: true,\r\n      adSizeMapping: [['width1','height1'],...['widthN','heightN']],\r\n      responsiveAdSizeMapping : {\r\n        xxs: [['width1','height1'],...['widthN','heightN'],],\r\n        xs: [['width1','height1'],...['widthN','heightN'],],\r\n        s: [['width1','height1'],...['widthN','heightN'],],\r\n        m: [['width1','height1'],...['widthN','heightN'],],\r\n        l: [['width1','height1'],...['widthN','heightN'],],\r\n        xl: [['width1','height1'],...['widthN','heightN'],],\r\n        xxl: [['width1','height1'],...['widthN','heightN'],],\r\n      },\r\n      blacklistReferrers: \"comma, delimited, blacklisted, referrer, list\",\r\n      whitelistReferrers: \"comma, delimited, referrer, list\",\r\n    }\r\n  },\r\n  adManagerConfig : {\r\n    network: '9401',\r\n    adUnitBase: 'haaretz.co.il_Web',\r\n  },\r\n  breakpointsConfig : {\r\n    get breakpoints() {\r\n      const isType1 = true; //Override in VM from backend to control this toggle.\r\n      return isType1 ? this.breakpoints1 : this.breakpoints2;\r\n    },\r\n    // Type 1\r\n    breakpoints1 : {\r\n      xxs: 600,\r\n      xs: 761,\r\n      s: 993,\r\n      m: 1009,\r\n      l: 1291,\r\n      xl: 1600,\r\n      xxl: 1900,\r\n    },\r\n    // Type 2\r\n    breakpoints2 : {\r\n      xxs: 600,\r\n      xs: 1000,\r\n      s: 1150,\r\n      m: 1281,\r\n      l: 1600,\r\n      xl: 1920,\r\n      xxl: 1920,\r\n    }\r\n  },\r\n  userConfig: {\r\n    type : undefined,\r\n    age: undefined,\r\n    gender: undefined,\r\n  },\r\n  conflictManagementConfig: {\r\n    \"blocking.ad.unit.name\": [\r\n      {\r\n        onsize: \"1280x200,970x250,3x3\",\r\n        avoid: \"blocked.ad.unit.name\"\r\n      },\r\n      {\r\n        onsize: \"1280x200,970x250,3x3\",\r\n        avoid: \"blocked.ad.unit.name\"\r\n      }\r\n    ]\r\n  },\r\n  impressionManagerConfig: {\r\n    \"ad.unit.name\": {\r\n      target: 'all|section|homepage',\r\n      frequency: '$1/$2(day|hour)',\r\n      exposed: 0,\r\n      expires: (new Date).getTime()\r\n    }\r\n  },\r\n  sso: ssoKey,\r\n\r\n},window.dfpConfig);\r\n\r\nexport default dfpConfig;\r\n","/**\n * Helper function. Adds N hours to a given date object.\n * @param date the date to derive from\n * @param hours the amount of hours to add, in whole numbers\n * @returns {Date} the new date, derived from adding the given hours\n */\nexport function addHours(date, hours) {\n  if(!date) {\n    throw new SyntaxError(`addHours called without a required 'date' parameter!`);\n  }\n  if(!hours) {\n    throw new SyntaxError(`addHours called without a required 'hours' parameter!`);\n  }\n  else if(isNaN(parseInt(hours))) {\n    throw new TypeError(`addHours called with an invalid integer 'hours' parameter!`);\n  }\n  const result = new Date(date);\n  result.setHours(result.getHours() + parseInt(hours));\n  return result;\n}\n\n/**\n * Helper function. Adds N days to a given date object.\n * @param date the date to derive from\n * @param hours the amount of days to add, in whole numbers\n * @returns {Date} the new date, derived from adding the given days\n */\nexport function addDays(date, days) {\n  if(!date) {\n    throw new SyntaxError(`addDays called without a required 'date' parameter!`);\n  }\n  if(!days) {\n    throw new SyntaxError(`addDays called without a required 'hours' parameter!`);\n  }\n  else if(isNaN(parseInt(days))) {\n    throw new TypeError(`addDays called with an invalid integer 'hours' parameter!`);\n  }\n  const result = new Date(date);\n  result.setDate(result.getDate() + parseInt(days));\n  return result;\n}\n","import globalConfig from '../globalConfig';\n\nconst breakpoints = globalConfig.breakpointsConfig.breakpoints;\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @param func the function to run\n * @param wait the timeout period to avoid running the function\n * @param immediate leading edge modifier\n * @returns {Function} the debounced function\n * //TODO translate to ES6 format - in progress...\n */\nexport function debounce(func, wait = 100, immediate) {\n  let timeout;\n  return function() {\n    const context = this, args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @returns {number} the break that the current width represents\n */\nexport function getBreakpoint() {\n  let breakpoint = breakpoints.xxl;\n  let windowWidth = window.innerWidth;\n  if(windowWidth < breakpoints.xxl) { breakpoint = breakpoints.xl } else { return breakpoint }\n  if(windowWidth < breakpoints.xl) { breakpoint = breakpoints.l } else { return breakpoint }\n  if(windowWidth < breakpoints.l) { breakpoint = breakpoints.m } else { return breakpoint }\n  if(windowWidth < breakpoints.m) { breakpoint = breakpoints.s } else { return breakpoint }\n  if(windowWidth < breakpoints.s) { breakpoint = breakpoints.xs } else { return breakpoint }\n  if(windowWidth < breakpoints.xs) { breakpoint = breakpoints.xxs } else { return breakpoint }\n  return breakpoint\n}\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @returns {string} the breakpoint label that the current width represents\n */\nexport function getBreakpointName(breakpoint) {\n  let resultBreakpoint = 'xxl';\n  let windowWidth = breakpoint || window.innerWidth;\n  if(windowWidth < breakpoints.xxl) { resultBreakpoint = 'xl' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.xl) { resultBreakpoint = 'l' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.l) { resultBreakpoint = 'm' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.m) { resultBreakpoint = 's' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.s) { resultBreakpoint = 'xs' } else { return resultBreakpoint }\n  if(windowWidth < breakpoints.xs) { resultBreakpoint = 'xxs' } else { return resultBreakpoint }\n  return resultBreakpoint\n}\n\n","import globalConfig from '../globalConfig';\nimport { addHours, addDays } from '../utils/time';\nimport { debounce }  from '../utils/breakpoints';\n\nexport const keys = {\n  impressions : 'impressions',\n  frequency : 'frequency',\n  /**\n   * [0] - full match\n   * [1] - impression count i.e: \"1\" | \"22\"\n   * [2] - impression expiry range quantifier  i.e: \"1\" | \"22\"\n   * [3] - impression expiry range unit i.e: \"day\" | \"hour\"\n   */\n  frequencyRegex: /(\\d+)\\/(\\d+)(day|hour)/,\n  expires : 'expires',\n  exposed : 'exposed',\n  target : 'target',\n  maxImpressions : 'maxImpressions',\n  hours : 'hour',\n  days : 'day',\n  adSlotId : 'id',\n};\n\n\n\n\nexport default class ImpressionsManager {\n\n  constructor(impressionManagerConfig) {\n    this.now = (new Date).getTime(); //this date is used for comparisons only\n    this.config = Object.assign({}, impressionManagerConfig);\n    this.impressions = this.retrieveImpressionsData();\n    this.initImpressionMap();\n  }\n\n  retrieveImpressionsData() {\n    let impressions = this.migrateImpressionsData();\n    //Merge migrated data with new data\n    //console.log('Migrated: ',impressions);\n    Object.keys(impressions).map((key, index) => {\n      impressions[key] = Object.assign({},impressions[key],this.config[key]);\n    });\n    //console.log('Merged: ',impressions);\n    //Filter out entries without frequency\n    for(const key in impressions) {\n      if(impressions.hasOwnProperty(key)) {\n        if(!impressions[key][keys.frequency]) {\n          //console.log(`Removing ${key} - since it does not have a frequency`,impressions[key]);\n          delete impressions[key];\n        }\n      }\n    }\n    //console.log('Filtered: ',impressions);\n    return impressions;\n  }\n\n  migrateImpressionsData() {\n    let impressions;\n    let impressionsData;\n    try {\n      impressionsData = window.localStorage.getItem(keys.impressions);\n    }\n    catch (err) {\n      //In case of thrown 'SecurityError' or 'QuotaExceededError', the variable should be undefined\n      impressionsData = undefined;\n    }\n    try {\n      impressions = JSON.parse(impressionsData);\n    }\n    catch (err) {\n      //Here is where old impression data is converted to new format\n      impressions = {};\n      const oldImpressionsArray = impressionsData.split(';').filter(e => e);\n\n      oldImpressionsArray.forEach((impression) => {\n        try {\n          const adUnitImpression = impression.split(' = ');\n          const name = adUnitImpression[0];\n          const data = adUnitImpression[1];\n          let tmp = name.split('.');\n          let target = tmp.pop();\n          if(target && target == 'hp') {\n            target = 'homepage';\n          }\n          const slotId = tmp.join('.');\n          const id = `${slotId}_${target}`;\n          const exposed = parseInt(data.split('/')[0]) || 0;\n          const expires = parseInt(data.split('/')[1]) || this.now;\n          impressions[id] = {};\n          impressions[id][keys.adSlotId] = slotId;\n          impressions[id][keys.target] = target;\n          impressions[id][keys.exposed] = exposed;\n          impressions[id][keys.expires] = expires;\n        }\n        catch (err) {\n          console.log(`Failed converting impression: ${impression}`,err);\n        }\n\n      });\n    }\n    return impressions || {};\n  }\n\n  /**\n   * Define the debounced version of the local storage save\n   */\n  saveImpressionsToLocalStorage() {\n    if(this.debouncedSave && typeof this.debouncedSave === 'function') {\n      this.debouncedSave();\n    }\n    else {\n      this.debouncedSave = debounce(this.saveImpressionsToLocalStorageImpl, 250, false);\n      this.debouncedSave();\n    }\n  }\n\n  /**\n   * Implementation of saving the impression map to localstorage\n   */\n  saveImpressionsToLocalStorageImpl() {\n    try {\n      localStorage.setItem(keys.impressions, JSON.stringify(this.impressions));\n    }\n    catch (err) {\n      //In case of thrown 'SecurityError' or 'QuotaExceededError', the operation should not break\n      console.log(`localStorage isn't available:`,err);\n    }\n  }\n\n  /**\n   * Initializes the impression map based on the retrieved impressions and the global\n   * configuration.\n   */\n  initImpressionMap() {\n    Object.keys(this.config).map((key, index) => {\n      const adSlotId = key;\n      let slot, shouldUpdateExpiryDate = false;\n      // Case I: Existing slot (update)\n      if(slot = this.impressions[adSlotId]) {\n        // Case I.I Existing slot, frequency has changed\n        if( this.config[adSlotId][keys.frequency] =!  slot[keys.frequency]) {\n          // Updating the frequency will trigger a new expiry date\n          shouldUpdateExpiryDate = true;\n          this.impressions[adSlotId][keys.frequency] = this.config[adSlotId][keys.frequency];\n        } // Case I.II Existing slot, old expiry date\n        else if(this.now >  slot[keys.expires]) {\n          // Old value that should trigger a new expiry date\n          shouldUpdateExpiryDate = true;\n        }\n      } // Case II: Non-existing slot (create new slot)\n      else {\n        this.initSlotFromConfig(adSlotId);\n      } //Finally, updates the expiry date (cases I.I and I.II)\n      if(shouldUpdateExpiryDate) {\n        this.updateExpiryDate(adSlotId);\n      }\n    });\n  }\n\n  /**\n   * Updates the expiry date of a slotName based on the configured slot frequency\n   * @param slotName the slotName to update.\n   */\n  updateExpiryDate(slotName) {\n    let now = new Date();\n    if(!(this.impressions[slotName] && this.impressions[slotName][keys.frequency])) {\n      throw new Error(`Unable to update expiry date for slot: ${slotName}\n      - this.impressions[slotName]:`,this.impressions[slotName]);\n    }\n    const frequencyMap = this.impressions[slotName][keys.frequency].match(keys.frequencyRegex);\n    now.setMilliseconds(0);\n    now.setSeconds(0);\n    now.setMinutes(0);\n    if(frequencyMap.indexOf(keys.days) > -1) {\n      now.setHours(0);\n    }\n    this.impressions[slotName][keys.expires] = (frequencyMap.indexOf(keys.days) > -1 ?\n      addDays(now, frequencyMap[2]) : addHours(now, frequencyMap[2])).getTime();\n\n    //Set max impressions:\n    this.impressions[slotName][keys.maxImpressions] = parseInt(frequencyMap[1]);\n    //Reset exposed\n    this.impressions[slotName][keys.exposed] = 0;\n  }\n\n\n\n  /**\n   * Initializes a non-existing slot from the passed global configuration for the slot\n   * @param slotName the name of the slot to create\n   */\n  initSlotFromConfig(slotName) {\n    let slot = this.impressions[slotName] || {};\n    slot[keys.frequency] = this.config[slotName][keys.frequency];\n    slot[keys.target] = this.config[slotName][keys.target];\n    slot[keys.exposed] = 0;\n    this.impressions[slotName] = slot;\n    this.updateExpiryDate(slotName);\n  }\n\n  /**\n   * Registers an impression for a given adSlot.\n   * @param adSlotId the adSlot id to register an impression for\n   * @returns {boolean} returns true iff the impression has been registered\n   */\n  registerImpression(adSlotId) {\n    if(adSlotId) {\n      const slot = this.impressions[adSlotId];\n      if(slot) {\n        const exposed = slot[keys.exposed];\n        if(isNaN(parseInt(exposed)) === false) {\n          this.impressions[adSlotId][keys.exposed] += 1;\n          try {\n            this.saveImpressionsToLocalStorage();\n          }\n          catch (err) {\n            console.log('Error saving ad impressions to localStorage!', err);\n          }\n          return true;\n        }\n      }\n\n    }\n    return false;\n  }\n\n  /**\n   * Checks whether an adSlot has reached it's allocated impressions count.\n   * @param adSlotId the adSlot to check\n   * @returns {boolean} true iff there is a quota for the adSlot, and it has been reached\n   */\n  reachedQuota(adSlotId) {\n    // An adSlotId is suffixed with _homepage | _section if it's targeting is different\n    // between the two. If there is no difference, an _all suffix can be used.\n    adSlotId = this.impressions[`${adSlotId}${globalConfig.department}`] ?\n      `${adSlotId}${globalConfig.department}`: `${adSlotId}_all`;\n\n    let slot = this.impressions[adSlotId];\n    let atQuota = false;\n    if(slot) {\n      let now = (new Date()).getTime();\n      //Second element of 2/4day matches '2'\n      const expires = this.impressions[adSlotId][keys.expires];\n      if(expires < now) {\n        this.updateExpiryDate(adSlotId);\n      }\n      else {\n        const maxImpressions = this.impressions[adSlotId][keys.maxImpressions];\n        //Not expired, did reach max impressions?\n        if(maxImpressions) {\n          atQuota = this.impressions[adSlotId][keys.exposed] >= maxImpressions;\n        }\n      }\n\n    }\n    return atQuota;\n  }\n\n\n  /**\n   * Clears the impression map from 'exposed' impressions\n   */\n  resetImpressions() {\n    const impressions = this.impressions;\n    for(const key in impressions) {\n      if(impressions.hasOwnProperty(key)) {\n        if(impressions[key][keys.exposed]) {\n          impressions[key][keys.exposed] = 0;\n        }\n      }\n    }\n    this.saveImpressionsToLocalStorage();\n  }\n}\n","import getCookieAsMap, { ssoKey } from '../utils/cookieUtils';\nimport ImpressionManager from './impressionsManager';\nimport globalConfig from '../globalConfig';\n\nexport const userTypes = {\n  payer: 'payer',\n  registered: 'registered',\n  anonymous: 'anonymous'\n};\n\nexport default class User {\n  constructor(config) {\n    this.config = Object.assign({}, config.userConfig);\n    let cookieMap = getCookieAsMap();\n    this.ssoKey = globalConfig.sso;\n    if(!cookieMap[this.ssoKey]) {\n      //console.log(`ssoKey flipped! - was ${this.ssoKey}`);\n      //Flips the ssoKey, since cookieMap.ssoKey cannot be used to retrieve data\n      this.ssoKey = this.ssoKey === 'tmsso' ? 'engsso' : 'tmsso';\n      //console.log(`ssoKey flipped! - now ${this.ssoKey}`);\n    }\n    this.type = this.getUserType(cookieMap);\n    this.impressionManager = new ImpressionManager(config.impressionManagerConfig);\n    this.age = this.getUserAge(cookieMap);\n    this.gender = this.getUserGender(cookieMap);\n  }\n\n  getUserType(cookieMap) {\n    if(cookieMap && cookieMap[this.ssoKey]) {\n      const payerProp = window.location.hostname.indexOf(\"haaretz.com\") > -1 ? 'HdcPusr' : 'HtzPusr';\n      return cookieMap[payerProp] ? userTypes.payer : userTypes.registered\n    }\n    else {\n      return userTypes.anonymous;\n    }\n  }\n\n  getUserAge(cookieMap) {\n    let age;\n    const usrae = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].usrae;\n    if(usrae) {\n      age = parseInt(cookieMap[this.ssoKey].usrae);\n      age = age > 0 ? age : undefined;\n    }\n    return age;\n  }\n\n  getUserGender(cookieMap) {\n    let gender;\n    const urgdr = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].urgdr;\n    if(urgdr) {\n      gender = parseInt(cookieMap[this.ssoKey].urgdr);\n      gender = gender === 2 || gender === 1 ? gender : undefined;\n    }\n    return gender;\n  }\n}\n","class ConflictResolver {\n  constructor(conflictManagementConfig) {\n    this.dependencyMap = this.initializeDependencyMap(conflictManagementConfig);\n    this.deferredSlots = new Set();\n  }\n  initializeDependencyMap(conflictManagementJson) {\n    let queue = new Map();\n    Object.keys(conflictManagementJson).map(function(key, value) {\n      let rules = conflictManagementJson[key];\n      if(rules) {\n        rules = rules.filter((item) => item.onsize && item.avoid);\n      }\n      queue.set(key, {\n        id: key,\n        rules: rules,\n        resolvedWith: null\n      })\n    });\n    return queue;\n  }\n\n  updateResolvedSlot(adSlotId,resolvedSize) {\n    if(!adSlotId) {\n      throw new Error(\"updateResolvedSlot must be called with an adSlotId!\");\n    }\n    if(!resolvedSize) {\n      throw new Error(\"updateResolvedSlot must be called with a resolved size!\");\n    }\n    if(this.dependencyMap.has(adSlotId)) {\n      this.dependencyMap.get(adSlotId).resolvedWith = resolvedSize;\n    }\n  }\n\n\n  isBlocked(adSlotId) {\n    if(!adSlotId) {\n      throw new Error(\"isBlocked must be called with an adSlotId!\");\n    }\n    let isBlocked = false;\n    for(const adSlotKey of this.dependencyMap.keys()) {\n      const adSlot = this.dependencyMap.get(adSlotKey);\n      for(const adSlotRule of adSlot.rules) {\n        //Found rule specific to our target\n        if(adSlotRule.avoid === adSlotId) {\n          const parentResolvedWith = adSlot.resolvedWith;\n          // Fail fast: parent is not resolved yet - unknown returned size.\n          if(!parentResolvedWith) {\n            isBlocked = true;\n            this.deferredSlots.add(adSlotId);\n          }\n          if(adSlotRule.onsize.split(',').find(size => {\n              size = size.split('x').map(numberStr => parseInt(numberStr));\n              return this.arraysEqual(size,parentResolvedWith)\n            })) {\n            //Block found\n            this.deferredSlots.add(adSlotId);\n            isBlocked = true;\n          }\n        }\n      }\n    }\n    return isBlocked;\n  }\n\n  isBlocking(adSlotId) {\n    if(!adSlotId) {\n      throw new Error(\"isBlocking must be called with an adSlotId!\");\n    }\n    let isBlocking = false;\n    for(const adSlotKey of this.dependencyMap.keys()) {\n      if(adSlotKey === adSlotId) {\n        isBlocking = true;\n      }\n    }\n    return isBlocking;\n  }\n\n  getBlockedSlotsIds(adSlotId) {\n    if(this.dependencyMap.has(adSlotId)) {\n      return Array.from(this.dependencyMap.get(adSlotId).rules.map(adSlot => adSlot.avoid));\n    }\n  }\n\n  arraysEqual(a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length != b.length) return false;\n    for (let i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n}\nConflictResolver.EMPTY_SIZE = []; //TODO : add this to the testing scenarios\nexport default ConflictResolver;\n","import { adTargets, adTypes } from '../objects/adManager';\nimport globalConfig from '../globalConfig';\nimport dfpInstance from '../index';\nexport default class adSlot {\n\n  constructor(adSlotConfig) {\n    this.config = Object.assign({}, adSlotConfig);\n\n    // Part I : Markup configuration - passed from AdManager\n    this.id = this.config.id;\n    if(!this.config.id) {\n      throw new Error(\"an adSlot requires an id!\")\n    }\n    this.target = this.config.target;\n    this.type = this.config.type;\n    this.responsive = this.config.responsive;\n    this.user = this.config.user;\n    this.adManager = this.config.adManager;\n\n    // Part II : Global, general ad configuration - passed from AdManager\n    this.department = this.config.department;\n    this.network = this.config.network;\n    this.adUnitBase = this.config.adUnitBase;\n\n    // Part III : ad specific configuration - passed from globalConfig.adSlotConfig\n    this.adSizeMapping = this.config.adSizeMapping;\n    this.responsiveAdSizeMapping = this.config.responsiveAdSizeMapping;\n    this.blacklistReferrers = this.config.blacklistReferrers ?\n      this.config.blacklistReferrers.split(',') : [];\n    this.whitelistReferrers = this.config.whitelistReferrers ?\n      this.config.whitelistReferrers.split(',') : [];\n\n\n    // Part IV : Runtime configuration - calculated data - only present in runtime\n    this.lastResolvedSize = undefined; // Initialized in 'slotRenderEnded' callback\n    this.lastResolvedWithBreakpoint = undefined; // Initialized in 'slotRenderEnded' callback\n    this.slot  = undefined; // Holds a googletag.Slot object\n    // [https://developers.google.com/doubleclick-gpt/reference#googletag.Slot]\n    try {\n      this.slot = this.defineSlot();\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * Checks whether this adSlot is an 'Out-of-page' slot or not.\n   * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n   * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n   */\n  isOutOfPage() {\n    if(typeof this.type != 'string') {\n      throw new Error(\"An adSlot cannot by typeless!\",this);\n    }\n    if(this.isMobile() == true) {\n      return false;\n    }\n    switch(this.type) {\n      case adTypes.maavaron: return true;\n      case adTypes.popunder: return true;\n      case adTypes.talkback: return false;\n      case adTypes.regular: return false;\n      default: return false;\n    }\n  }\n\n  /**\n   * Checks whether this adSlot is a 'maavaron' slot or not.\n   * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n   * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n   */\n  isMaavaron() {\n    if(typeof this.type != 'string') {\n      throw new Error(\"An adSlot cannot by typeless!\",this);\n    }\n    if(this.isMobile() == true) {\n      return false;\n    }\n    switch(this.type) {\n      case adTypes.maavaron: return true;\n      default: return false;\n    }\n  }\n\n  isMobile() {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i\n      .test(window.navigator.userAgent || \"\"));\n  }\n  /**\n   * Checks whether or not this adSlot has a non-empty whitelist, and if so, that the current\n   * referrer appears in the whitelist.\n   * Should return false iff there is a whitelist for the current adSlot, but the referrer is not\n   * mentioned in the whitelist.\n   * @returns {boolean} true iff the ad can be displayed.\n   */\n  isWhitelisted() {\n    let whitelisted = false;\n    if (this.whitelistReferrers.length !== 0) {\n      for (const referrer of this.whitelistReferrers) {\n        if (globalConfig.referrer.indexOf(referrer) > -1) {\n          whitelisted = true;\n          break;\n        }\n      }\n    }\n    else {\n      whitelisted = true;\n    }\n    return whitelisted;\n  }\n\n  /**\n   * Checks whether or not this adSlot has a non-empty blacklist, and if so, that the current\n   * referrer does not appear in the blacklist.\n   * Should return true iff there is a blacklist for the current adSlot, and the referrer is\n   * mentioned in the blacklist - to indicate that the adSlot is 'blocked'.\n   * @returns {boolean} true iff the ad cannot be displayed.\n   */\n  isBlacklisted() {\n    let blacklisted = false;\n    if (this.blacklistReferrers.length !== 0) {\n      for (const referrer of this.blacklistReferrers) {\n        if (globalConfig.referrer.indexOf(referrer) > -1) {\n          blacklisted = true;\n          break;\n        }\n      }\n    }\n    return blacklisted;\n  }\n\n\n  /**\n   * Shows the current adSlot.\n   * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n   */\n  show() {\n    googletag.cmd.push(() =>  {\n      console.log('calling show for slot',this.id,' called @',window.performance.now());\n      document.getElementById(this.id).classList.remove('h-hidden');\n      googletag.display(this.id);\n    })\n  }\n\n  /**\n   * Shows the current adSlot.\n   * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n   */\n  hide() {\n    googletag.cmd.push(() =>  {\n      document.getElementById(this.id).classList.add('h-hidden');\n    })\n  }\n\n  /**\n   * Initializes page-level slot definition for the current slot\n   */\n  defineSlot() {\n    if(this.isMaavaron()) {\n      const maavaronSlot = this.defineMaavaron();\n      if(this.adManager.shouldSendRequestToDfp(this)) {\n        maavaronSlot.display();\n      }\n      return maavaronSlot;\n    }\n    const googletag = window.googletag;\n    const pubads = googletag.pubads();\n    let args = [];\n    let defineFn = this.isOutOfPage() ? googletag.defineOutOfPageSlot : googletag.defineSlot;\n    //3 or 2 params according to the function that we want to activate.\n    args.push(this.getPath());\n    if(this.isOutOfPage() === false) {\n      args.push(this.adSizeMapping);\n    }\n    args.push(this.id);\n    let slot = defineFn.apply(defineFn, args);\n    if(slot) {\n      // Responsive size Mapping\n      if(this.responsive) {\n        let responsiveSlotSizeMapping = googletag.sizeMapping();\n        const breakpoints = globalConfig.breakpointsConfig.breakpoints;\n        const keys = Object.keys(this.responsiveAdSizeMapping);\n        for(const key of keys) { //['xxs','xs',...]\n          responsiveSlotSizeMapping.addSize(\n            [breakpoints[key],100],//100 is a default height, since it is height agnostic\n            this.responsiveAdSizeMapping[key]);\n        }\n        responsiveSlotSizeMapping = responsiveSlotSizeMapping.build();\n        slot = slot.defineSizeMapping(responsiveSlotSizeMapping);\n      }\n      slot = slot.addService(pubads);\n      if(this.isOutOfPage() === false) {\n        slot.setCollapseEmptyDiv(true);\n      }\n    }\n    return slot;\n  }\n\n  /**\n   * Returns the current path calculated for the adSlot\n   * @returns {*} a formatted string that represent the path for the slot definition\n   */\n  getPath() {\n    let path = globalConfig.path || [];\n    path = path.filter(path => path != '.');\n    path = path.map(section => `${this.id}${this.department}${section}`).join('/');\n    //If a path exist, it will be preceded with a forward slash\n    path = path && this.config.department !== '_homepage' ? `/${path}` : '';\n    const calculatedPath = `/${this.config.network}/${this.config.adUnitBase}/${this.id}/${this.id}${this.department}${path}`;\n    return calculatedPath.toLowerCase();\n  }\n\n  slotRendered(event) {\n    const id = event.slot.getAdUnitPath().split('/')[3]; // Convention: [0]/[1]network/[2]base/[3]id\n    const isEmpty = event.isEmpty; // Did the ad return as empty?\n    const resolvedSize = event.size; // What 'creative' size did the ad return with?\n    // Empty or onload callback should be called next?\n    \n  }\n\n  /**\n   * Refresh this adSlot\n   */\n  refresh() {\n    googletag.cmd.push(() => {\n      googletag.pubads().refresh([this.slot]);\n    });\n  }\n\n  /**\n   * Shows 'Maavaron' type adSlot using Passback definition\n   */\n  defineMaavaron() {\n    if(!document.referrer.match('loc.haaretz')) {\n      const adUnitMaavaronPath = this.getPath();\n      const adUnitMaavaronSize = [\n        [2, 1]\n      ];\n      const slot = googletag.pubads().definePassback(adUnitMaavaronPath, adUnitMaavaronSize)\n        .setTargeting('UserType', [this.user.type])\n        .setTargeting('age', [this.user.age])\n        .setTargeting('urgdr', [this.user.gender])\n        .setTargeting('articleId', [globalConfig.articleId])\n        .setTargeting('stg', [globalConfig.environment]);\n      return slot;\n    }\n  }\n  /*\n   These functions were on the adUnitDFP prototype:\n   getNumOfImpressions: ()\n   getPeriodImpression: ()\n   hasMoreImpressions: ()\n   hasValidReferrer: ()\n   hide: ()\n   isMaavaron: ()\n   maxImpressions: ()\n   maxImpressionsPeriod: ()\n   nextExpiresDate: ()\n   onEmptyCallBack: ()\n   onLoaded: ()\n   refresh: ()\n   setNumOfImpressions: ()\n   show: ()\n   updateNumOfImpressions: ()\n   */\n}\n","/**\n * Checks whether two arrays are equal\n * @param a the first array to check\n * @param b the second array to check\n * @returns {boolean} true iff both a and b are arrays, with equal values\n */\nexport function arraysEqual(a, b) {\n  if (!a || !b) return false;\n  if (!Array.isArray(a) || !Array.isArray(b)) return false;\n  if (a === b) return true;\n  if (a.length != b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n","/*global googletag*/\nimport User from '../objects/user';\nimport ConflictResolver from '../objects/conflictResolver';\nimport AdSlot from '../objects/adSlot';\nimport globalConfig from '../globalConfig';\nimport { getBreakpoint, getBreakpointName } from '../utils/breakpoints';\nimport { arraysEqual } from '../utils/arrays';\n\n// There are a total of 7 adTargets:\n// \"all\",\"nonPaying\",\"anonymous\",\"registered\",\"paying\",\"digitalOnly\" and \"digitalAndPrint\"\nexport const adTargets = {\n  all: 'all',\n  nonPaying: 'nonPaying',\n  anonymous: 'anonymous',\n  registered: 'registered',\n  paying: 'paying',\n  digitalOnly: 'digitalOnly',\n  digitalAndPrint: 'digitalAndPrint',\n};\n\n// There are a total of 3 userTypes: \"anonymous\", \"registered\" and \"payer\"\nexport const userTypes = {\n  anonymous: 'anonymous',\n  registered: 'registered',\n  payer: 'payer',\n};\n\nexport const adTypes = {\n  maavaron: '.maavaron',\n  popunder: '.popunder',\n  talkback: '.talkback',\n  regular: '',\n};\n\n\nexport default class AdManager {\n\n  constructor(config) {\n    this.config = Object.assign({}, config);\n    this.user = new User(config);\n    this.conflictResolver = new ConflictResolver(config.conflictManagementConfig);\n    /**\n     * Avoid race conditions by making sure to respect the usual timing of GPT.\n     * This DFP implementation uses Enable-Define-Display:\n     * Define page-level settings\n     * enableServices()\n     * Define slots\n     * Display slots\n     */\n    try {\n      googletag.cmd.push(() => {\n        this.initGoogleTargetingParams();\n        this.initSlotRenderedCallback();\n      });\n      // Holds adSlot objects as soon as possible.\n      googletag.cmd.push(() => {\n        this.adSlots = this.initAdSlots(config.adSlotConfig);\n      });\n      // Once DOM ready, add the rest of the adSlots.\n      document.addEventListener('DOMContentLoaded', () => {\n        googletag.cmd.push(() => {\n          this.adSlots = this.initAdSlots(config.adSlotConfig);\n          this.initGoogleGlobalSettings();\n        });\n      });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * Shows all of the adSlots that can be displayed.\n   */\n  showAllSlots() {\n    for(const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if(adSlot.type !== adTypes.talkback && this.shouldSendRequestToDfp(adSlot)) {\n        adSlot.show();\n      }\n    }\n  }\n\n  showAllDeferredSlots() {\n    for(const deferredSlotId of this.conflictResolver.deferredSlots) {\n      if(this.adSlots.has(deferredSlotId)) {\n        if(!this.conflictResolver.isBlocked(deferredSlotId)) {\n          const deferredAdSlot = this.adSlots.get(deferredSlotId);\n          if(this.shouldSendRequestToDfp(deferredAdSlot)) {\n            deferredAdSlot.show();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Refreshes all responsive adSlots\n   */\n  refreshAllSlots() {\n    const currentBreakpoint = getBreakpoint();\n    for(const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if(adSlot.responsive) {\n        if(adSlot.lastResolvedWithBreakpoint != currentBreakpoint && this.shouldSendRequestToDfp(adSlot)) {\n          console.log(`calling refresh for adSlot: ${adSlot.id}`);\n          adSlot.refresh();\n        } else {\n          adSlot.hide();\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes adSlots based on the currently found slot markup (HTML page specific),\n   * and the predefined configuration for the slots.\n   * @param adSlotConfig\n   * @returns {Map}\n   */\n  initAdSlots(adSlotConfig) {\n    let adSlots = new Map(this.adSlots);\n    let adSlotPlaceholders = Array.from(document.getElementsByClassName('js-dfp-ad'));\n    adSlotPlaceholders = adSlotPlaceholders.filter(node => node.id); //only nodes with an id\n    const adSlotNodeSet = new Set();\n    adSlotPlaceholders = Array.prototype.filter.call(adSlotPlaceholders, node => {\n      if(adSlotNodeSet.has(node.id) === false) { //first occurrence of Node\n        adSlotNodeSet.add(node.id);\n        return true;\n      }\n      return false;\n    });\n    adSlotPlaceholders = adSlotPlaceholders.sort((a,b) => a.offsetTop - b.offsetTop);\n    adSlotPlaceholders.forEach(adSlot => {\n      if(adSlotConfig[adSlot.id] && adSlots.has(adSlot.id) === false) {\n        //the markup has a matching configuration from adSlotConfig AND was not already defined\n        try {\n          // adSlotConfig is built from globalConfig, but can be overridden by markup\n          const computedAdSlotConfig = Object.assign({},adSlotConfig[adSlot.id],{\n            id: adSlot.id,\n            target: adSlot.attributes['data-audtarget'] ? adSlot.attributes['data-audtarget'].value : adTargets.all,\n            type: this.getAdType(adSlot.id),\n            responsive: adSlotConfig[adSlot.id].responsive && adSlot.classList.contains('js-dfp-resp-refresh'), //TODO change to global config\n            user: this.user,\n            adManager: this,\n            department: this.config.department,\n            network: this.config.adManagerConfig.network,\n            adUnitBase: this.config.adManagerConfig.adUnitBase,\n          });\n          adSlots.set(adSlot.id,new AdSlot(computedAdSlotConfig));\n        }\n        catch (err) {\n          console.log(err);\n        }\n      }\n    });\n    return adSlots;\n  }\n\n  /**\n   * Returns the adType based on the adSlot name.\n   * @param adSlotId the adSlot's identifier.\n   * @returns {*} enumerated export 'adTypes'\n   */\n  getAdType(adSlotId) {\n    if(!adSlotId) {\n      throw new Error(`Missing argument: a call to getAdType must have an adSlotId`,this);\n    }\n    if(adSlotId.indexOf(adTypes.maavaron) > -1) return adTypes.maavaron;\n    if(adSlotId.indexOf(adTypes.popunder) > -1) return adTypes.popunder;\n    if(adSlotId.indexOf(adTypes.talkback) > -1) return adTypes.talkback;\n    return adTypes.regular;\n  }\n\n  /**\n   *  //TODO: add explicit type override\n   * @param {object} adSlot the AdSlot\n   * @returns {boolean|*}\n   */\n  shouldSendRequestToDfp(adSlot) {\n    // TODO: go over each one of the following and mark as checked once implemented\n    // Conflict management check\n    return this.conflictResolver.isBlocked(adSlot.id) === false &&\n        // Valid Referrer check\n      adSlot.isWhitelisted() &&\n        // Not in referrer Blacklist\n      adSlot.isBlacklisted() === false &&\n        // Not a Talkback adUnit type, not a Maavaron type and not a Popunder type\n      // adSlot.type !== adTypes.maavaron &&\n      // adSlot.type !== adTypes.talkback &&\n      this.shouldDisplayAdAfterAdBlockRemoval(adSlot) &&\n        // Responsive: breakpoint contains ad?\n      this.doesBreakpointContainAd(adSlot) &&\n        // Targeting check (userType vs. slotTargeting)\n      this.doesUserTypeMatchBannerTargeting(adSlot) &&\n        // Impressions Manager check (limits number of impressions per slot)\n      this.user.impressionManager.reachedQuota(adSlot.id) === false;\n  }\n\n  shouldDisplayAdAfterAdBlockRemoval(adSlot) {\n    return !(this.config.adBlockRemoved && (adSlot.type === adTypes.maavaron || adSlot.type === adTypes.popunder));\n  }\n\n  /**\n   * Check whether or not an ad slot should appear for the current user type\n   * @param adSlotOrTarget the adSlot to check or the target as a sting\n   * @returns {boolean} true iff the slot should appear for the user type\n   */\n  doesUserTypeMatchBannerTargeting(adSlotOrTarget) {\n\n    const userType = this.user.type;\n    const adTarget = typeof adSlotOrTarget === 'string' ? adSlotOrTarget : adSlotOrTarget.target;\n\n    switch (adTarget) {\n      case adTargets.all : return true;\n      case adTargets.nonPaying : return userType === userTypes.anonymous || userType === userTypes.registered;\n      case adTargets.anonymous : return userType === userTypes.anonymous;\n      case adTargets.registered : return userType === userTypes.registered;\n      case adTargets.paying : return userType === userTypes.payer;\n      case adTargets.digitalOnly : return userType === userTypes.payer;\n      case adTargets.digitalAndPrint : return userType === userTypes.payer;\n      default: return false;\n    }\n  }\n\n  /**\n   * Report to the AdManager that a breakpoint has been switched (passed from one break to\n   * another). Should there be a responsive slot with a\n   * @param breakpoint the breakpoint that is currently being displayed\n   * @returns {number} the number of adSlots affected by the change\n   */\n  switchedToBreakpoint(breakpoint) {\n    if(!breakpoint) {\n      throw new Error(`Missing argument: a call to switchedToBreakpoint must have an breakpoint`,this);\n    }\n    let count = 0;\n    for(const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if(adSlot.responsive === true && adSlot.lastResolvedWithBreakpoint) {\n        if(adSlot.lastResolvedWithBreakpoint != breakpoint) {\n          adSlot.refresh(); //TODO check logic - should it check the responsiveAdSizeMapping first?\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Checks whether an adSlot is defined for a given breakpoint (Default: current breakpoint)\n   * @returns {boolean} true iff the adSlot is defined for the given breakpoint.\n   */\n  doesBreakpointContainAd(adSlot, breakpoint = getBreakpoint()) {\n    if(!adSlot) {\n      throw new Error(`Missing argument: a call to doesBreakpointContainAd must have an adSlot`,this);\n    }\n    //TODO check if default value is being passed (if the next line is redundant)\n    breakpoint = breakpoint || getBreakpoint();\n    let containsBreakpoint = true;\n    if(adSlot.responsive === true) {\n      const mapping = adSlot.responsiveAdSizeMapping[getBreakpointName(breakpoint)];\n      if(Array.isArray(mapping) === false) {\n        throw new Error(`Invalid argument: breakpoint:${breakpoint} doesn't exist!`,this);\n      }\n      containsBreakpoint = mapping.length > 0 && !arraysEqual(mapping,[0,0]);\n    }\n    return containsBreakpoint;\n  }\n\n  /**\n   * Initializes the callback from the 'slotRenderEnded' event for each slot\n   * //TODO refactor: break down to smaller submethods\n   */\n  initSlotRenderedCallback() {\n    if(window.googletag && window.googletag.apiReady) {\n      const pubads = window.googletag.pubads();\n      pubads.addEventListener('slotRenderEnded', event => {\n        const id = event.slot.getAdUnitPath().split('/')[3];\n        const isEmpty = event.isEmpty;\n        const resolvedSize = event.size;\n        console.log('slotRenderEnded for slot',id,' called @',window.performance.now());\n        if(this.adSlots.has(id)) {\n          const adSlot = this.adSlots.get(id);\n          adSlot.lastResolvedSize = resolvedSize;\n          adSlot.lastResolvedWithBreakpoint = getBreakpoint();\n          if(isEmpty) {\n            adSlot.hide();\n            this.releaseSlotDependencies(adSlot);\n          }\n          else {\n            this.user.impressionManager.registerImpression(`${adSlot.id}${this.config.department}`);\n            this.user.impressionManager.registerImpression(`${adSlot.id}_all`);\n            this.releaseSlotDependencies(adSlot);\n          }\n        }\n        else {\n          //Log an error\n          console.log(`Cannot find an ad with id: ${id} - Ad Unit path is ${event.slot.getAdUnitPath()}`);\n        }\n      });\n    }\n    else {\n      throw new Error(`googletag api was not ready when 'initSlotRenderedCallback' was called!`);\n    }\n  }\n\n  releaseSlotDependencies(adSlot) {\n    try {\n      const id = adSlot.id;\n      this.conflictResolver.updateResolvedSlot(id,ConflictResolver.EMPTY_SIZE);\n      if(this.conflictResolver.isBlocking(id)) {\n        // Hide all blocked adSlots\n        for(const blockedSlot of this.conflictResolver.getBlockedSlotsIds(id)) {\n          if(this.conflictResolver.isBlocked(blockedSlot)) {\n            if(this.adSlots.has(blockedSlot)) {\n              this.adSlots.get(blockedSlot).hide();\n            }\n          }\n        }\n        // Show the non blocked\n        for(const deferredSlotKey of this.conflictResolver.deferredSlots.keys()) {\n          const deferredAdSlot = this.adSlots.get(deferredSlotKey);\n          if(deferredAdSlot && this.shouldSendRequestToDfp(deferredAdSlot)) {\n            this.conflictResolver.deferredSlots.delete(deferredSlotKey);\n            if(deferredAdSlot.deferredSlot) {\n              deferredAdSlot.defineSlot();\n              deferredAdSlot.deferredSlot = false;\n            }\n            deferredAdSlot.show();\n          }\n        }\n      }\n    }\n    catch (err) {\n      console.log(`Cannot updateSlotDependencies for adSlot: ${adSlot.id}`);\n    }\n  }\n\n  /**\n   * Initializes page-level targeting params.\n   */\n  initGoogleTargetingParams() {\n    if(window.googletag && window.googletag.apiReady) {\n\n      //Returns a reference to the pubads service.\n      const pubads = googletag.pubads();\n\n      // Environment targeting (dev, test, prod)\n      if (this.config.environment) {\n        pubads.setTargeting('stg', [this.config.environment]);\n      }\n\n      // User targeting\n      if (this.user.type) {\n        pubads.setTargeting('UserType', [this.user.type]);\n      }\n      if (this.user.age) {\n        pubads.setTargeting('age', [this.user.age]);\n      }\n      if (this.user.gender) {\n        pubads.setTargeting('urgdr', [this.user.gender]);\n      }\n\n      // Context targeting\n      if (this.config.articleId) {\n        pubads.setTargeting('articleId', [this.config.articleId]);\n      }\n      if (this.config.gStatCampaignNumber && this.config.gStatCampaignNumber != -1) {\n        pubads.setTargeting('gstat_campaign_id', [this.config.gStatCampaignNumber]);\n      }\n\n      // UTM targeting\n      if (this.config.utm_.content) {\n        pubads.setTargeting('utm_content', [this.config.utm_.content]);\n      }\n      if (this.config.utm_.source) {\n        pubads.setTargeting('utm_source', [this.config.utm_.source]);\n      }\n      if (this.config.utm_.medium) {\n        pubads.setTargeting('utm_medium', [this.config.utm_.medium]);\n      }\n      if (this.config.utm_.campaign) {\n        pubads.setTargeting('utm_campaign', [this.config.utm_.campaign]);\n      }\n      // AdBlock removal\n      if (this.config.adBlockRemoved) {\n        pubads.setTargeting('adblock_removed', [this.config.adBlockRemoved]);\n      }\n\n      // Ads Centering\n      pubads.setCentering(true);\n    }\n    else {\n      throw new Error(`googletag api was not ready when 'initGoogleTargetingParams' was called!`);\n    }\n  }\n\n  /**\n   * Initializes googletag services.\n   */\n  initGoogleGlobalSettings() {\n    if(window.googletag && window.googletag.apiReady) {\n      if(window.location.search && window.location.search.indexOf('sraon') > 0) {\n        console.log('enableSingleRequest mode: active');\n        googletag.pubads().enableSingleRequest();\n      }\n      if(!this.config.isMobile) {\n        googletag.pubads().enableAsyncRendering();\n      }\n      else {\n        googletag.pubads().enableAsyncRendering(); // disabled: googletag.pubads().enableSyncRendering();\n      }\n      // Enables all GPT services that have been defined for ad slots on the page.\n      googletag.enableServices();\n    }\n    else {\n      throw new Error(`googletag api was not ready when 'initGoogleGlobalSettings' was called!`);\n    }\n  }\n}\n","/* globals googletag */\nimport AdManager  from '../src/objects/adManager';\nimport globalConfig from './globalConfig';\nconst defaultConfig = globalConfig || {};\nimport { getBreakpoint, getBreakpointName, debounce }  from '../src/utils/breakpoints';\nconst googletagInitTimeout = 10000;\nconst resizeTimeout = 250;\n\nexport default class DFP {\n\n  constructor(config) {\n    this.config = Object.assign({}, defaultConfig, config);\n    this.wasInitialized = false;\n    this.breakpoint = getBreakpoint();\n    this.initWindowResizeListener();\n  }\n\n  /**\n   * This part of the object's construction is dependent on the call to 'init'\n   */\n  resumeInit() {\n    try{\n      this.adManager = new AdManager(this.config);\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  /**\n   * initializes the 'googletag' global namespace and add the\n   * google publish tags library to the page\n   * @returns {Promise} that resolves to true once the googletag api is ready to use\n   * (googletag.apiReady = true)\n   */\n  initGoogleTag() {\n    const dfpThis = this;\n    return new Promise((resolve,reject) => {\n      if (dfpThis.wasInitialized == true || (window.googletag && window.googletag.apiReady)) {\n        this.adManager = this.adManager || new AdManager(this.config);\n        dfpThis.wasInitialized = true;\n        resolve(this.isGoogleTagReady);\n      }\n      else {\n        // set up a place holder for the gpt code downloaded from google\n        window.googletag = window.googletag || {};\n\n        // this is a command queue used by GPT any methods added to it will be\n        // executed when GPT code is available, if GPT is already available they\n        // will be executed immediately\n        window.googletag.cmd = window.googletag.cmd || [];\n        //load google tag services JavaScript\n        (() => {\n          const tag = window.document.createElement('script');\n          tag.async = false;\n          tag.type = 'text/javascript';\n          //var useSSL = 'https:' == document.location.protocol;\n          tag.setAttribute('src','//www.googletagservices.com/tag/js/gpt.js');\n          var node = window.document.getElementsByTagName('script')[0];\n          tag.onload = (() => {\n            dfpThis.wasInitialized = true;\n            dfpThis.resumeInit();\n            resolve(this.isGoogleTagReady);\n          });\n          tag.onerror = ((error) => {\n            dfpThis.wasInitialized = false;\n            reject(error);\n          });\n          node.parentNode.insertBefore(tag, node);\n        })();\n      }\n    });\n  }\n\n  /**\n   *\n   * @returns {Promise}\n   */\n  isGoogleTagReady() {\n    let promise = new Promise((resolve,reject) => {\n      googletag.cmd.push(() => {\n        resolve(this);\n      });\n      setTimeout(() => {\n        if(!(googletag && googletag.apiReady === true)) {\n          reject(new Error(\"googletag failed to initialize on the page!\"));\n        }\n      },googletagInitTimeout);\n    });\n    return promise;\n  }\n\n  /**\n   * Initializes the window resize listener to support responsive ad refreshes\n   */\n  initWindowResizeListener() {\n    const dfpThis = this;\n    function onResize() {\n      const currentBreakpoint = getBreakpoint();\n      if(dfpThis.breakpoint != currentBreakpoint) {\n        dfpThis.breakpoint = currentBreakpoint;\n        if(dfpThis.adManager) {\n          dfpThis.adManager.refreshAllSlots();\n        }\n        else {\n          throw new Error(\"initWindowResizeListener error - adManager instance is not available\")\n        }\n      }\n    }\n    const debouncedFunction = debounce(onResize,resizeTimeout);\n    window.onresize = debouncedFunction;\n  }\n}\n","import DFP from './dfp';\nimport globalConfig from './globalConfig';\n\n// Correct version will be set with the 'rollup-replace plugin'\nDFP.version = 'VERSION';\n\n//// Only for development mode\n//if ( process.env.NODE_ENV !== 'production' ) {\n//  DFP.dev = '123';\n//}\n\nexport const config = globalConfig;\nexport const version = DFP.version;\nexport default DFP;\n"],"names":["globalConfig","userTypes","ImpressionManager","adSlot","AdSlot"],"mappings":"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"}