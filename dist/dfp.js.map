{"version":3,"file":null,"sources":["../src/utils/cookieUtils.js","../src/globalConfig.js","../src/utils/time.js","../src/utils/breakpoints.js","../src/objects/impressionsManager.js","../src/objects/user.js","../src/objects/conflictResolver.js","../src/objects/adSlot.js","../src/utils/arrays.js","../src/objects/adManager.js","../src/dfp.js","../src/index.js"],"sourcesContent":["/**\n * Htz-cookie-util\n * @module htzCookieUtil\n * @author Elia Grady elia.grady@haaretz.co.il\n * @license MIT\n */\n\n/**\n * Translates Key-Value string into a convenient map.\n * @param {String} string String in format of \"key<operator>value<separator>.....\"\n * @param {object} options object for overriding defaults:\n * options.separator is a String or regExp that separates between each key value pairs\n * (default is ';'). options.operator is a String or regExp that separates between each key\n * and value within a pair (default is '=').\n * @returns {object} a map object, with key-value mapping according to the passed configuration.\n */\nfunction stringToMap(string,\n  { separator = ';', operator = '=' } = {}) {\n  const map = {};\n  const itemsArr = string.split(separator);\n  itemsArr.forEach(element => {\n    if (typeof element === 'string') {\n      const keyValue = element.split(operator);\n      if (keyValue.length === 2) {\n        map[keyValue[0]] = decodeURIComponent(keyValue[1]);\n      }\n    }\n  });\n  return map;\n}\nexport const ssoKey = window.location.hostname.indexOf('haaretz.com') > -1 ? 'engsso' : 'tmsso';\n\n// Translates Cookie string into a convenient map.\nexport default function getCookieAsMap() {\n  const map = stringToMap(document.cookie, { separator: /;\\s?/ });\n  if (typeof map.tmsso === 'string') {\n    map.tmsso = stringToMap(map.tmsso, { separator: ':' });\n  }\n  if (typeof map.engsso === 'string') {\n    map.engsso = stringToMap(map.engsso, { separator: ':' });\n  }\n  return map;\n}\n","/* global dfpBaseConf */\nimport getCookieAsMap, { ssoKey } from './utils/cookieUtils';\n// globalConfig for DFP\nconst dfpConfig = Object.assign({\n  get referrer() {\n    return document.referrer ? document.referrer : '';\n  },\n  get isMobile() {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i\n      .test(window.navigator.userAgent || ''));\n  },\n  /**\n   * Returns true iff the loaded page is the homepage (no inner path)\n   * @returns {boolean}\n   */\n  get isHomepage() {\n    return window.location.pathname === '/' || this.environment === 3; // 'prod'\n  },\n  get department() {\n    return this.isHomepage ? '_homepage' : '_section';\n  },\n  /**\n   * returns the domain the page was loaded to. i.e: 'haaretz.co.il', 'haaretz.com'\n   * @returns {string} the domain name from the windows's location hostname property\n   */\n  get domain() {\n    const regexMatch = /([\\d|\\w]+)(\\.co\\.il|\\.com)(.*)?/.exec(window.location.hostname);\n    const result = regexMatch ? regexMatch[0] : window.location.hostname;\n    return result;\n  },\n  /**\n   * Returns an array of concatenated paths, separated by a dot.\n   * For example, for the URL:\n   * http://www.haaretz.co.il/news/world/america/us-election-2016/LIVE-1.2869045\n   * the path is '/news/world/america/us-election-2016/LIVE-1.2869045'.\n   * This function takes the directories ['news', 'world', 'america', 'us-election-2016']\n   * and converts it to the following format:\n   * ['.news', '.news.world', '.news.world.america', '.news.world.america.us-election-2016']\n   * This denotes the path configuration for the given adSlot\n   * @returns {Array.<T>} an array of path names\n   */\n  get path() {\n    let sectionArray = this.articleId ?\n      window.location.pathname.split('/').slice(1, -1) :\n      window.location.pathname.split('/').slice(1);\n    sectionArray = sectionArray.filter(path =>\n    path !== 'wwwMobileSite' && path !== 'whtzMobileSite');\n    return sectionArray\n      .map(section => `.${section}`)\n      .map((section, index, arr) => arr.slice(0, index + 1)\n        .reduce((last, current) => last.concat(current)));\n  },\n  /**\n   * Returns the current environment targeting param, if such is defined.\n   * @returns {number} targeting param, 1 for local development, 2 for test servers and 3 for prod.\n   * May return undefined if no targeting is specified.\n   */\n  get environment() {\n    const env = {\n      dev: 1,\n      test: 2,\n      prod: 3,\n    };\n    return window.location.port === '8080' ? env.dev :\n      (window.location.hostname.indexOf('pre.haaretz.co.il') > -1\n      || window.location.hostname.indexOf('tmtest.themarker.com') > -1) ? env.test :\n        (window.location.pathname.indexOf('/cmlink/Haaretz.HomePage') > -1\n        || window.location.pathname.indexOf('/cmlink/TheMarker.HomePage') > -1)\n          ? env.prod : undefined;\n  },\n  /**\n   * Returns the articleIf if on an article page, or null otherwise\n   * @returns {string} an articleId string from the pathname, or 0 if not found\n   */\n  get articleId() {\n    const articleIdMatch = /\\d\\.\\d+/g.exec(window.location.pathname);\n    let articleId = '0';\n    if (articleIdMatch) {\n      articleId = articleIdMatch.pop(); // Converts [\"1.23145\"] to \"1.23145\"\n    }\n    return articleId;\n  },\n  utm_: {\n    get content() {\n      return this.getUrlParam('utm_content');\n    },\n    get source() {\n      return this.getUrlParam('utm_source');\n    },\n    get medium() {\n      return this.getUrlParam('utm_medium');\n    },\n    get campaign() {\n      return this.getUrlParam('utm_campaign');\n    },\n    getUrlParam(key) {\n      const results = RegExp(`(${key})(=)([^&\"]+)`).exec(window.location.search);\n      return results && results[3] ? results[3] : undefined;\n    },\n  },\n  get adBlockRemoved() {\n    let adBlockRemoved = false;\n    try {\n      if (localStorage.getItem('adblock_removed')) {\n        adBlockRemoved = true;\n      }\n    }\n    catch (err) {\n      // do nothing\n    }\n    return adBlockRemoved;\n  },\n  get wifiLocation() {\n    let wifiLocation = '';\n    const cookieMap = getCookieAsMap();\n    try {\n      if (cookieMap && cookieMap._htzwif) { // eslint-disable-line no-underscore-dangle\n        wifiLocation = (cookieMap._htzwif === 'arcaffe') // eslint-disable-line no-underscore-dangle\n          ? 'ArCafe' : 'university';\n      }\n    }\n    catch (err) {\n      // do nothing\n    }\n    return wifiLocation;\n  },\n  get gStatCampaignNumber() {\n    let gstatCampaign;\n    try {\n      gstatCampaign = localStorage.getItem('GstatCampaign') ?\n        JSON.parse(localStorage.getItem('GstatCampaign')) : undefined;\n    }\n    catch (err) {\n      /* In case of thrown 'SecurityError' or 'QuotaExceededError',\n       the variable should be undefined */\n      gstatCampaign = undefined;\n    }\n    return gstatCampaign ? gstatCampaign.CampaignNumber : undefined;\n  },\n  adSlotConfig: {\n    'haaretz.co.il.example.slot': {\n      id: 'slotId',\n      // path : \"/network/base/slotId/slotId_subsection\", Will be calculated from AdManager\n      responsive: true,\n      adSizeMapping: [['width1', 'height1'], ...['widthN', 'heightN']],\n      priority: 'normal',\n      fluid: false,\n      responsiveAdSizeMapping: {\n        xxs: [['width1', 'height1'], ...['widthN', 'heightN']],\n        xs: [['width1', 'height1'], ...['widthN', 'heightN']],\n        s: [['width1', 'height1'], ...['widthN', 'heightN']],\n        m: [['width1', 'height1'], ...['widthN', 'heightN']],\n        l: [['width1', 'height1'], ...['widthN', 'heightN']],\n        xl: [['width1', 'height1'], ...['widthN', 'heightN']],\n        xxl: [['width1', 'height1'], ...['widthN', 'heightN']],\n      },\n      blacklistReferrers: 'comma, delimited, blacklisted, referrer, list',\n      whitelistReferrers: 'comma, delimited, referrer, list',\n    },\n  },\n  adManagerConfig: {\n    network: '9401',\n    adUnitBase: 'haaretz.co.il_Web',\n  },\n  breakpointsConfig: {\n    get breakpoints() {\n      const isType1 = true; // Override in VM from backend to control this toggle.\n      return isType1 ? this.breakpoints1 : this.breakpoints2;\n    },\n    // Type 1\n    breakpoints1: {\n      xxs: 600,\n      xs: 761,\n      s: 993,\n      m: 1009,\n      l: 1291,\n      xl: 1600,\n      xxl: 1900,\n    },\n    // Type 2\n    breakpoints2: {\n      xxs: 600,\n      xs: 1000,\n      s: 1150,\n      m: 1281,\n      l: 1600,\n      xl: 1920,\n      xxl: 1920,\n    },\n  },\n  userConfig: {\n    type: undefined,\n    age: undefined,\n    gender: undefined,\n  },\n  conflictManagementConfig: {\n    'blocking.ad.unit.name': [\n      {\n        onsize: '1280x200,970x250,3x3',\n        avoid: 'blocked.ad.unit.name',\n      },\n      {\n        onsize: '1280x200,970x250,3x3',\n        avoid: 'blocked.ad.unit.name',\n      },\n    ],\n  },\n  impressionManagerConfig: {\n    'ad.unit.name': {\n      target: 'all|section|homepage',\n      frequency: '$1/$2(day|hour)',\n      exposed: 0,\n      expires: (new Date()).getTime(),\n    },\n  },\n  sso: ssoKey,\n\n}, window.dfpConfig);\n\nexport default dfpConfig;\n","/**\n * Helper function. Adds N hours to a given date object.\n * @param {Date} date - the date to derive from\n * @param {Number} hours - the amount of hours to add, in whole numbers\n * @throws {SyntaxError} Will throw if the 'date' param is not provided\n * @throws {SyntaxError} Will throw if the 'hours' param is not provided\n * @throws {TypeError} Will throw if the 'hours' param is not a valid integer\n * @returns {Date} date - the new date, derived from adding the given hours\n */\nexport function addHours(date, hours) {\n  if (!date) {\n    throw new SyntaxError('addHours called without a required \\'date\\' parameter!');\n  }\n  if (!hours) {\n    throw new SyntaxError('addHours called without a required \\'hours\\' parameter!');\n  }\n  else if (isNaN(parseInt(hours, 10))) {\n    throw new TypeError('addHours called with an invalid integer \\'hours\\' parameter!');\n  }\n  const result = new Date(date);\n  result.setHours(result.getHours() + parseInt(hours, 10));\n  return result;\n}\n\n/**\n * Helper function. Adds N days to a given date object.\n * @param {Date} date - the date to derive from\n * @param {Integer} days - the amount of days to add\n * @throws {SyntaxError} Will throw if the 'date' param is not provided\n * @throws {SyntaxError} Will throw if the 'days' param is not provided\n * @throws {TypeError} Will throw if the 'hours' param is not a valid integer\n * @returns {Date} date - the new date, derived from adding the given days\n */\nexport function addDays(date, days) {\n  if (!date) {\n    throw new SyntaxError('addDays called without a required \\'date\\' parameter!');\n  }\n  if (!days) {\n    throw new SyntaxError('addDays called without a required \\'days\\' parameter!');\n  }\n  else if (isNaN(parseInt(days, 10))) {\n    throw new TypeError('addDays called with an invalid integer \\'days\\' parameter!');\n  }\n  const result = new Date(date);\n  result.setDate(result.getDate() + parseInt(days, 10));\n  return result;\n}\n","import globalConfig from '../globalConfig';\n\nconst breakpoints = globalConfig.breakpointsConfig.breakpoints;\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @param {function} func - the function to run\n * @param {Number} wait - the timeout period to avoid running the function\n * @param {Boolean} immediate - leading edge modifier\n * @returns {function} the debounced function\n * //TODO translate to ES6 format or import lodash debounce instead\n */\nexport function debounce(func, wait = 100, immediate) {\n  let timeout;\n  return function debounced() {\n    const context = this;\n    const args = arguments;// eslint-disable-line prefer-rest-params\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @returns {number} the break that the current width represents\n */\nexport function getBreakpoint() {\n  let breakpoint;\n  const windowWidth = window.innerWidth;\n  switch (windowWidth) {\n    case windowWidth < breakpoints.xs: breakpoint = breakpoints.xxs; break;\n    case windowWidth < breakpoints.s: breakpoint = breakpoints.xs; break;\n    case windowWidth < breakpoints.m: breakpoint = breakpoints.s; break;\n    case windowWidth < breakpoints.l: breakpoint = breakpoints.m; break;\n    case windowWidth < breakpoints.xl: breakpoint = breakpoints.l; break;\n    case windowWidth < breakpoints.xxl: breakpoint = breakpoints.xl; break;\n    default: breakpoint = breakpoints.xxl;\n  }\n  return breakpoint;\n}\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @param {string} breakpoint - the breakpoint label enumerator that the current width represents\n * @returns {string} breakpoint - the breakpoint label that the current width represents,\n * as a string\n */\nexport function getBreakpointName(breakpoint) {\n  let resultBreakpoint;\n  const windowWidth = breakpoint || window.innerWidth;\n  switch (windowWidth) {\n    case windowWidth < breakpoints.xs: resultBreakpoint = 'xxs'; break;\n    case windowWidth < breakpoints.s: resultBreakpoint = 'xs'; break;\n    case windowWidth < breakpoints.m: resultBreakpoint = 's'; break;\n    case windowWidth < breakpoints.l: resultBreakpoint = 'm'; break;\n    case windowWidth < breakpoints.xl: resultBreakpoint = 'l'; break;\n    case windowWidth < breakpoints.xxl: resultBreakpoint = 'xl'; break;\n    default: resultBreakpoint = 'xxl';\n  }\n  return resultBreakpoint;\n}\n","import globalConfig from '../globalConfig';\nimport { addHours, addDays } from '../utils/time';\nimport { debounce } from '../utils/breakpoints';\n\nexport const keys = {\n  impressions: 'impressions',\n  frequency: 'frequency',\n  /**\n   * [0] - full match\n   * [1] - impression count i.e: \"1\" | \"22\"\n   * [2] - impression expiry range quantifier  i.e: \"1\" | \"22\"\n   * [3] - impression expiry range unit i.e: \"day\" | \"hour\"\n   */\n  frequencyRegex: /(\\d+)\\/(\\d+)(day|hour)/,\n  expires: 'expires',\n  exposed: 'exposed',\n  target: 'target',\n  maxImpressions: 'maxImpressions',\n  hours: 'hour',\n  days: 'day',\n  adSlotId: 'id',\n};\n\nexport default class ImpressionsManager {\n\n  constructor(impressionManagerConfig) {\n    this.now = (new Date()).getTime(); // this date is used for comparisons only\n    this.config = Object.assign({}, impressionManagerConfig);\n    this.impressions = this.retrieveImpressionsData();\n    this.initImpressionMap();\n  }\n\n  retrieveImpressionsData() {\n    const impressions = this.migrateImpressionsData();\n    /*\n     Merge migrated data with new data\n     console.log('Migrated: ',impressions);\n     */\n    Object.keys(impressions).map((key, index) => {\n      impressions[key] = Object.assign({}, impressions[key], this.config[key]);\n      return this;\n    });\n    /*\n     console.log('Merged: ',impressions);\n     Filter out entries without frequency\n     */\n    for (const key in impressions) {\n      if ({}.hasOwnProperty.call(impressions, key)) {\n        if (!impressions[key][keys.frequency]) {\n          // console.log(`Removing ${key} - since it does not have a frequency`,impressions[key]);\n          delete impressions[key];\n        }\n      }\n    }\n    // console.log('Filtered: ',impressions);\n    return impressions;\n  }\n\n  migrateImpressionsData() {\n    let impressions;\n    let impressionsData;\n    try {\n      impressionsData = window.localStorage.getItem(keys.impressions);\n    }\n    catch (err) {\n      // In case of thrown 'SecurityError' or 'QuotaExceededError', the variable should be undefined\n      impressionsData = undefined;\n    }\n    try {\n      impressions = JSON.parse(impressionsData);\n    }\n    catch (err) {\n      // Here is where old impression data is converted to new format\n      impressions = {};\n      const oldImpressionsArray = impressionsData.split(';').filter(e => e);\n\n      oldImpressionsArray.forEach((impression) => {\n        try {\n          const adUnitImpression = impression.split(' = ');\n          const name = adUnitImpression[0];\n          const data = adUnitImpression[1];\n          const tmp = name.split('.');\n          let target = tmp.pop();\n          if (target && target === 'hp') {\n            target = 'homepage';\n          }\n          const slotId = tmp.join('.');\n          const id = `${slotId}_${target}`;\n          const exposed = parseInt(data.split('/')[0], 10) || 0;\n          const expires = parseInt(data.split('/')[1], 10) || this.now;\n          impressions[id] = {};\n          impressions[id][keys.adSlotId] = slotId;\n          impressions[id][keys.target] = target;\n          impressions[id][keys.exposed] = exposed;\n          impressions[id][keys.expires] = expires;\n        }\n        catch (err1) {\n          // console.log(`Failed converting impression: ${impression}`, err1);\n        }\n      });\n    }\n    return impressions || {};\n  }\n\n  /**\n   * Define the debounced version of the local storage save\n   */\n  saveImpressionsToLocalStorage() {\n    if (this.debouncedSave && typeof this.debouncedSave === 'function') {\n      this.debouncedSave();\n    }\n    else {\n      this.debouncedSave = debounce(this.saveImpressionsToLocalStorageImpl, 250, false);\n      this.debouncedSave();\n    }\n  }\n\n  /**\n   * Implementation of saving the impression map to localstorage\n   */\n  saveImpressionsToLocalStorageImpl() {\n    try {\n      localStorage.setItem(keys.impressions, JSON.stringify(this.impressions));\n    }\n    catch (err) {\n      /* In case of thrown 'SecurityError' or 'QuotaExceededError',\n       the operation should not break*/\n      console.error('localStorage isn\\'t available:', err); // eslint-disable-line no-console\n    }\n  }\n\n  /**\n   * Initializes the impression map based on the retrieved impressions and the global\n   * configuration.\n   */\n  initImpressionMap() {\n    Object.keys(this.config).map((key, index) => {\n      const adSlotId = key;\n      const slot = this.impressions[adSlotId];\n      let shouldUpdateExpiryDate = false;\n      // Case I: Existing slot (update)\n      if (slot) {\n        // Case I.I Existing slot, frequency has changed\n        if (this.config[adSlotId][keys.frequency] !== slot[keys.frequency]) {\n          // Updating the frequency will trigger a new expiry date\n          shouldUpdateExpiryDate = true;\n          this.impressions[adSlotId][keys.frequency] = this.config[adSlotId][keys.frequency];\n        } // Case I.II Existing slot, old expiry date\n        else if (this.now > slot[keys.expires]) {\n          // Old value that should trigger a new expiry date\n          shouldUpdateExpiryDate = true;\n        }\n      } // Case II: Non-existing slot (create new slot)\n      else {\n        this.initSlotFromConfig(adSlotId);\n      } // Finally, updates the expiry date (cases I.I and I.II)\n      if (shouldUpdateExpiryDate) {\n        this.updateExpiryDate(adSlotId);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * Updates the expiry date of a slotName based on the configured slot frequency\n   * @param {String} slotName - the slotName to update.\n   */\n  updateExpiryDate(slotName) {\n    const now = new Date();\n    if (!(this.impressions[slotName] && this.impressions[slotName][keys.frequency])) {\n      throw new Error(`Unable to update expiry date for slot: ${slotName}\n      - this.impressions[slotName]:`, this.impressions[slotName]);\n    }\n    const frequencyMap = this.impressions[slotName][keys.frequency].match(keys.frequencyRegex);\n    now.setMilliseconds(0);\n    now.setSeconds(0);\n    now.setMinutes(0);\n    if (frequencyMap.indexOf(keys.days) > -1) {\n      now.setHours(0);\n    }\n    this.impressions[slotName][keys.expires] = (frequencyMap.indexOf(keys.days) > -1 ?\n      addDays(now, frequencyMap[2]) : addHours(now, frequencyMap[2])).getTime();\n\n    // Set max impressions:\n    this.impressions[slotName][keys.maxImpressions] = parseInt(frequencyMap[1], 10);\n    // Reset exposed\n    this.impressions[slotName][keys.exposed] = 0;\n  }\n\n  /**\n   * Initializes a non-existing slot from the passed global configuration for the slot\n   * @param {String} slotName - the name of the slot to create\n   */\n  initSlotFromConfig(slotName) {\n    const slot = this.impressions[slotName] || {};\n    slot[keys.frequency] = this.config[slotName][keys.frequency];\n    slot[keys.target] = this.config[slotName][keys.target];\n    slot[keys.exposed] = 0;\n    this.impressions[slotName] = slot;\n    this.updateExpiryDate(slotName);\n  }\n\n  /**\n   * Registers an impression for a given adSlot.\n   * @param {String} adSlotId - the adSlot id to register an impression for\n   * @returns {boolean} returns true iff the impression has been registered\n   */\n  registerImpression(adSlotId) {\n    if (adSlotId) {\n      const slot = this.impressions[adSlotId];\n      if (slot) {\n        const exposed = slot[keys.exposed];\n        if (isNaN(parseInt(exposed, 10)) === false) {\n          this.impressions[adSlotId][keys.exposed] += 1;\n          try {\n            this.saveImpressionsToLocalStorage();\n          }\n          catch (err) {\n            // console.log('Error saving ad impressions to localStorage!', err);\n          }\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Checks whether an adSlot has reached it's allocated impressions count.\n   * @param {String} adSlotId - the adSlot to check\n   * @returns {boolean} true iff there is a quota for the adSlot, and it has been reached\n   */\n  reachedQuota(adSlotId) {\n    // An adSlotId is suffixed with _homepage | _section if it's targeting is different\n    // between the two. If there is no difference, an _all suffix can be used.\n    const slotName = this.impressions[`${adSlotId}${globalConfig.department}`] ?\n      `${adSlotId}${globalConfig.department}` : `${adSlotId}_all`;\n\n    const slot = this.impressions[slotName];\n    let atQuota = false;\n    if (slot) {\n      const now = (new Date()).getTime();\n      // Second element of 2/4day matches '2'\n      const expires = this.impressions[slotName][keys.expires];\n      if (expires < now) {\n        this.updateExpiryDate(slotName);\n      }\n      else {\n        const maxImpressions = this.impressions[slotName][keys.maxImpressions];\n        // Not expired, did reach max impressions?\n        if (maxImpressions) {\n          atQuota = this.impressions[slotName][keys.exposed] >= maxImpressions;\n        }\n      }\n    }\n    return atQuota;\n  }\n\n\n  /**\n   * Clears the impression map from 'exposed' impressions\n   */\n  resetImpressions() {\n    const impressions = this.impressions;\n    for (const key in impressions) {\n      if ({}.hasOwnProperty.call(impressions, key)) {\n        if (impressions[key][keys.exposed]) {\n          impressions[key][keys.exposed] = 0;\n        }\n      }\n    }\n    this.saveImpressionsToLocalStorage();\n  }\n}\n","import getCookieAsMap from '../utils/cookieUtils';\nimport ImpressionManager from './impressionsManager';\nimport globalConfig from '../globalConfig';\n\nexport const userTypes = {\n  payer: 'payer',\n  registered: 'registered',\n  anonymous: 'anonymous',\n};\n\nexport default class User {\n  constructor(config) {\n    this.config = Object.assign({}, config.userConfig);\n    const cookieMap = getCookieAsMap();\n    this.ssoKey = globalConfig.sso;\n    if (!cookieMap[this.ssoKey]) {\n      // Flips the ssoKey, since cookieMap.ssoKey cannot be used to retrieve data\n      this.ssoKey = this.ssoKey === 'tmsso' ? 'engsso' : 'tmsso';\n    }\n    this.type = this.getUserType(cookieMap);\n    this.impressionManager = new ImpressionManager(config.impressionManagerConfig);\n    this.age = this.getUserAge(cookieMap);\n    this.gender = this.getUserGender(cookieMap);\n  }\n\n  getUserType(cookieMap) {\n    let userType;\n    if (cookieMap && cookieMap[this.ssoKey]) {\n      const payerProp = window.location.hostname.indexOf('haaretz.com') > -1 ?\n        'HdcPusr' : 'HtzPusr';\n      userType = cookieMap[payerProp] ? userTypes.payer : userTypes.registered;\n    }\n    else {\n      userType = userTypes.anonymous;\n    }\n    return userType;\n  }\n\n  getUserAge(cookieMap) {\n    let age;\n    const usrae = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].usrae;\n    if (usrae) {\n      age = parseInt(cookieMap[this.ssoKey].usrae, 10);\n      age = age > 0 ? age : undefined;\n    }\n    return age;\n  }\n\n  getUserGender(cookieMap) {\n    let gender;\n    const urgdr = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].urgdr;\n    if (urgdr) {\n      gender = parseInt(cookieMap[this.ssoKey].urgdr, 10);\n      gender = gender === 2 || gender === 1 ? gender : undefined;\n    }\n    return gender;\n  }\n}\n","class ConflictResolver {\n  constructor(conflictManagementConfig) {\n    this.dependencyMap = this.initializeDependencyMap(conflictManagementConfig);\n    this.deferredSlots = new Set();\n  }\n  initializeDependencyMap(conflictManagementJson) {\n    const queue = new Map();\n    Object.keys(conflictManagementJson).map((key, value) => {\n      let rules = conflictManagementJson[key];\n      if (rules) {\n        rules = rules.filter((item) => item.onsize && item.avoid);\n      }\n      queue.set(key, {\n        id: key,\n        rules,\n        resolvedWith: null,\n      });\n      return this;\n    });\n    return queue;\n  }\n\n  updateResolvedSlot(adSlotId, resolvedSize) {\n    if (!adSlotId) {\n      throw new Error('updateResolvedSlot must be called with an adSlotId!');\n    }\n    if (!resolvedSize) {\n      throw new Error('updateResolvedSlot must be called with a resolved size!');\n    }\n    if (this.dependencyMap.has(adSlotId)) {\n      this.dependencyMap.get(adSlotId).resolvedWith = resolvedSize;\n    }\n  }\n\n\n  isBlocked(adSlotId) {\n    if (!adSlotId) {\n      throw new Error('isBlocked must be called with an adSlotId!');\n    }\n    let isBlocked = false;\n    for (const adSlotKey of this.dependencyMap.keys()) {\n      const adSlot = this.dependencyMap.get(adSlotKey);\n      for (const adSlotRule of adSlot.rules) {\n        // Found rule specific to our target\n        if (adSlotRule.avoid === adSlotId) {\n          const parentResolvedWith = adSlot.resolvedWith;\n          // Fail fast: parent is not resolved yet - unknown returned size.\n          if (!parentResolvedWith) {\n            isBlocked = true;\n            this.deferredSlots.add(adSlotId);\n          }\n          if (adSlotRule.onsize.split(',').find(sizeString => { // eslint-disable-line\n            const size = sizeString.split('x').map(numberStr => parseInt(numberStr, 10));\n            return this.arraysEqual(size, parentResolvedWith);\n          })) {\n            // Block found\n            this.deferredSlots.add(adSlotId);\n            isBlocked = true;\n          }\n        }\n      }\n    }\n    return isBlocked;\n  }\n\n  isBlocking(adSlotId) {\n    if (!adSlotId) {\n      throw new Error('isBlocking must be called with an adSlotId!');\n    }\n    let isBlocking = false;\n    for (const adSlotKey of this.dependencyMap.keys()) {\n      if (adSlotKey === adSlotId) {\n        isBlocking = true;\n      }\n    }\n    return isBlocking;\n  }\n\n  /**\n   * Gets an array of adSlot Ids for a given adSlotId, that are dependent on (blocked by)\n   * @param {String} adSlotId - the blocking slot id\n   * @return {Array} an array of blocked slot, that has a dependency on the given slot\n   */\n  getBlockedSlotsIds(adSlotId) {\n    let result;\n    if (this.dependencyMap.has(adSlotId)) {\n      result = Array.from(this.dependencyMap.get(adSlotId).rules.map(adSlot => adSlot.avoid));\n    }\n    return result || [];\n  }\n\n  arraysEqual(a, b) {\n    if (a === b) return true;\n    if (a === null || b === null) return false;\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; ++i) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n}\nConflictResolver.EMPTY_SIZE = [];\nexport default ConflictResolver;\n","/* global googletag */\nimport { adTypes } from '../objects/adManager';\nimport globalConfig from '../globalConfig';\n\nexport default class adSlot {\n\n  constructor(adSlotConfig) {\n    this.config = Object.assign({}, adSlotConfig);\n\n    // Part I : Markup configuration - passed from AdManager\n    this.id = this.config.id;\n    if (!this.config.id) {\n      throw new Error('an adSlot requires an id!');\n    }\n    this.target = this.config.target;\n    this.type = this.config.type;\n    this.responsive = this.config.responsive;\n    this.fluid = this.config.fluid;\n    this.user = this.config.user;\n    this.adManager = this.config.adManager;\n    this.htmlElement = this.config.htmlElement;\n    this.priority = this.config.priority;\n    this.deferredSlot = this.config.deferredSlot;\n\n    // Part II : Global, general ad configuration - passed from AdManager\n    this.department = this.config.department;\n    this.network = this.config.network;\n    this.adUnitBase = this.config.adUnitBase;\n\n    // Part III : ad specific configuration - passed from globalConfig.adSlotConfig\n    this.adSizeMapping = this.config.adSizeMapping;\n    this.responsiveAdSizeMapping = this.config.responsiveAdSizeMapping;\n    this.blacklistReferrers = this.config.blacklistReferrers ?\n      this.config.blacklistReferrers.split(',') : [];\n    this.whitelistReferrers = this.config.whitelistReferrers ?\n      this.config.whitelistReferrers.split(',') : [];\n\n\n    // Part IV : Runtime configuration - calculated data - only present in runtime\n    this.lastResolvedSize = undefined; // Initialized in 'slotRenderEnded' callback\n    this.lastResolvedWithBreakpoint = undefined; // Initialized in 'slotRenderEnded' callback\n    this.slot = undefined; // Holds a googletag.Slot object\n    // [https://developers.google.com/doubleclick-gpt/reference#googletag.Slot]\n    try {\n      if (!this.deferredSlot) {\n        this.slot = this.defineSlot();\n      }\n    }\n    catch (err) {\n      console.error(err); // eslint-disable-line no-console\n    }\n  }\n\n  /**\n   * Checks whether this adSlot is an 'Out-of-page' slot or not.\n   * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n   * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n   */\n  isOutOfPage() {\n    if (typeof this.type !== 'string') {\n      throw new Error('An adSlot cannot by typeless!', this);\n    }\n    if (this.isMobile() === true) {\n      return false;\n    }\n    switch (this.type) {\n      case adTypes.maavaron: return true;\n      case adTypes.popunder: return true;\n      case adTypes.talkback: return false;\n      case adTypes.regular: return false;\n      default: return false;\n    }\n  }\n\n  /**\n   * Checks whether this adSlot is a 'maavaron' slot or not.\n   * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n   * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n   */\n  isMaavaron() {\n    if (typeof this.type !== 'string') {\n      throw new Error('An adSlot cannot by typeless!', this);\n    }\n    if (this.isMobile() === true) {\n      return false;\n    }\n    switch (this.type) {\n      case adTypes.maavaron: return true;\n      default: return false;\n    }\n  }\n\n  isMobile() {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i\n      .test(window.navigator.userAgent || ''));\n  }\n  /**\n   * Checks whether or not this adSlot has a non-empty whitelist, and if so, that the current\n   * referrer appears in the whitelist.\n   * Should return false iff there is a whitelist for the current adSlot, but the referrer is not\n   * mentioned in the whitelist.\n   * @returns {boolean} true iff the ad can be displayed.\n   */\n  isWhitelisted() {\n    let whitelisted = false;\n    if (this.whitelistReferrers.length !== 0) {\n      for (const referrer of this.whitelistReferrers) {\n        if (globalConfig.referrer.indexOf(referrer) > -1) {\n          whitelisted = true;\n          break;\n        }\n      }\n    }\n    else {\n      whitelisted = true;\n    }\n    return whitelisted;\n  }\n\n  /**\n   * Checks whether or not this adSlot has a non-empty blacklist, and if so, that the current\n   * referrer does not appear in the blacklist.\n   * Should return true iff there is a blacklist for the current adSlot, and the referrer is\n   * mentioned in the blacklist - to indicate that the adSlot is 'blocked'.\n   * @returns {boolean} true iff the ad cannot be displayed.\n   */\n  isBlacklisted() {\n    let blacklisted = false;\n    if (this.blacklistReferrers.length !== 0) {\n      for (const referrer of this.blacklistReferrers) {\n        if (globalConfig.referrer.indexOf(referrer) > -1) {\n          blacklisted = true;\n          break;\n        }\n      }\n    }\n    return blacklisted;\n  }\n\n\n  /**\n   * Shows the current adSlot.\n   * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n   */\n  show() {\n    if (!this.shown === true) {\n      this.shown = true; // Ensure show will be called once per adSlot\n      googletag.cmd.push(() => {\n        if (this.deferredSlot) {\n          this.slot = this.defineSlot();\n        }\n        // console.log('calling show for slot',this.id,' called @',window.performance.now());\n        document.getElementById(this.id).classList.remove('h-hidden');\n        googletag.display(this.id);\n      });\n    }\n  }\n\n  /**\n   * Shows the current adSlot.\n   * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n   */\n  hide() {\n    googletag.cmd.push(() => {\n      document.getElementById(this.id).classList.add('h-hidden');\n    });\n  }\n\n  /**\n   * Initializes page-level slot definition for the current slot\n   * @return {Slot} slot - the Google Slot that was defined from this AdSlot configuration\n   */\n  defineSlot() {\n    if (this.isMaavaron()) {\n      const maavaronSlot = this.defineMaavaron();\n      if (this.adManager.shouldSendRequestToDfp(this)) {\n        if (!this.shown) {\n          this.shown = true; // Ensure show will be called once\n          maavaronSlot.display();\n        }\n      }\n      return maavaronSlot;\n    }\n    const googletag = window.googletag;\n    const pubads = googletag.pubads();\n    const args = [];\n    const defineFn = this.isOutOfPage() ? googletag.defineOutOfPageSlot : googletag.defineSlot;\n    // 3 or 2 params according to the function that we want to activate.\n    args.push(this.getPath());\n    if (this.isOutOfPage() === false) {\n      if (this.fluid) {\n        args.push('fluid');\n      }\n      else {\n        args.push(this.adSizeMapping);\n      }\n    }\n    args.push(this.id);\n    let slot = defineFn.apply(defineFn, args);\n    if (slot) {\n      // Responsive size Mapping\n      if (this.responsive) {\n        let responsiveSlotSizeMapping = googletag.sizeMapping();\n        const breakpoints = globalConfig.breakpointsConfig.breakpoints;\n        const keys = Object.keys(this.responsiveAdSizeMapping);\n        for (const key of keys) { // ['xxs','xs',...]\n          responsiveSlotSizeMapping.addSize(\n            [breakpoints[key], 100], // 100 is a default height, since it is height agnostic\n            this.responsiveAdSizeMapping[key]);\n        }\n        responsiveSlotSizeMapping = responsiveSlotSizeMapping.build();\n        slot = slot.defineSizeMapping(responsiveSlotSizeMapping);\n      }\n      slot = slot.addService(pubads);\n      if (this.isOutOfPage() === false) {\n        slot.setCollapseEmptyDiv(true);\n      }\n    }\n    return slot;\n  }\n\n  /**\n   * Returns the current path calculated for the adSlot\n   * @returns {String} a formatted string that represent the path for the slot definition\n   */\n  getPath() {\n    /* eslint-disable no-shadow */\n    let path = globalConfig.path || [];\n    path = path.filter(path => path !== '.');\n    path = path.map(section => `${this.id}${this.department}${section}`).join('/');\n    // If a path exist, it will be preceded with a forward slash\n    path = path && this.config.department !== '_homepage' ? `/${path}` : '';\n    /* eslint-enable no-shadow */\n    const calculatedPath = `/${this.config.network}/${this.config.adUnitBase}/${this.id}/${this.id}${this.department}${path}`; // eslint-disable-line max-len\n    return calculatedPath.toLowerCase();\n  }\n\n  /* eslint-disable */\n  slotRendered(event) {\n    const id = event.slot.getAdUnitPath().split('/')[3]; // Convention: [0]/[1]network/[2]base/[3]id\n    const isEmpty = event.isEmpty; // Did the ad return as empty?\n    const resolvedSize = event.size; // What 'creative' size did the ad return with?\n    // Empty or onload callback should be called next?\n  }\n  /* eslint-enable */\n\n  /**\n   * Refresh this adSlot\n   */\n  refresh() {\n    googletag.cmd.push(() => {\n      googletag.pubads().refresh([this.slot]);\n    });\n  }\n\n  /**\n   * Shows 'Maavaron' type adSlot using Passback definition\n   * @return {Slot} slot - the Google Slot that was defined for Maavaron\n   */\n  defineMaavaron() {\n    if (!document.referrer.match('loc.haaretz')) {\n      const adUnitMaavaronPath = this.getPath();\n      const adUnitMaavaronSize = [\n        [2, 1],\n      ];\n      const slot = googletag.pubads().definePassback(adUnitMaavaronPath, adUnitMaavaronSize)\n        .setTargeting('UserType', [this.user.type])\n        .setTargeting('age', [this.user.age])\n        .setTargeting('urgdr', [this.user.gender])\n        .setTargeting('articleId', [globalConfig.articleId])\n        .setTargeting('stg', [globalConfig.environment]);\n      return slot;\n    }\n    return null;\n  }\n}\n","/**\n * Checks whether two arrays are equal\n * @param {Array} a - the first array to check\n * @param {Array} b - the second array to check\n * @returns {Boolean} true iff both a and b are arrays, with equal values\n */\nexport function arraysEqual(a, b) {\n  if (!a || !b) return false;\n  if (!Array.isArray(a) || !Array.isArray(b)) return false;\n  if (a === b) return true;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\nexport default arraysEqual;\n","/* global googletag */\nimport User from '../objects/user';\nimport ConflictResolver from '../objects/conflictResolver';\nimport AdSlot from '../objects/adSlot';\nimport { getBreakpoint, getBreakpointName } from '../utils/breakpoints';\nimport { arraysEqual } from '../utils/arrays';\n\n// There are a total of 7 adTargets:\n// \"all\",\"nonPaying\",\"anonymous\",\"registered\",\"paying\",\"digitalOnly\" and \"digitalAndPrint\"\nexport const adPriorities = {\n  high: 'high',\n  normal: 'normal',\n  low: 'low',\n};\n\nexport const adTargets = {\n  all: 'all',\n  nonPaying: 'nonPaying',\n  anonymous: 'anonymous',\n  registered: 'registered',\n  paying: 'paying',\n  digitalOnly: 'digitalOnly',\n  digitalAndPrint: 'digitalAndPrint',\n};\n\n// There are a total of 3 userTypes: \"anonymous\", \"registered\" and \"payer\"\nexport const userTypes = {\n  anonymous: 'anonymous',\n  registered: 'registered',\n  payer: 'payer',\n};\n\nexport const adTypes = {\n  maavaron: '.maavaron',\n  popunder: '.popunder',\n  talkback: '.talkback',\n  regular: '',\n};\n\n\nexport default class AdManager {\n\n  constructor(config) {\n    this.config = Object.assign({}, config);\n    this.user = new User(config);\n    this.conflictResolver = new ConflictResolver(config.conflictManagementConfig);\n    /**\n     * Avoid race conditions by making sure to respect the usual timing of GPT.\n     * This DFP implementation uses Enable-Define-Display:\n     * Define page-level settings\n     * enableServices()\n     * Define slots\n     * Display slots\n     */\n    try {\n      googletag.cmd.push(() => {\n        this.initGoogleTargetingParams(); //  Define page-level settings\n        this.initGoogleGlobalSettings();  //  enableServices()\n        this.initSlotRenderedCallback();  //  Define callbacks\n      });\n      // Holds adSlot objects as soon as possible.\n      googletag.cmd.push(() => {\n        this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.high);\n      });\n      // Once DOM ready, add more adSlots.\n      document.addEventListener('DOMContentLoaded', () => {\n        googletag.cmd.push(() => {\n          this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.high);\n          googletag.cmd.push(() => {\n            this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.normal);\n          });\n        });\n      });\n      // Once window was loaded, add the rest of the adSlots.\n      window.addEventListener('load', () => {\n        googletag.cmd.push(() => {\n          this.adSlots = this.initAdSlots(config.adSlotConfig, adPriorities.low);\n        });\n      });\n    }\n    catch (err) {\n      console.error(err); // eslint-disable-line no-console\n    }\n  }\n\n  /**\n   * Shows all of the adSlots that can be displayed.\n   */\n  showAllSlots() {\n    for (const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if (adSlot.type !== adTypes.talkback && this.shouldSendRequestToDfp(adSlot)) {\n        adSlot.show();\n      }\n    }\n  }\n\n  /**\n   * Gets all adSlots that has a certain priority\n   * @param {adPriority} priority - the priority of the ad {high, normal, low}\n   * @return {Array<AdSlot>} adSlots - all of the defined adSlots that matches\n   * the given priority\n   */\n  getAdSlotsByPriority(priority) {\n    function priorityFilter(adSlot) {\n      return adSlot.priority === priority;\n    }\n    return Array.from(this.adSlots.values()).filter(priorityFilter);\n  }\n\n  showAllDeferredSlots() {\n    for (const deferredSlotId of this.conflictResolver.deferredSlots) {\n      if (this.adSlots.has(deferredSlotId)) {\n        if (!this.conflictResolver.isBlocked(deferredSlotId)) {\n          const deferredAdSlot = this.adSlots.get(deferredSlotId);\n          if (this.shouldSendRequestToDfp(deferredAdSlot)) {\n            deferredAdSlot.show();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Refreshes all responsive adSlots\n   */\n  refreshAllSlots() {\n    const currentBreakpoint = getBreakpoint();\n    for (const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if (adSlot.responsive) {\n        if (adSlot.lastResolvedWithBreakpoint !== currentBreakpoint &&\n          this.shouldSendRequestToDfp(adSlot)) {\n          // console.log(`calling refresh for adSlot: ${adSlot.id}`);\n          adSlot.refresh();\n        }\n        else {\n          adSlot.hide();\n        }\n      }\n    }\n  }\n\n  /**\n   * Initializes adSlots based on the currently found slot markup (HTML page specific),\n   * and the predefined configuration for the slots.\n   * @param {Object} adSlotConfig - the AdSlots configuration object (see: globalConfig)\n   * @param {String} filteredPriority - filters out all adSlots that does not match\n   * a given adPriority. This is used to cherry pick the init process of ads.\n   * @returns {Map}\n   */\n  initAdSlots(adSlotConfig, filteredPriority) {\n    const adSlots = new Map(this.adSlots);\n    let adSlotPlaceholders = Array.from(document.getElementsByClassName('js-dfp-ad'));\n    adSlotPlaceholders = adSlotPlaceholders.filter(node => node.id); // only nodes with an id\n    const adSlotNodeSet = new Set();\n    adSlotPlaceholders = Array.prototype.filter.call(adSlotPlaceholders, node => {\n      if (adSlotNodeSet.has(node.id) === false) { // first occurrence of Node\n        adSlotNodeSet.add(node.id);\n        return true;\n      }\n      return false;\n    });\n    // adSlotPlaceholders = adSlotPlaceholders.sort((a,b) => a.offsetTop - b.offsetTop);\n    adSlotPlaceholders.forEach(adSlot => {\n      const adSlotPriority = adSlotConfig[adSlot.id] ?\n      adSlotConfig[adSlot.id].priority || adPriorities.normal : undefined;\n      if (adSlotConfig[adSlot.id] && adSlots.has(adSlot.id) === false &&\n        adSlotPriority === filteredPriority) {\n        // The markup has a matching configuration from adSlotConfig AND was not already defined\n        try {\n          // adSlotConfig is built from globalConfig, but can be overridden by markup\n          const computedAdSlotConfig = Object.assign({}, adSlotConfig[adSlot.id], {\n            id: adSlot.id,\n            target: adSlot.attributes['data-audtarget'] ?\n              adSlot.attributes['data-audtarget'].value : adTargets.all,\n            type: this.getAdType(adSlot.id),\n            responsive: adSlotConfig[adSlot.id].responsive,\n            fluid: adSlotConfig[adSlot.id].fluid || false,\n            user: this.user,\n            adManager: this,\n            htmlElement: adSlot,\n            department: this.config.department,\n            network: this.config.adManagerConfig.network,\n            adUnitBase: this.config.adManagerConfig.adUnitBase,\n            deferredSlot: this.conflictResolver.isBlocked(adSlot.id),\n            priority: adSlotPriority,\n          });\n          const adSlotInstance = new AdSlot(computedAdSlotConfig);\n          adSlots.set(adSlot.id, adSlotInstance);\n          if (adSlotInstance.type !== adTypes.talkback &&\n            adSlotInstance.priority === adPriorities.high &&\n            this.shouldSendRequestToDfp(adSlotInstance)) {\n            /*\n             console.log('calling show for high priority slot', adSlotInstance.id, ' called @',\n             window.performance.now());\n             */\n            adSlotInstance.show();\n          }\n        }\n        catch (err) {\n          console.error(err); // eslint-disable-line no-console\n        }\n      }\n    });\n    return adSlots;\n  }\n\n  isPriority(adSlotId) {\n    return (typeof adSlotId === 'string' &&\n    (adSlotId.indexOf('plazma') > 0 ||\n    adSlotId.indexOf('maavaron') > 0 ||\n    adSlotId.indexOf('popunder') > 0));\n  }\n\n  /**\n   * Returns the adType based on the adSlot name.\n   * @param {String} adSlotId - the adSlot's identifier.\n   * @returns {*} enumerated export 'adTypes'\n   */\n  getAdType(adSlotId) {\n    if (!adSlotId) {\n      throw new Error('Missing argument: a call to getAdType must have an adSlotId');\n    }\n    if (adSlotId.indexOf(adTypes.maavaron) > -1) return adTypes.maavaron;\n    if (adSlotId.indexOf(adTypes.popunder) > -1) return adTypes.popunder;\n    if (adSlotId.indexOf(adTypes.talkback) > -1) return adTypes.talkback;\n    return adTypes.regular;\n  }\n\n  /**\n   * @param {object} adSlot the AdSlot\n   * @returns {boolean|*}\n   */\n  shouldSendRequestToDfp(adSlot) {\n    // Conflict management check\n    return this.conflictResolver.isBlocked(adSlot.id) === false &&\n      // Valid Referrer check\n      adSlot.isWhitelisted() &&\n      // Not in referrer Blacklist\n      adSlot.isBlacklisted() === false &&\n      this.shouldDisplayAdAfterAdBlockRemoval(adSlot) &&\n      // Responsive: breakpoint contains ad?\n      this.doesBreakpointContainAd(adSlot) &&\n      // Targeting check (userType vs. slotTargeting)\n      this.doesUserTypeMatchBannerTargeting(adSlot) &&\n      // Impressions Manager check (limits number of impressions per slot)\n      this.user.impressionManager.reachedQuota(adSlot.id) === false;\n  }\n\n  shouldDisplayAdAfterAdBlockRemoval(adSlot) {\n    return !(this.config.adBlockRemoved === true &&\n    (adSlot.type === adTypes.maavaron ||\n    adSlot.type === adTypes.popunder));\n  }\n\n  /**\n   * Check whether or not an ad slot should appear for the current user type\n   * @param {String} adSlotOrTarget the adSlot to check or the target as a string\n   * @returns {boolean} true iff the slot should appear for the user type\n   */\n  doesUserTypeMatchBannerTargeting(adSlotOrTarget) {\n    const userType = this.user.type;\n    const adTarget = typeof adSlotOrTarget === 'string' ? adSlotOrTarget : adSlotOrTarget.target;\n\n    switch (adTarget) {\n      case adTargets.all : return true;\n      case adTargets.nonPaying :\n        return userType === userTypes.anonymous || userType === userTypes.registered;\n      case adTargets.anonymous : return userType === userTypes.anonymous;\n      case adTargets.registered : return userType === userTypes.registered;\n      case adTargets.paying : return userType === userTypes.payer;\n      case adTargets.digitalOnly : return userType === userTypes.payer;\n      case adTargets.digitalAndPrint : return userType === userTypes.payer;\n      default: return false;\n    }\n  }\n\n  /**\n   * Report to the AdManager that a breakpoint has been switched (passed from one break to\n   * another). Should there be a responsive slot with a\n   * @param {Breakpoint} breakpoint - the breakpoint that is currently being displayed\n   * @returns {Integer} affected - the number of adSlots affected by the change\n   */\n  switchedToBreakpoint(breakpoint) {\n    if (!breakpoint) {\n      throw new Error('Missing argument: a call to switchedToBreakpoint must have an breakpoint');\n    }\n    let count = 0;\n    for (const adSlotKey of this.adSlots.keys()) {\n      const adSlot = this.adSlots.get(adSlotKey);\n      if (adSlot.responsive === true && adSlot.lastResolvedWithBreakpoint) {\n        if (adSlot.lastResolvedWithBreakpoint !== breakpoint) {\n          adSlot.refresh();\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Checks whether an adSlot is defined for a given breakpoint (Default: current breakpoint)\n   * @param {AdSlot} adSlot - the adSlot to check.\n   * @param {Breakpoint} [breakpoint=currentBreakpoint] - the breakpoint to check this ad in.\n   * @returns {boolean} true iff the adSlot is defined for the given breakpoint.\n   */\n  doesBreakpointContainAd(adSlot, breakpoint = getBreakpoint()) {\n    if (!adSlot) {\n      throw new Error('Missing argument: a call to doesBreakpointContainAd must have an adSlot');\n    }\n    let containsBreakpoint = true;\n    if (adSlot.responsive === true) {\n      const mapping = adSlot.responsiveAdSizeMapping[getBreakpointName(breakpoint)];\n      if (Array.isArray(mapping) === false) {\n        throw new Error(`Invalid argument: breakpoint:${breakpoint} doesn't exist!`, this);\n      }\n      containsBreakpoint = mapping.length > 0 && !arraysEqual(mapping, [0, 0]);\n    }\n    return containsBreakpoint;\n  }\n\n  /**\n   * Initializes the callback from the 'slotRenderEnded' event for each slot\n   */\n  initSlotRenderedCallback() {\n    if (window.googletag && window.googletag.apiReady) {\n      const pubads = window.googletag.pubads();\n      pubads.addEventListener('slotRenderEnded', event => {\n        const id = event.slot.getAdUnitPath().split('/')[3];\n        const isEmpty = event.isEmpty;\n        const resolvedSize = event.size;\n        // console.log('slotRenderEnded for slot',id,' called @',window.performance.now());\n        if (this.adSlots.has(id)) {\n          const adSlot = this.adSlots.get(id);\n          adSlot.lastResolvedSize = resolvedSize;\n          adSlot.lastResolvedWithBreakpoint = getBreakpoint();\n          if (isEmpty) {\n            adSlot.lastResolvedSize = ConflictResolver.EMPTY_SIZE;\n            adSlot.hide();\n            this.releaseSlotDependencies(adSlot);\n          }\n          else {\n            this.user.impressionManager.registerImpression(`${adSlot.id}${this.config.department}`);\n            this.user.impressionManager.registerImpression(`${adSlot.id}_all`);\n            this.releaseSlotDependencies(adSlot, adSlot.lastResolvedSize);\n          }\n        }\n        else {\n          /*\n           console.error(`Cannot find an adSlot with id: ${id} - Ad Unit path is\n           ${event.slot.getAdUnitPath()}`);\n           */\n        }\n      });\n    }\n    else {\n      throw new Error('googletag api was not ready when \\'initSlotRenderedCallback\\' was called!');\n    }\n  }\n\n  releaseSlotDependencies(adSlot) {\n    try {\n      const id = adSlot.id;\n      this.conflictResolver.updateResolvedSlot(id, adSlot.lastResolvedSize);\n      if (this.conflictResolver.isBlocking(id)) {\n        // Hide all blocked adSlots\n        for (const blockedSlot of this.conflictResolver.getBlockedSlotsIds(id)) {\n          if (this.conflictResolver.isBlocked(blockedSlot)) {\n            if (this.adSlots.has(blockedSlot)) {\n              this.adSlots.get(blockedSlot).hide();\n            }\n          }\n        }\n        // Show the non blocked\n        for (const deferredSlotKey of this.conflictResolver.deferredSlots.keys()) {\n          const deferredAdSlot = this.adSlots.get(deferredSlotKey);\n          if (deferredAdSlot && this.shouldSendRequestToDfp(deferredAdSlot)) {\n            this.conflictResolver.deferredSlots.delete(deferredSlotKey);\n            if (deferredAdSlot.deferredSlot) {\n              deferredAdSlot.defineSlot();\n              deferredAdSlot.deferredSlot = false;\n            }\n            deferredAdSlot.show();\n          }\n        }\n      }\n    }\n    catch (err) {\n      /* eslint-disable no-console*/\n      console.error(`Cannot updateSlotDependencies for adSlot: ${adSlot.id}`);\n      /* eslint-enable no-console*/\n    }\n  }\n\n  /**\n   * Initializes page-level targeting params.\n   */\n  initGoogleTargetingParams() {\n    if (window.googletag && window.googletag.apiReady) {\n      // Returns a reference to the pubads service.\n      const pubads = googletag.pubads();\n      // Environment targeting (dev, test, prod)\n      if (this.config.environment) {\n        pubads.setTargeting('stg', [this.config.environment]);\n      }\n\n      // User targeting\n      if (this.user.type) {\n        pubads.setTargeting('UserType', [this.user.type]);\n      }\n      if (this.user.age) {\n        pubads.setTargeting('age', [this.user.age]);\n      }\n      if (this.user.gender) {\n        pubads.setTargeting('urgdr', [this.user.gender]);\n      }\n\n      // Context targeting\n      if (this.config.articleId) {\n        pubads.setTargeting('articleId', [this.config.articleId]);\n      }\n      if (this.config.gStatCampaignNumber && this.config.gStatCampaignNumber !== -1) {\n        pubads.setTargeting('gstat_campaign_id', [this.config.gStatCampaignNumber]);\n      }\n\n      // UTM targeting\n      /* eslint-disable no-underscore-dangle */\n      if (this.config.utm_.content) {\n        pubads.setTargeting('utm_content', [this.config.utm_.content]);\n      }\n      if (this.config.utm_.source) {\n        pubads.setTargeting('utm_source', [this.config.utm_.source]);\n      }\n      if (this.config.utm_.medium) {\n        pubads.setTargeting('utm_medium', [this.config.utm_.medium]);\n      }\n      if (this.config.utm_.campaign) {\n        pubads.setTargeting('utm_campaign', [this.config.utm_.campaign]);\n      }\n      /* eslint-enable no-underscore-dangle */\n      // AdBlock removal\n      if (this.config.adBlockRemoved) {\n        pubads.setTargeting('adblock_removed', [this.config.adBlockRemoved]);\n      }\n      // University targeting - triggered via cookie\n      if (this.config.wifiLocation) {\n        pubads.setTargeting('wifi', [this.config.wifiLocation]);\n      }\n\n      // Ads Centering\n      pubads.setCentering(true);\n    }\n    else {\n      throw new Error('googletag api was not ready when \\'initGoogleTargetingParams\\' was called!');\n    }\n  }\n\n  /**\n   * Initializes googletag services.\n   */\n  initGoogleGlobalSettings() {\n    if (window.googletag && window.googletag.apiReady) {\n      if (window.location.search &&\n        window.location.search.indexOf('sraon') > 0) {\n        console.log('enableSingleRequest mode: active');// eslint-disable-line no-console\n        googletag.pubads().enableSingleRequest();\n      }\n      if (!this.config.isMobile) {\n        googletag.pubads().enableAsyncRendering();\n      }\n      else {\n        googletag.pubads().enableAsyncRendering();\n        // disabled: googletag.pubads().enableSyncRendering();\n      }\n      // Enables all GPT services that have been defined for ad slots on the page.\n      googletag.enableServices();\n    }\n    else {\n      throw new Error('googletag api wasn\\'t ready when \\'initGoogleGlobalSettings\\' was called!');\n    }\n  }\n}\n","/* globals googletag */\nimport AdManager from '../src/objects/adManager';\nimport globalConfig from './globalConfig';\nimport { getBreakpoint, debounce } from '../src/utils/breakpoints';\n\nconst defaultConfig = globalConfig || {};\nconst googletagInitTimeout = 10000;\nconst resizeTimeout = 250;\n\nexport default class DFP {\n\n  constructor(config) {\n    this.config = Object.assign({}, defaultConfig, config);\n    this.wasInitialized = false;\n    this.breakpoint = getBreakpoint();\n    this.initWindowResizeListener();\n  }\n\n  /**\n   * This part of the object's construction is dependent on the call to 'init'\n   */\n  resumeInit() {\n    try {\n      this.adManager = new AdManager(this.config);\n    }\n    catch (err) {\n      console.error(err); // eslint-disable-line no-console\n    }\n  }\n\n  /**\n   * initializes the 'googletag' global namespace and add the\n   * google publish tags library to the page\n   * @returns {Promise} that resolves to true once the googletag api is ready to use\n   * (googletag.apiReady = true)\n   */\n  initGoogleTag() {\n    const dfpThis = this;\n    return new Promise((resolve, reject) => {\n      if (dfpThis.wasInitialized === true || (window.googletag && window.googletag.apiReady)) {\n        this.adManager = this.adManager || new AdManager(this.config);\n        dfpThis.wasInitialized = true;\n        resolve(this.isGoogleTagReady);\n      }\n      else {\n        // set up a place holder for the gpt code downloaded from google\n        window.googletag = window.googletag || {};\n\n        // this is a command queue used by GPT any methods added to it will be\n        // executed when GPT code is available, if GPT is already available they\n        // will be executed immediately\n        window.googletag.cmd = window.googletag.cmd || [];\n        // load google tag services JavaScript\n        (() => {\n          const tag = window.document.createElement('script');\n          tag.async = false;\n          tag.type = 'text/javascript';\n          // var useSSL = 'https:' == document.location.protocol;\n          tag.setAttribute('src', '//www.googletagservices.com/tag/js/gpt.js');\n          const node = window.document.getElementsByTagName('script')[0];\n          tag.onload = () => {\n            dfpThis.wasInitialized = true;\n            dfpThis.resumeInit();\n            resolve(this.isGoogleTagReady);\n          };\n          tag.onerror = (error) => {\n            dfpThis.wasInitialized = false;\n            reject(error);\n          };\n          node.parentNode.insertBefore(tag, node);\n        })();\n      }\n    });\n  }\n\n  /**\n   *\n   * @returns {Promise}\n   */\n  isGoogleTagReady() {\n    const promise = new Promise((resolve, reject) => {\n      googletag.cmd.push(() => {\n        resolve(this);\n      });\n      setTimeout(() => {\n        if (!(googletag && googletag.apiReady === true)) {\n          reject(new Error('googletag failed to initialize on the page!'));\n        }\n      }, googletagInitTimeout);\n    });\n    return promise;\n  }\n\n  /**\n   * Initializes the window resize listener to support responsive ad refreshes\n   */\n  initWindowResizeListener() {\n    const dfpThis = this;\n    function onResize() {\n      const currentBreakpoint = getBreakpoint();\n      if (dfpThis.breakpoint !== currentBreakpoint) {\n        dfpThis.breakpoint = currentBreakpoint;\n        if (dfpThis.adManager) {\n          dfpThis.adManager.refreshAllSlots();\n        }\n        else {\n          throw new Error('initWindowResizeListener error - adManager instance is not available');\n        }\n      }\n    }\n    const debouncedFunction = debounce(onResize, resizeTimeout);\n    window.onresize = debouncedFunction;\n  }\n}\n","import DFP from './dfp';\nimport globalConfig from './globalConfig';\nimport { version as v } from './../package.json';\n// const pkg = require('./../package.json');\n\n// DFP version is based on the package.json\nDFP.version = v || 'VERSION';\n\n/*\n // Only for development mode\n if ( process.env.NODE_ENV !== 'production' ) {\n DFP.dev = '123';\n }\n */\n\nexport const config = globalConfig;\nexport const version = DFP.version;\nexport default DFP;\n"],"names":["stringToMap","string","separator","operator","map","itemsArr","split","forEach","element","keyValue","length","decodeURIComponent","ssoKey","window","location","hostname","indexOf","getCookieAsMap","document","cookie","tmsso","engsso","dfpConfig","Object","assign","referrer","isMobile","test","navigator","userAgent","isHomepage","pathname","environment","department","domain","regexMatch","exec","result","path","sectionArray","articleId","slice","filter","section","index","arr","reduce","last","current","concat","env","port","dev","prod","undefined","articleIdMatch","pop","content","getUrlParam","source","medium","campaign","key","results","RegExp","search","adBlockRemoved","localStorage","getItem","err","wifiLocation","cookieMap","_htzwif","gStatCampaignNumber","gstatCampaign","JSON","parse","CampaignNumber","breakpoints","isType1","breakpoints1","breakpoints2","Date","getTime","addHours","date","hours","SyntaxError","isNaN","parseInt","TypeError","setHours","getHours","addDays","days","setDate","getDate","globalConfig","breakpointsConfig","debounce","func","wait","immediate","timeout","debounced","context","args","arguments","later","apply","callNow","setTimeout","getBreakpoint","breakpoint","windowWidth","innerWidth","xs","xxs","s","m","l","xl","xxl","getBreakpointName","resultBreakpoint","keys","ImpressionsManager","impressionManagerConfig","now","config","impressions","retrieveImpressionsData","initImpressionMap","migrateImpressionsData","hasOwnProperty","call","frequency","impressionsData","oldImpressionsArray","e","impression","adUnitImpression","name","data","tmp","target","slotId","join","id","exposed","expires","adSlotId","err1","debouncedSave","saveImpressionsToLocalStorageImpl","setItem","stringify","error","slot","shouldUpdateExpiryDate","initSlotFromConfig","updateExpiryDate","slotName","Error","frequencyMap","match","frequencyRegex","setMilliseconds","setSeconds","setMinutes","maxImpressions","saveImpressionsToLocalStorage","atQuota","userTypes","User","userConfig","sso","type","getUserType","impressionManager","ImpressionManager","age","getUserAge","gender","getUserGender","userType","payerProp","payer","registered","anonymous","usrae","urgdr","ConflictResolver","conflictManagementConfig","dependencyMap","initializeDependencyMap","deferredSlots","Set","conflictManagementJson","queue","Map","value","rules","item","onsize","avoid","set","resolvedSize","has","get","resolvedWith","isBlocked","adSlotKey","adSlot","adSlotRule","parentResolvedWith","add","find","size","sizeString","numberStr","arraysEqual","isBlocking","Array","from","a","b","i","EMPTY_SIZE","adSlotConfig","responsive","fluid","user","adManager","htmlElement","priority","deferredSlot","network","adUnitBase","adSizeMapping","responsiveAdSizeMapping","blacklistReferrers","whitelistReferrers","lastResolvedSize","lastResolvedWithBreakpoint","defineSlot","adTypes","maavaron","popunder","talkback","regular","whitelisted","blacklisted","shown","cmd","push","getElementById","classList","remove","display","isMaavaron","maavaronSlot","defineMaavaron","shouldSendRequestToDfp","googletag","pubads","defineFn","isOutOfPage","defineOutOfPageSlot","getPath","responsiveSlotSizeMapping","sizeMapping","addSize","build","defineSizeMapping","addService","setCollapseEmptyDiv","calculatedPath","toLowerCase","event","getAdUnitPath","isEmpty","refresh","adUnitMaavaronPath","adUnitMaavaronSize","definePassback","setTargeting","isArray","adPriorities","adTargets","AdManager","conflictResolver","initGoogleTargetingParams","initGoogleGlobalSettings","initSlotRenderedCallback","adSlots","initAdSlots","high","addEventListener","normal","low","show","priorityFilter","values","deferredSlotId","deferredAdSlot","currentBreakpoint","hide","filteredPriority","adSlotPlaceholders","getElementsByClassName","node","adSlotNodeSet","prototype","adSlotPriority","computedAdSlotConfig","attributes","all","getAdType","adManagerConfig","adSlotInstance","AdSlot","isWhitelisted","isBlacklisted","shouldDisplayAdAfterAdBlockRemoval","doesBreakpointContainAd","doesUserTypeMatchBannerTargeting","reachedQuota","adSlotOrTarget","adTarget","nonPaying","paying","digitalOnly","digitalAndPrint","count","containsBreakpoint","mapping","apiReady","releaseSlotDependencies","registerImpression","updateResolvedSlot","getBlockedSlotsIds","blockedSlot","deferredSlotKey","delete","utm_","setCentering","log","enableSingleRequest","enableAsyncRendering","enableServices","defaultConfig","googletagInitTimeout","resizeTimeout","DFP","wasInitialized","initWindowResizeListener","dfpThis","Promise","resolve","reject","isGoogleTagReady","tag","createElement","async","setAttribute","getElementsByTagName","onload","resumeInit","onerror","parentNode","insertBefore","promise","onResize","refreshAllSlots","debouncedFunction","onresize","version","v"],"mappings":"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"}