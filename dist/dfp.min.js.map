{"version":3,"sources":["../src/index.js"],"names":["stringToMap","string","_ref","arguments","length","undefined","_ref$separator","separator","_ref$operator","operator","map","split","forEach","element","keyValue","decodeURIComponent","e","getCookieAsMap","document","cookie","tmsso","engsso","addHours","date","hours","SyntaxError","isNaN","parseInt","TypeError","result","Date","setHours","getHours","addDays","days","setDate","getDate","debounce","func","wait","immediate","timeout","context","this","args","later","apply","callNow","clearTimeout","setTimeout","getBreakpoint","breakpoint","windowWidth","window","innerWidth","documentElement","clientWidth","body","breakpoints","xs","xxs","s","m","l","xl","xxl","getBreakpointName","resultBreakpoint","arraysEqual","a","b","Array","isArray","i","version","_classCallCheck","instance","Constructor","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_toConsumableArray","arr","arr2","from","ssoKey","location","hostname","indexOf","dfpBaseConf","JSON","parse","getElementById","textContent","err","dfpConfig","assign","referrer","isMobile","test","navigator","userAgent","isHomepage","pathname","environment","department","domain","regexMatch","exec","path","sectionArray","articleId","slice","filter","section","index","reduce","last","current","concat","site","env","dev","prod","port","articleIdMatch","pop","utm_","content","getUrlParam","source","medium","campaign","results","RegExp","search","adBlockRemoved","localStorage","getItem","ssoGroupKey","anonymousId","cookieName","cookieMap","isWriterAlerts","wifiLocation","toLowerCase","isValidForsmartPhone","validForAds","PageUrl","href","isSmartphoneapp","match","NotPayer","HtzPusr","gStatCampaignNumber","gstatCampaign","CampaignNumber","proposalNumber","proposal","adSlotConfig","haaretz.co.il.example.slot","id","responsive","adSizeMapping","priority","fluid","responsiveAdSizeMapping","blacklistReferrers","whitelistReferrers","adManagerConfig","network","adUnitBase","breakpointsConfig","googleGlobalSettings","breakpointType","breakpoints1","breakpoints2","breakpoints3","breakpoints4","userConfig","type","age","gender","conflictManagementConfig","blocking.ad.unit.name","onsize","avoid","impressionManagerConfig","ad.unit.name","frequency","exposed","expires","getTime","enableSingleRequest","enableAsyncRendering","refreshIntervalTime","sso","keys","impressions","frequencyRegex","maxImpressions","adSlotId","ImpressionsManager","now","config","retrieveImpressionsData","initImpressionMap","value","_this","migrateImpressionsData","hasOwnProperty","call","_this2","impressionsData","oldImpressionsArray","impression","adUnitImpression","name","data","tmp","slotId","join","err1","debouncedSave","saveImpressionsToLocalStorageImpl","setItem","stringify","console","error","_this3","slot","shouldUpdateExpiryDate","initSlotFromConfig","updateExpiryDate","slotName","Error","frequencyMap","setMilliseconds","setSeconds","setMinutes","saveImpressionsToLocalStorage","atQuota","userTypes","payer","registered","anonymous","trial","productTypes","htz","tm","hdc","htz_tm","User","getUserType","htz_type","getUserTypeByProduct","tm_type","hdc_type","impressionManager","getUserAge","getUserGender","getUserSSO","userType","productType","userProducts","getHdcUserType","getHtzTmUserType","userHasProduct","products","product","prodNum","usrae","urgdr","ssoKey$$1","ConflictResolver","dependencyMap","initializeDependencyMap","deferredSlots","Set","conflictManagementJson","queue","Map","rules","item","set","resolvedWith","resolvedSize","has","get","isBlocked","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","adSlotKey","adSlot","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","adSlotRule","parentResolvedWith","add","find","sizeString","size","numberStr","return","isBlocking","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","EMPTY_SIZE","hiddenClass","user","adManager","htmlElement","deferredSlot","lastResolvedSize","lastResolvedWithBreakpoint","defineSlot","adTypes","maavaron","popunder","talkback","regular","whitelisted","blacklisted","shown","googletag","cmd","push","classList","remove","display","isMaavaron","maavaronSlot","defineMaavaron","shouldSendRequestToDfp","pubads","defineFn","isOutOfPage","defineOutOfPageSlot","getPath","responsiveSlotSizeMapping","sizeMapping","addSize","build","defineSizeMapping","addService","setCollapseEmptyDiv","event","getAdUnitPath","isEmpty","_this4","refresh","adUnitMaavaronPath","adUnitMaavaronSize","definePassback","setTargeting","adPriorities","high","normal","low","adTargets","all","nonPaying","paying","digitalOnly","digitalAndPrint","userTypes$1","AdManager","conflictResolver","initGoogleTargetingParams","initGoogleGlobalSettings","initSlotRenderedCallback","currentBreakpointName","adSlots","initAdSlots","onDomLoaded","log","onWindowLoaded","blockingAdSlotKey","delete","showAllDeferredSlots","readyState","addEventListener","adSlot$$1","show","priorityFilter","values","deferredSlotId","deferredAdSlot","currentBreakpoint","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","hide","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","adUnitName","filteredPriority","adSlotPlaceholders","getElementsByClassName","node","adSlotNodeSet","adSlotPriority","computedAdSlotConfig","attributes","getAdType","adSlotInstance","isWhitelisted","isBlacklisted","shouldDisplayAdAfterAdBlockRemoval","shouldDisplayAdMaavaronAfterPayWallBanner","doesBreakpointContainAd","haveValidCookieForSmartphoneapp","doesUserTypeMatchBannerTargeting","reachedQuota","shouldDisplay","paywallBanner","mc","nextslotLocation","includes","adSlotOrTarget","count","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","containsBreakpoint","mapping","apiReady","releaseSlotDependencies","registerImpression","updateResolvedSlot","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","getBlockedSlotsIds","blockedSlot","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","deferredSlotKey","tags","setCentering","enableSyncRendering","enableServices","defaultConfig","resizeTimeout","DFP","wasInitialized","initStarted","initWindowResizeListener","dfpThis","Promise","resolve","reject","tag","createElement","async","setAttribute","getElementsByTagName","resumeInit","parentNode","insertBefore","onResize","refreshAllSlots","debouncedFunction","onresize","version$1"],"mappings":"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","file":"dfp.min.js","sourcesContent":["import { version } from 'package.json';\n\nvar _classCallCheck = (function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n});\n\nvar _createClass = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n})();\n\nvar _toConsumableArray = (function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }return arr2;\n  } else {\n    return Array.from(arr);\n  }\n});\n\n/**\n * Htz-cookie-util\n * @module htzCookieUtil\n * @author Elia Grady elia.grady@haaretz.co.il\n * @license MIT\n */\n\n/**\n * Translates Key-Value string into a convenient map.\n * @param {String} string String in format of \"key<operator>value<separator>.....\"\n * @param {object} options object for overriding defaults:\n * options.separator is a String or regExp that separates between each key value pairs\n * (default is ';'). options.operator is a String or regExp that separates between each key\n * and value within a pair (default is '=').\n * @returns {object} a map object, with key-value mapping according to the passed configuration.\n */\nfunction stringToMap(string) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$separator = _ref.separator,\n      separator = _ref$separator === undefined ? ';' : _ref$separator,\n      _ref$operator = _ref.operator,\n      operator = _ref$operator === undefined ? '=' : _ref$operator;\n\n  var map = {};\n  var itemsArr = string.split(separator);\n  itemsArr.forEach(function (element) {\n    if (typeof element === 'string') {\n      var keyValue = element.split(operator);\n      if (keyValue.length === 2) {\n        try {\n          map[keyValue[0]] = decodeURIComponent(keyValue[1]);\n        } catch (e) {\n          // Do nothing, malformed URI\n        }\n      }\n    }\n  });\n  return map;\n}\nvar ssoKey = window.location.hostname.indexOf('haaretz.com') > -1 ? 'engsso' : 'tmsso';\n\n// Translates Cookie string into a convenient map.\nfunction getCookieAsMap() {\n  var map = stringToMap(document.cookie, { separator: /;\\s?/ });\n  if (typeof map.tmsso === 'string') {\n    map.tmsso = stringToMap(map.tmsso, { separator: ':' });\n  }\n  if (typeof map.engsso === 'string') {\n    map.engsso = stringToMap(map.engsso, { separator: ':' });\n  }\n  return map;\n}\n\n/* global dfpConfig */\n// globalConfig for DFP\nvar dfpBaseConf = void 0;\ntry {\n  dfpBaseConf = window.JSON.parse(document.getElementById('dfpConfig').textContent);\n} catch (err) {\n  dfpBaseConf = window.dfpConfig;\n}\nvar dfpConfig = Object.assign({\n  get referrer() {\n    return document.referrer ? document.referrer : '';\n  },\n  get isMobile() {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent || '')\n    );\n  },\n  /**\n   * Returns true iff the loaded page is the homepage (no inner path)\n   * @returns {boolean}\n   */\n  get isHomepage() {\n    return window.location.pathname === '/' || this.environment === 3; // 'prod'\n  },\n  get department() {\n    return this.isHomepage ? '_homepage' : '_section';\n  },\n  /**\n   * returns the domain the page was loaded to. i.e: 'haaretz.co.il', 'haaretz.com'\n   * @returns {string} the domain name from the windows's location hostname property\n   */\n  get domain() {\n    var regexMatch = /([\\d|\\w]+)(\\.co\\.il|\\.com)(.*)?/.exec(window.location.hostname);\n    var result = regexMatch ? regexMatch[0] : window.location.hostname;\n    return result;\n  },\n  /**\n   * Returns an array of concatenated paths, separated by a dot.\n   * For example, for the URL:\n   * http://www.haaretz.co.il/news/world/america/us-election-2016/LIVE-1.2869045\n   * the path is '/news/world/america/us-election-2016/LIVE-1.2869045'.\n   * This function takes the directories ['news', 'world', 'america', 'us-election-2016']\n   * and converts it to the following format:\n   * ['.news', '.news.world', '.news.world.america', '.news.world.america.us-election-2016']\n   * This denotes the path configuration for the given adSlot\n   * non articles (sections) will be given a '0' - no articleId value for targeting purposes)\n   * @returns {Array.<T>} an array of path names\n   */\n  get path() {\n    var sectionArray = this.articleId && this.articleId !== '0' ? window.location.pathname.split('/').slice(1, -1) : window.location.pathname.split('/').slice(1);\n    sectionArray = sectionArray.filter(function (path) {\n      return path !== 'wwwMobileSite' && path !== 'whtzMobileSite';\n    });\n    return sectionArray.map(function (section) {\n      return '.' + section;\n    }).map(function (section, index, arr) {\n      return arr.slice(0, index + 1).reduce(function (last, current) {\n        return last.concat(current);\n      });\n    });\n  },\n  /**\n   * Returns a string representation for the name of the site\n   * @return {*|string}\n   */\n  get site() {\n    var site = void 0;\n    if (window.location.hostname.indexOf('haaretz.co.il') > -1) {\n      site = 'haaretz';\n    } else if (window.location.hostname.indexOf('themarker.com') > -1) {\n      site = 'themarker';\n    } else if (window.location.hostname.indexOf('mouse.co.il') > -1) {\n      site = 'mouse';\n    }\n    return site || 'haaretz';\n  },\n  /**\n   * Returns the current environment targeting param, if such is defined.\n   * @returns {number} targeting param, 1 for local development, 2 for test servers and 3 for prod.\n   * May return undefined if no targeting is specified.\n   */\n  get environment() {\n    var env = {\n      dev: 1,\n      test: 2,\n      prod: 3\n    };\n    return window.location.port === '8080' ? env.dev : window.location.hostname.indexOf('pre.haaretz.co.il') > -1 || window.location.hostname.indexOf('tmtest.themarker.com') > -1 || window.location.hostname.indexOf('pre.haaretz.com') > -1 || window.location.hostname.indexOf('prodmouse.mouse.co.il') > -1 ? env.test : window.location.pathname.indexOf('/cmlink/Haaretz.HomePage') > -1 || window.location.pathname.indexOf('/cmlink/TheMarker.HomePage') > -1 || window.location.pathname.indexOf('/cmlink/Mouse.HomePage') > -1 ? env.prod : undefined;\n  },\n  /**\n   * Returns the articleIf if on an article page, or null otherwise\n   * @returns {string} an articleId string from the pathname, or 0 if not found\n   */\n  get articleId() {\n    var articleIdMatch = /\\d\\.\\d+/g.exec(window.location.pathname);\n    var articleId = '0';\n    if (articleIdMatch) {\n      articleId = articleIdMatch.pop(); // Converts [\"1.23145\"] to \"1.23145\"\n    }\n    return articleId;\n  },\n  utm_: {\n    get content() {\n      return this.getUrlParam('utm_content');\n    },\n    get source() {\n      return this.getUrlParam('utm_source');\n    },\n    get medium() {\n      return this.getUrlParam('utm_medium');\n    },\n    get campaign() {\n      return this.getUrlParam('utm_campaign');\n    },\n    getUrlParam: function getUrlParam(key) {\n      var results = RegExp('(' + key + ')(=)([^&\"]+)').exec(window.location.search);\n      return results && results[3] ? results[3] : undefined;\n    }\n  },\n  get adBlockRemoved() {\n    var adBlockRemoved = false;\n    try {\n      if (localStorage.getItem('adblock_removed')) {\n        adBlockRemoved = true;\n      }\n    } catch (err) {\n      // do nothing\n    }\n    return adBlockRemoved;\n  },\n  get ssoGroupKey() {\n    return window.localStorage.getItem('_ssoGroupKey');\n  },\n  get anonymousId() {\n    var cookieName = 'anonymousId';\n    var cookieMap = getCookieAsMap();\n    var anonymousId = '';\n    if (cookieMap && cookieMap[cookieName]) {\n      anonymousId = cookieMap[cookieName];\n    }\n    return anonymousId;\n  },\n  get isWriterAlerts() {\n    return location.search.indexOf('writerAlerts=true') > -1;\n  },\n  get wifiLocation() {\n    var wifiLocation = void 0;\n    var cookieName = '_htzwif'; // eslint-disable-line no-underscore-dangle\n    var cookieMap = getCookieAsMap();\n    try {\n      if (cookieMap && cookieMap[cookieName]) {\n        if (cookieMap[cookieName].toLowerCase() === 'arcaffe') {\n          wifiLocation = 'ArCafe';\n        }\n        if (cookieMap[cookieName].toLowerCase() === 'university') {\n          wifiLocation = 'university';\n        }\n      }\n    } catch (err) {\n      // do nothing\n    }\n    return wifiLocation;\n  },\n  get isValidForsmartPhone() {\n    var validForAds = true;\n    var PageUrl = window.location.href;\n    var isSmartphoneapp = PageUrl.match('haaretzsmartphoneapp');\n    var cookieMap = getCookieAsMap();\n    try {\n      if (isSmartphoneapp) {\n        // eslint-disable-line no-underscore-dangle\n        if (!cookieMap || !(cookieMap.NotPayer || cookieMap.HtzPusr)) {\n          validForAds = false;\n        }\n      }\n    } catch (err) {\n      // do nothing\n    }\n    return validForAds;\n  },\n  get gStatCampaignNumber() {\n    var gstatCampaign = void 0;\n    try {\n      gstatCampaign = localStorage.getItem('GstatCampaign') ? JSON.parse(localStorage.getItem('GstatCampaign')) : undefined;\n    } catch (err) {\n      /* In case of thrown 'SecurityError' or 'QuotaExceededError',\n       the variable should be undefined */\n      gstatCampaign = undefined;\n    }\n    return gstatCampaign ? gstatCampaign.CampaignNumber : undefined;\n  },\n  get proposalNumber() {\n    var proposal = void 0;\n    try {\n      proposal = localStorage.getItem('proposaltype') ? localStorage.getItem('proposaltype') : undefined;\n    } catch (err) {\n      /* In case of thrown 'SecurityError' or 'QuotaExceededError',\n       the variable should be undefined */\n      proposal = undefined;\n    }\n    return proposal;\n  },\n  adSlotConfig: {\n    'haaretz.co.il.example.slot': {\n      id: 'slotId',\n      // path : \"/network/base/slotId/slotId_subsection\", Will be calculated from AdManager\n      responsive: true,\n      adSizeMapping: [['width1', 'height1']].concat(['widthN', 'heightN']),\n      priority: 'normal',\n      fluid: false,\n      responsiveAdSizeMapping: {\n        xxs: [['width1', 'height1']].concat(['widthN', 'heightN']),\n        xs: [['width1', 'height1']].concat(['widthN', 'heightN']),\n        s: [['width1', 'height1']].concat(['widthN', 'heightN']),\n        m: [['width1', 'height1']].concat(['widthN', 'heightN']),\n        l: [['width1', 'height1']].concat(['widthN', 'heightN']),\n        xl: [['width1', 'height1']].concat(['widthN', 'heightN']),\n        xxl: [['width1', 'height1']].concat(['widthN', 'heightN'])\n      },\n      blacklistReferrers: 'comma, delimited, blacklisted, referrer, list',\n      whitelistReferrers: 'comma, delimited, referrer, list'\n    }\n  },\n  adManagerConfig: {\n    network: '9401',\n    adUnitBase: 'haaretz.co.il_Web'\n  },\n  breakpointsConfig: {\n    get breakpoints() {\n      // Override in VM from backend to control this toggle.\n      var breakpoints = void 0;\n      switch (dfpConfig.googleGlobalSettings.breakpointType) {\n        case 'type1':\n          breakpoints = this.breakpoints1;break;\n        case 'type2':\n          breakpoints = this.breakpoints2;break;\n        case 'type3':\n          breakpoints = this.breakpoints3;break;\n        case 'type4':\n          breakpoints = this.breakpoints4;break;\n        default:\n          breakpoints = this.breakpoints1;\n      }\n      return breakpoints;\n    },\n    // Type 1\n    breakpoints1: {\n      xxs: 600,\n      xs: 761,\n      s: 993,\n      m: 1009,\n      l: 1291,\n      xl: 1600,\n      xxl: 1900\n    },\n    // Type 2\n    breakpoints2: {\n      xxs: 600,\n      xs: 1000,\n      s: 1150,\n      m: 1281,\n      l: 1600,\n      xl: 1920,\n      xxl: 1920\n    },\n    // Type 3\n    breakpoints3: {\n      xxs: 100,\n      xs: 480,\n      s: 600,\n      m: 768,\n      l: 1024,\n      xl: 1280,\n      xxl: 1900\n    },\n    // Type 4\n    breakpoints4: {\n      xxs: 600,\n      xs: 768,\n      s: 1024,\n      m: 1280,\n      l: 1900,\n      xl: 1900,\n      xxl: 1900\n    }\n  },\n  userConfig: {\n    type: undefined,\n    age: undefined,\n    gender: undefined\n  },\n  conflictManagementConfig: {\n    'blocking.ad.unit.name': [{\n      onsize: '1280x200,970x250,3x3',\n      avoid: 'blocked.ad.unit.name'\n    }, {\n      onsize: '1280x200,970x250,3x3',\n      avoid: 'blocked.ad.unit.name'\n    }]\n  },\n  impressionManagerConfig: {\n    'ad.unit.name': {\n      target: 'all|section|homepage',\n      frequency: '$1/$2(day|hour)',\n      exposed: 0,\n      expires: new Date().getTime()\n    }\n  },\n  googleGlobalSettings: {\n    enableSingleRequest: true,\n    enableAsyncRendering: true,\n    refreshIntervalTime: 1000,\n    breakpointType: 'type1'\n  },\n  sso: ssoKey\n\n}, dfpBaseConf);\n\n/**\n * Helper function. Adds N hours to a given date object.\n * @param {Date} date - the date to derive from\n * @param {Number} hours - the amount of hours to add, in whole numbers\n * @throws {SyntaxError} Will throw if the 'date' param is not provided\n * @throws {SyntaxError} Will throw if the 'hours' param is not provided\n * @throws {TypeError} Will throw if the 'hours' param is not a valid integer\n * @returns {Date} date - the new date, derived from adding the given hours\n */\nfunction addHours(date, hours) {\n  if (!date) {\n    throw new SyntaxError('addHours called without a required \\'date\\' parameter!');\n  }\n  if (!hours) {\n    throw new SyntaxError('addHours called without a required \\'hours\\' parameter!');\n  } else if (isNaN(parseInt(hours, 10))) {\n    throw new TypeError('addHours called with an invalid integer \\'hours\\' parameter!');\n  }\n  var result = new Date(date);\n  result.setHours(result.getHours() + parseInt(hours, 10));\n  return result;\n}\n\n/**\n * Helper function. Adds N days to a given date object.\n * @param {Date} date - the date to derive from\n * @param {Integer} days - the amount of days to add\n * @throws {SyntaxError} Will throw if the 'date' param is not provided\n * @throws {SyntaxError} Will throw if the 'days' param is not provided\n * @throws {TypeError} Will throw if the 'hours' param is not a valid integer\n * @returns {Date} date - the new date, derived from adding the given days\n */\nfunction addDays(date, days) {\n  if (!date) {\n    throw new SyntaxError('addDays called without a required \\'date\\' parameter!');\n  }\n  if (!days) {\n    throw new SyntaxError('addDays called without a required \\'days\\' parameter!');\n  } else if (isNaN(parseInt(days, 10))) {\n    throw new TypeError('addDays called with an invalid integer \\'days\\' parameter!');\n  }\n  var result = new Date(date);\n  result.setDate(result.getDate() + parseInt(days, 10));\n  return result;\n}\n\nvar breakpoints = dfpConfig.breakpointsConfig.breakpoints;\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * @param { function } func - the function to run\n * @param { number } wait - the timeout period to avoid running the function\n * @param { boolean } immediate - leading edge modifier\n * @returns {function } the debounced function\n */\nfunction debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  var immediate = arguments[2];\n\n  var timeout = void 0;\n  return function debounced() {\n    var context = this;\n    var args = arguments; // eslint-disable-line prefer-rest-params\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @returns {number} the break that the current width represents\n */\nfunction getBreakpoint() {\n  var breakpoint = void 0;\n  var windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  switch (true) {\n    case windowWidth < breakpoints.xs:\n      breakpoint = breakpoints.xxs;break;\n    case windowWidth < breakpoints.s:\n      breakpoint = breakpoints.xs;break;\n    case windowWidth < breakpoints.m:\n      breakpoint = breakpoints.s;break;\n    case windowWidth < breakpoints.l:\n      breakpoint = breakpoints.m;break;\n    case windowWidth < breakpoints.xl:\n      breakpoint = breakpoints.l;break;\n    case windowWidth < breakpoints.xxl:\n      breakpoint = breakpoints.xl;break;\n    default:\n      breakpoint = breakpoints.xxl;\n  }\n  return breakpoint;\n}\n/**\n * Returns the current breakpoint that is closest to the window's width\n * @param {number} breakpoint - the breakpoint label enumerator that the current width represents\n * (yield with a getBreakpoint() call or passed manually )\n * @returns {string} breakpoint - the breakpoint label that the current width represents,\n * as a string\n */\nfunction getBreakpointName(breakpoint) {\n  var resultBreakpoint = void 0;\n  var windowWidth = breakpoint || window.innerWidth;\n  switch (true) {\n    case windowWidth < breakpoints.xs:\n      resultBreakpoint = 'xxs';break;\n    case windowWidth < breakpoints.s:\n      resultBreakpoint = 'xs';break;\n    case windowWidth < breakpoints.m:\n      resultBreakpoint = 's';break;\n    case windowWidth < breakpoints.l:\n      resultBreakpoint = 'm';break;\n    case windowWidth < breakpoints.xl:\n      resultBreakpoint = 'l';break;\n    case windowWidth < breakpoints.xxl:\n      resultBreakpoint = 'xl';break;\n    default:\n      resultBreakpoint = 'xxl';\n  }\n  return resultBreakpoint;\n}\n\nvar keys = {\n  impressions: 'impressions',\n  frequency: 'frequency',\n  /**\n   * [0] - full match\n   * [1] - impression count i.e: \"1\" | \"22\"\n   * [2] - impression expiry range quantifier  i.e: \"1\" | \"22\"\n   * [3] - impression expiry range unit i.e: \"day\" | \"hour\"\n   */\n  frequencyRegex: /(\\d+)\\/(\\d+)(day|hour)/,\n  expires: 'expires',\n  exposed: 'exposed',\n  target: 'target',\n  maxImpressions: 'maxImpressions',\n  hours: 'hour',\n  days: 'day',\n  adSlotId: 'id'\n};\n\nvar ImpressionsManager = function () {\n  function ImpressionsManager(impressionManagerConfig) {\n    _classCallCheck(this, ImpressionsManager);\n\n    this.now = new Date().getTime(); // this date is used for comparisons only\n    this.config = Object.assign({}, impressionManagerConfig);\n    this.impressions = this.retrieveImpressionsData();\n    this.initImpressionMap();\n  }\n\n  _createClass(ImpressionsManager, [{\n    key: 'retrieveImpressionsData',\n    value: function retrieveImpressionsData() {\n      var _this = this;\n\n      var impressions = this.migrateImpressionsData();\n      /*\n       Merge migrated data with new data\n       console.log('Migrated: ',impressions);\n       */\n      Object.keys(impressions).map(function (key, index) {\n        impressions[key] = Object.assign({}, impressions[key], _this.config[key]);\n        return _this;\n      });\n      /*\n       console.log('Merged: ',impressions);\n       Filter out entries without frequency\n       */\n      for (var key in impressions) {\n        if ({}.hasOwnProperty.call(impressions, key)) {\n          if (!impressions[key][keys.frequency]) {\n            // console.log(`Removing ${key} - since it does not have a frequency`,impressions[key]);\n            delete impressions[key];\n          }\n        }\n      }\n      // console.log('Filtered: ',impressions);\n      return impressions;\n    }\n  }, {\n    key: 'migrateImpressionsData',\n    value: function migrateImpressionsData() {\n      var _this2 = this;\n\n      var impressions = void 0;\n      var impressionsData = void 0;\n      try {\n        impressionsData = window.localStorage.getItem(keys.impressions);\n      } catch (err) {\n        // In case of thrown 'SecurityError' or 'QuotaExceededError', the variable should be undefined\n        impressionsData = undefined;\n      }\n      try {\n        impressions = JSON.parse(impressionsData);\n      } catch (err) {\n        // Here is where old impression data is converted to new format\n        impressions = {};\n        var oldImpressionsArray = impressionsData.split(';').filter(function (e) {\n          return e;\n        });\n\n        oldImpressionsArray.forEach(function (impression) {\n          try {\n            var adUnitImpression = impression.split(' = ');\n            var name = adUnitImpression[0];\n            var data = adUnitImpression[1];\n            var tmp = name.split('.');\n            var target = tmp.pop();\n            if (target && target === 'hp') {\n              target = 'homepage';\n            }\n            var slotId = tmp.join('.');\n            var id = slotId + '_' + target;\n            var exposed = parseInt(data.split('/')[0], 10) || 0;\n            var expires = parseInt(data.split('/')[1], 10) || _this2.now;\n            impressions[id] = {};\n            impressions[id][keys.adSlotId] = slotId;\n            impressions[id][keys.target] = target;\n            impressions[id][keys.exposed] = exposed;\n            impressions[id][keys.expires] = expires;\n          } catch (err1) {\n            // console.log(`Failed converting impression: ${impression}`, err1);\n          }\n        });\n      }\n      return impressions || {};\n    }\n\n    /**\n     * Define the debounced version of the local storage save\n     */\n\n  }, {\n    key: 'saveImpressionsToLocalStorage',\n    value: function saveImpressionsToLocalStorage() {\n      if (this.debouncedSave && typeof this.debouncedSave === 'function') {\n        this.debouncedSave();\n      } else {\n        this.debouncedSave = debounce(this.saveImpressionsToLocalStorageImpl, 250, false);\n        this.debouncedSave();\n      }\n    }\n\n    /**\n     * Implementation of saving the impression map to localstorage\n     */\n\n  }, {\n    key: 'saveImpressionsToLocalStorageImpl',\n    value: function saveImpressionsToLocalStorageImpl() {\n      try {\n        localStorage.setItem(keys.impressions, JSON.stringify(this.impressions));\n      } catch (err) {\n        /* In case of thrown 'SecurityError' or 'QuotaExceededError',\n         the operation should not break*/\n        console.error('localStorage isn\\'t available:', err); // eslint-disable-line no-console\n      }\n    }\n\n    /**\n     * Initializes the impression map based on the retrieved impressions and the global\n     * configuration.\n     */\n\n  }, {\n    key: 'initImpressionMap',\n    value: function initImpressionMap() {\n      var _this3 = this;\n\n      Object.keys(this.config).map(function (key, index) {\n        var adSlotId = key;\n        var slot = _this3.impressions[adSlotId];\n        var shouldUpdateExpiryDate = false;\n        // Case I: Existing slot (update)\n        if (slot) {\n          // Case I.I Existing slot, frequency has changed\n          if (_this3.config[adSlotId][keys.frequency] !== slot[keys.frequency]) {\n            // Updating the frequency will trigger a new expiry date\n            shouldUpdateExpiryDate = true;\n            _this3.impressions[adSlotId][keys.frequency] = _this3.config[adSlotId][keys.frequency];\n          } // Case I.II Existing slot, old expiry date\n          else if (_this3.now > slot[keys.expires]) {\n              // Old value that should trigger a new expiry date\n              shouldUpdateExpiryDate = true;\n            }\n        } // Case II: Non-existing slot (create new slot)\n        else {\n            _this3.initSlotFromConfig(adSlotId);\n          } // Finally, updates the expiry date (cases I.I and I.II)\n        if (shouldUpdateExpiryDate) {\n          _this3.updateExpiryDate(adSlotId);\n        }\n        return _this3;\n      });\n    }\n\n    /**\n     * Updates the expiry date of a slotName based on the configured slot frequency\n     * @param {String} slotName - the slotName to update.\n     */\n\n  }, {\n    key: 'updateExpiryDate',\n    value: function updateExpiryDate(slotName) {\n      var now = new Date();\n      if (!(this.impressions[slotName] && this.impressions[slotName][keys.frequency])) {\n        throw new Error('Unable to update expiry date for slot: ' + slotName + '\\n      - this.impressions[slotName]:', this.impressions[slotName]);\n      }\n      var frequencyMap = this.impressions[slotName][keys.frequency].match(keys.frequencyRegex);\n      now.setMilliseconds(0);\n      now.setSeconds(0);\n      now.setMinutes(0);\n      if (frequencyMap.indexOf(keys.days) > -1) {\n        now.setHours(0);\n      }\n      this.impressions[slotName][keys.expires] = (frequencyMap.indexOf(keys.days) > -1 ? addDays(now, frequencyMap[2]) : addHours(now, frequencyMap[2])).getTime();\n\n      // Set max impressions:\n      this.impressions[slotName][keys.maxImpressions] = parseInt(frequencyMap[1], 10);\n      // Reset exposed\n      this.impressions[slotName][keys.exposed] = 0;\n    }\n\n    /**\n     * Initializes a non-existing slot from the passed global configuration for the slot\n     * @param {String} slotName - the name of the slot to create\n     */\n\n  }, {\n    key: 'initSlotFromConfig',\n    value: function initSlotFromConfig(slotName) {\n      var slot = this.impressions[slotName] || {};\n      slot[keys.frequency] = this.config[slotName][keys.frequency];\n      slot[keys.target] = this.config[slotName][keys.target];\n      slot[keys.exposed] = 0;\n      this.impressions[slotName] = slot;\n      this.updateExpiryDate(slotName);\n    }\n\n    /**\n     * Registers an impression for a given adSlot.\n     * @param {String} adSlotId - the adSlot id to register an impression for\n     * @returns {boolean} returns true iff the impression has been registered\n     */\n\n  }, {\n    key: 'registerImpression',\n    value: function registerImpression(adSlotId) {\n      if (adSlotId) {\n        var slot = this.impressions[adSlotId];\n        if (slot) {\n          var exposed = slot[keys.exposed];\n          if (isNaN(parseInt(exposed, 10)) === false) {\n            this.impressions[adSlotId][keys.exposed] += 1;\n            try {\n              this.saveImpressionsToLocalStorage();\n            } catch (err) {\n              // console.log('Error saving ad impressions to localStorage!', err);\n            }\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Checks whether an adSlot has reached it's allocated impressions count.\n     * @param {String} adSlotId - the adSlot to check\n     * @returns {boolean} true iff there is a quota for the adSlot, and it has been reached\n     */\n\n  }, {\n    key: 'reachedQuota',\n    value: function reachedQuota(adSlotId) {\n      // An adSlotId is suffixed with _homepage | _section if it's targeting is different\n      // between the two. If there is no difference, an _all suffix can be used.\n      var slotName = this.impressions['' + adSlotId + dfpConfig.department] ? '' + adSlotId + dfpConfig.department : adSlotId + '_all';\n\n      var slot = this.impressions[slotName];\n      var atQuota = false;\n      if (slot) {\n        var now = new Date().getTime();\n        // Second element of 2/4day matches '2'\n        var expires = this.impressions[slotName][keys.expires];\n        if (expires < now) {\n          this.updateExpiryDate(slotName);\n        } else {\n          var maxImpressions = this.impressions[slotName][keys.maxImpressions];\n          // Not expired, did reach max impressions?\n          if (maxImpressions) {\n            atQuota = this.impressions[slotName][keys.exposed] >= maxImpressions;\n          }\n        }\n      }\n      return atQuota;\n    }\n\n    /**\n     * Clears the impression map from 'exposed' impressions\n     */\n\n  }, {\n    key: 'resetImpressions',\n    value: function resetImpressions() {\n      var impressions = this.impressions;\n      for (var key in impressions) {\n        if ({}.hasOwnProperty.call(impressions, key)) {\n          if (impressions[key][keys.exposed]) {\n            impressions[key][keys.exposed] = 0;\n          }\n        }\n      }\n      this.saveImpressionsToLocalStorage();\n    }\n  }]);\n\n  return ImpressionsManager;\n}();\n\nvar userTypes = {\n  payer: 'payer',\n  registered: 'registered',\n  anonymous: 'anonymous',\n  trial: 'trial'\n};\n\nvar productTypes = {\n  htz: 243,\n  tm: 273,\n  hdc: 239,\n  htz_tm: 274\n};\n\nvar User = function () {\n  function User(config) {\n    _classCallCheck(this, User);\n\n    this.config = Object.assign({}, config.userConfig);\n    var cookieMap = getCookieAsMap();\n    this.ssoKey = dfpConfig.sso;\n    if (!cookieMap[this.ssoKey]) {\n      // Flips the ssoKey, since cookieMap.ssoKey cannot be used to retrieve data\n      this.ssoKey = this.ssoKey === 'tmsso' ? 'engsso' : 'tmsso';\n    }\n    this.type = this.getUserType(cookieMap);\n    this.htz_type = this.getUserTypeByProduct(cookieMap, productTypes.htz);\n    this.tm_type = this.getUserTypeByProduct(cookieMap, productTypes.tm);\n    this.hdc_type = this.getUserTypeByProduct(cookieMap, productTypes.hdc);\n    this.impressionManager = new ImpressionsManager(config.impressionManagerConfig);\n    this.age = this.getUserAge(cookieMap);\n    this.gender = this.getUserGender(cookieMap);\n    this.sso = this.getUserSSO(cookieMap, this.ssoKey);\n  }\n\n  _createClass(User, [{\n    key: 'getUserType',\n    value: function getUserType(cookieMap) {\n      var userType = void 0;\n      if (cookieMap && cookieMap[this.ssoKey]) {\n        var payerProp = window.location.hostname.indexOf('haaretz.com') > -1 ? 'HdcPusr' : 'HtzPusr';\n        userType = cookieMap[payerProp] ? userTypes.payer : userTypes.registered;\n      } else {\n        userType = userTypes.anonymous;\n      }\n      return userType;\n    }\n  }, {\n    key: 'getUserTypeByProduct',\n    value: function getUserTypeByProduct(cookieMap, productType) {\n      var userType = userTypes.anonymous;\n      if (cookieMap && cookieMap[this.ssoKey]) {\n        if (cookieMap.userProducts) {\n          var userProducts = decodeURIComponent(cookieMap.userProducts);\n          userProducts = JSON.parse(userProducts);\n          if (productType === productTypes.hdc) {\n            userType = this.getHdcUserType(userProducts);\n          } else {\n            userType = this.getHtzTmUserType(userProducts, productType);\n          }\n        }\n      }\n      return userType;\n    }\n  }, {\n    key: 'getHdcUserType',\n    value: function getHdcUserType(userProducts) {\n      // user has hdc paying product\n      if (this.userHasProduct(userProducts, productTypes.hdc, false)) {\n        return userTypes.payer;\n      }\n      // user has hdc trial product\n      else if (this.userHasProduct(userProducts, productTypes.hdc, true)) {\n          return userTypes.trial;\n        }\n      return userTypes.registered;\n    }\n  }, {\n    key: 'getHtzTmUserType',\n    value: function getHtzTmUserType(userProducts, productType) {\n      // user has htz/tm paying product\n      if (this.userHasProduct(userProducts, productType, false) || this.userHasProduct(userProducts, productTypes.htz_tm, false)) {\n        return userTypes.payer;\n      }\n      // user has htz/tm trial product\n      else if (this.userHasProduct(userProducts, productType, true) || this.userHasProduct(userProducts, productTypes.htz_tm, true)) {\n          return userTypes.trial;\n        }\n      return userTypes.registered;\n    }\n  }, {\n    key: 'userHasProduct',\n    value: function userHasProduct(userProducts, productType, trial) {\n      return userProducts.products.filter(function (product) {\n        return product.prodNum === productType && product.trial === trial;\n      }).length > 0;\n    }\n  }, {\n    key: 'getUserAge',\n    value: function getUserAge(cookieMap) {\n      var age = void 0;\n      var usrae = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].usrae;\n      if (usrae) {\n        age = parseInt(cookieMap[this.ssoKey].usrae, 10);\n        age = age > 0 ? age : undefined;\n      }\n      return age;\n    }\n  }, {\n    key: 'getUserGender',\n    value: function getUserGender(cookieMap) {\n      var gender = void 0;\n      var urgdr = cookieMap[this.ssoKey] && cookieMap[this.ssoKey].urgdr;\n      if (urgdr) {\n        gender = parseInt(cookieMap[this.ssoKey].urgdr, 10);\n        gender = gender === 2 || gender === 1 ? gender : undefined;\n      }\n      return gender;\n    }\n  }, {\n    key: 'getUserSSO',\n    value: function getUserSSO(cookieMap, ssoKey$$1) {\n      return cookieMap[ssoKey$$1];\n    }\n  }]);\n\n  return User;\n}();\n\nvar ConflictResolver = function () {\n  function ConflictResolver(conflictManagementConfig) {\n    _classCallCheck(this, ConflictResolver);\n\n    this.dependencyMap = this.initializeDependencyMap(conflictManagementConfig);\n    this.deferredSlots = new Set();\n  }\n\n  _createClass(ConflictResolver, [{\n    key: 'initializeDependencyMap',\n    value: function initializeDependencyMap(conflictManagementJson) {\n      var _this = this;\n\n      var queue = new Map();\n      Object.keys(conflictManagementJson).map(function (key, value) {\n        var rules = conflictManagementJson[key];\n        if (rules) {\n          rules = rules.filter(function (item) {\n            return item.onsize && item.avoid;\n          });\n        }\n        queue.set(key, {\n          id: key,\n          rules: rules,\n          resolvedWith: null\n        });\n        return _this;\n      });\n      return queue;\n    }\n  }, {\n    key: 'updateResolvedSlot',\n    value: function updateResolvedSlot(adSlotId, resolvedSize) {\n      if (!adSlotId) {\n        throw new Error('updateResolvedSlot must be called with an adSlotId!');\n      }\n      if (!resolvedSize) {\n        throw new Error('updateResolvedSlot must be called with a resolved size!');\n      }\n      if (this.dependencyMap.has(adSlotId)) {\n        this.dependencyMap.get(adSlotId).resolvedWith = resolvedSize;\n      }\n    }\n  }, {\n    key: 'isBlocked',\n    value: function isBlocked(adSlotId) {\n      var _this2 = this;\n\n      if (!adSlotId) {\n        throw new Error('isBlocked must be called with an adSlotId!');\n      }\n      var isBlocked = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.dependencyMap.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var adSlotKey = _step.value;\n\n          var adSlot = this.dependencyMap.get(adSlotKey);\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = adSlot.rules[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var adSlotRule = _step2.value;\n\n              // Found rule specific to our target\n              if (adSlotRule.avoid === adSlotId) {\n                (function () {\n                  var parentResolvedWith = adSlot.resolvedWith;\n                  // Fail fast: parent is not resolved yet - unknown returned size.\n                  if (!parentResolvedWith) {\n                    isBlocked = true;\n                    _this2.deferredSlots.add(adSlotId);\n                  }\n                  if (adSlotRule.onsize.split(',').find(function (sizeString) {\n                    // eslint-disable-line\n                    var size = sizeString.split('x').map(function (numberStr) {\n                      return parseInt(numberStr, 10);\n                    });\n                    return _this2.arraysEqual(size, parentResolvedWith);\n                  })) {\n                    // Block found\n                    _this2.deferredSlots.add(adSlotId);\n                    isBlocked = true;\n                  }\n                })();\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return isBlocked;\n    }\n  }, {\n    key: 'isBlocking',\n    value: function isBlocking(adSlotId) {\n      if (!adSlotId) {\n        throw new Error('isBlocking must be called with an adSlotId!');\n      }\n      var isBlocking = false;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.dependencyMap.keys()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var adSlotKey = _step3.value;\n\n          if (adSlotKey === adSlotId) {\n            isBlocking = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return isBlocking;\n    }\n\n    /**\n     * Gets an array of adSlot Ids for a given adSlotId, that are dependent on (blocked by)\n     * @param {String} adSlotId - the blocking slot id\n     * @return {Array} an array of blocked slot, that has a dependency on the given slot\n     */\n\n  }, {\n    key: 'getBlockedSlotsIds',\n    value: function getBlockedSlotsIds(adSlotId) {\n      var result = void 0;\n      if (this.dependencyMap.has(adSlotId)) {\n        result = Array.from(this.dependencyMap.get(adSlotId).rules.map(function (adSlot) {\n          return adSlot.avoid;\n        }));\n      }\n      return result || [];\n    }\n  }, {\n    key: 'arraysEqual',\n    value: function arraysEqual(a, b) {\n      if (a === b) return true;\n      if (a === null || b === null) return false;\n      if (a.length !== b.length) return false;\n      for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n      }\n      return true;\n    }\n  }]);\n\n  return ConflictResolver;\n}();\n\nConflictResolver.EMPTY_SIZE = [];\n\n/**\n * Checks whether two arrays are equal\n * @param {Array} a - the first array to check\n * @param {Array} b - the second array to check\n * @returns {Boolean} true iff both a and b are arrays, with equal values\n */\nfunction arraysEqual(a, b) {\n  if (!a || !b) return false;\n  if (!Array.isArray(a) || !Array.isArray(b)) return false;\n  if (a === b) return true;\n  if (a.length !== b.length) return false;\n  for (var i = 0; i < a.length; ++i) {\n    if (Array.isArray(a[i]) && Array.isArray(b[i])) {\n      if (!arraysEqual(a[i], b[i])) return false;\n    } else if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar hiddenClass = dfpConfig.site.indexOf('mouse') > -1 ? 'u-is-hidden' : 'h-hidden';\n\nvar adSlot = function () {\n  function adSlot(adSlotConfig) {\n    _classCallCheck(this, adSlot);\n\n    this.config = Object.assign({}, adSlotConfig);\n\n    // Part I : Markup configuration - passed from AdManager\n    this.id = this.config.id;\n    if (!this.config.id) {\n      throw new Error('an adSlot requires an id!');\n    }\n    this.target = this.config.target;\n    this.type = this.config.type;\n    this.responsive = this.config.responsive;\n    this.fluid = this.config.fluid;\n    this.user = this.config.user;\n    this.adManager = this.config.adManager;\n    this.htmlElement = this.config.htmlElement;\n    this.priority = this.config.priority;\n    this.deferredSlot = this.config.deferredSlot;\n\n    // Part II : Global, general ad configuration - passed from AdManager\n    this.department = this.config.department;\n    this.network = this.config.network;\n    this.adUnitBase = this.config.adUnitBase;\n\n    // Part III : ad specific configuration - passed from globalConfig.adSlotConfig\n    this.adSizeMapping = this.config.adSizeMapping;\n    this.responsiveAdSizeMapping = this.config.responsiveAdSizeMapping;\n    this.blacklistReferrers = this.config.blacklistReferrers ? this.config.blacklistReferrers.split(',') : [];\n    this.whitelistReferrers = this.config.whitelistReferrers ? this.config.whitelistReferrers.split(',') : [];\n\n    // Part IV : Runtime configuration - calculated data - only present in runtime\n    this.lastResolvedSize = undefined; // Initialized in 'slotRenderEnded' callback\n    this.lastResolvedWithBreakpoint = undefined; // Initialized in 'slotRenderEnded' callback\n    this.slot = undefined; // Holds a googletag.Slot object\n    // [https://developers.google.com/doubleclick-gpt/reference#googletag.Slot]\n    try {\n      if (!this.deferredSlot) {\n        this.slot = this.defineSlot();\n      }\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n    }\n  }\n\n  /**\n   * Checks whether this adSlot is an 'Out-of-page' slot or not.\n   * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n   * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n   */\n\n  _createClass(adSlot, [{\n    key: 'isOutOfPage',\n    value: function isOutOfPage() {\n      if (typeof this.type !== 'string') {\n        throw new Error('An adSlot cannot by typeless!', this);\n      }\n      if (this.isMobile() === true) {\n        return false;\n      }\n      switch (this.type) {\n        case adTypes.maavaron:\n          return false;\n        case adTypes.popunder:\n          return true;\n        case adTypes.talkback:\n          return false;\n        case adTypes.regular:\n          return false;\n        default:\n          return false;\n      }\n    }\n\n    /**\n     * Checks whether this adSlot is a 'maavaron' slot or not.\n     * An Out-of-page slot is a slot that is not embedded in the page 'normally'.\n     * @returns {boolean} true iff this adSlot is one of the predefined 'out-of-page' slots.\n     */\n\n  }, {\n    key: 'isMaavaron',\n    value: function isMaavaron() {\n      if (typeof this.type !== 'string') {\n        throw new Error('An adSlot cannot by typeless!', this);\n      }\n      if (this.isMobile() === true) {\n        return false;\n      }\n      switch (this.type) {\n        case adTypes.maavaron:\n          return false;\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: 'isMobile',\n    value: function isMobile() {\n      return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent || '')\n      );\n    }\n    /**\n     * Checks whether or not this adSlot has a non-empty whitelist, and if so, that the current\n     * referrer appears in the whitelist.\n     * Should return false iff there is a whitelist for the current adSlot, but the referrer is not\n     * mentioned in the whitelist.\n     * @returns {boolean} true iff the ad can be displayed.\n     */\n\n  }, {\n    key: 'isWhitelisted',\n    value: function isWhitelisted() {\n      var whitelisted = false;\n      if (this.whitelistReferrers.length !== 0) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.whitelistReferrers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var referrer = _step.value;\n\n            if (dfpConfig.referrer.indexOf(referrer) > -1) {\n              whitelisted = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        whitelisted = true;\n      }\n      return whitelisted;\n    }\n\n    /**\n     * Checks whether or not this adSlot has a non-empty blacklist, and if so, that the current\n     * referrer does not appear in the blacklist.\n     * Should return true iff there is a blacklist for the current adSlot, and the referrer is\n     * mentioned in the blacklist - to indicate that the adSlot is 'blocked'.\n     * @returns {boolean} true iff the ad cannot be displayed.\n     */\n\n  }, {\n    key: 'isBlacklisted',\n    value: function isBlacklisted() {\n      var blacklisted = false;\n      if (this.blacklistReferrers.length !== 0) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.blacklistReferrers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var referrer = _step2.value;\n\n            if (dfpConfig.referrer.indexOf(referrer) > -1) {\n              blacklisted = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n      return blacklisted;\n    }\n\n    /**\n     * Shows the current adSlot.\n     * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n     */\n\n  }, {\n    key: 'show',\n    value: function show() {\n      var _this = this;\n\n      if (!this.shown === true) {\n        this.shown = true; // Ensure show will be called once per adSlot\n        googletag.cmd.push(function () {\n          if (_this.deferredSlot) {\n            _this.slot = _this.defineSlot();\n          }\n          // console.log('calling show for slot',this.id,' called @',window.performance.now());\n          document.getElementById(_this.id).classList.remove(hiddenClass);\n          googletag.display(_this.id);\n        });\n      }\n    }\n\n    /**\n     * Shows the current adSlot.\n     * It assumes a markup is available for this slot (any tag with an id attribute = this.id)\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      var _this2 = this;\n\n      googletag.cmd.push(function () {\n        document.getElementById(_this2.id).classList.add(hiddenClass);\n      });\n    }\n\n    /**\n     * Initializes page-level slot definition for the current slot\n     * @return {Slot} slot - the Google Slot that was defined from this AdSlot configuration\n     */\n\n  }, {\n    key: 'defineSlot',\n    value: function defineSlot() {\n      if (this.isMaavaron()) {\n        var maavaronSlot = this.defineMaavaron();\n        if (this.adManager.shouldSendRequestToDfp(this)) {\n          if (!this.shown) {\n            this.shown = true; // Ensure show will be called once\n            maavaronSlot.display();\n          }\n        }\n        return maavaronSlot;\n      }\n      var googletag = window.googletag;\n      var pubads = googletag.pubads();\n      var args = [];\n      var defineFn = this.isOutOfPage() ? googletag.defineOutOfPageSlot : googletag.defineSlot;\n      // 3 or 2 params according to the function that we want to activate.\n      args.push(this.getPath());\n      if (this.isOutOfPage() === false) {\n        if (this.fluid) {\n          args.push('fluid');\n        } else {\n          args.push(this.adSizeMapping);\n        }\n      }\n      args.push(this.id);\n      var slot = defineFn.apply(defineFn, args);\n      if (slot) {\n        // Responsive size Mapping\n        if (this.responsive) {\n          var responsiveSlotSizeMapping = googletag.sizeMapping();\n          var breakpoints = dfpConfig.breakpointsConfig.breakpoints;\n          var keys = Object.keys(this.responsiveAdSizeMapping);\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = keys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var key = _step3.value;\n              // ['xxs','xs',...]\n              responsiveSlotSizeMapping.addSize([breakpoints[key], 100], // 100 is a default height, since it is height agnostic\n              !arraysEqual(this.responsiveAdSizeMapping[key], [[0, 0]]) ? this.responsiveAdSizeMapping[key] : []);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          responsiveSlotSizeMapping = responsiveSlotSizeMapping.build();\n          slot = slot.defineSizeMapping(responsiveSlotSizeMapping);\n        }\n        slot = slot.addService(pubads);\n        if (this.isOutOfPage() === false) {\n          slot.setCollapseEmptyDiv(true);\n        }\n      }\n      return slot;\n    }\n\n    /**\n     * Returns the current path calculated for the adSlot\n     * @returns {String} a formatted string that represent the path for the slot definition\n     */\n\n  }, {\n    key: 'getPath',\n    value: function getPath() {\n      var _this3 = this;\n\n      /* eslint-disable no-shadow */\n      var path = dfpConfig.path || [];\n      path = path.filter(function (path) {\n        return path !== '.';\n      });\n      path = path.map(function (section) {\n        return '' + _this3.id + _this3.department + section;\n      }).join('/');\n      // If a path exist, it will be preceded with a forward slash\n      path = path && this.config.department !== '_homepage' ? '/' + path : '';\n      /* eslint-enable no-shadow */\n      var calculatedPath = '/' + this.config.network + '/' + this.config.adUnitBase + '/' + this.id + '/' + this.id + this.department + path; // eslint-disable-line max-len\n      return calculatedPath.toLowerCase();\n    }\n\n    /* eslint-disable */\n\n  }, {\n    key: 'slotRendered',\n    value: function slotRendered(event) {\n      var id = event.slot.getAdUnitPath().split('/')[3]; // Convention: [0]/[1]network/[2]base/[3]id\n      var isEmpty = event.isEmpty; // Did the ad return as empty?\n      var resolvedSize = event.size; // What 'creative' size did the ad return with?\n      // Empty or onload callback should be called next?\n    }\n    /* eslint-enable */\n\n    /**\n     * Refresh this adSlot\n     */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      var _this4 = this;\n\n      googletag.cmd.push(function () {\n        googletag.pubads().refresh([_this4.slot]);\n      });\n    }\n\n    /**\n     * Shows 'Maavaron' type adSlot using Passback definition\n     * @return {Slot} slot - the Google Slot that was defined for Maavaron\n     */\n\n  }, {\n    key: 'defineMaavaron',\n    value: function defineMaavaron() {\n      if (!document.referrer.match('loc.haaretz')) {\n        var adUnitMaavaronPath = this.getPath();\n        var adUnitMaavaronSize = [[2, 1]];\n        var slot = googletag.pubads().definePassback(adUnitMaavaronPath, adUnitMaavaronSize).setTargeting('UserType', [this.user.type]).setTargeting('age', [this.user.age]).setTargeting('urgdr', [this.user.gender]).setTargeting('articleId', [dfpConfig.articleId]).setTargeting('stg', [dfpConfig.environment]);\n        return slot;\n      }\n      return null;\n    }\n  }]);\n\n  return adSlot;\n}();\n\n// There are a total of 7 adTargets:\n// \"all\",\"nonPaying\",\"anonymous\",\"registered\",\"paying\",\"digitalOnly\" and \"digitalAndPrint\"\nvar adPriorities = {\n  high: 'high',\n  normal: 'normal',\n  low: 'low'\n};\n\nvar adTargets = {\n  all: 'all',\n  nonPaying: 'nonPaying',\n  anonymous: 'anonymous',\n  registered: 'registered',\n  paying: 'paying',\n  digitalOnly: 'digitalOnly',\n  digitalAndPrint: 'digitalAndPrint'\n};\n\n// There are a total of 3 userTypes: \"anonymous\", \"registered\" and \"payer\"\nvar userTypes$1 = {\n  anonymous: 'anonymous',\n  registered: 'registered',\n  payer: 'payer'\n};\n\nvar adTypes = {\n  maavaron: '.maavaron',\n  popunder: '.popunder',\n  talkback: '.talkback',\n  regular: ''\n};\n\nvar AdManager = function () {\n  function AdManager(config) {\n    var _this = this;\n\n    _classCallCheck(this, AdManager);\n\n    this.config = Object.assign({}, config);\n    this.user = new User(config);\n    this.conflictResolver = new ConflictResolver(config.conflictManagementConfig);\n    /**\n     * Avoid race conditions by making sure to respect the usual timing of GPT.\n     * This DFP implementation uses Enable-Define-Display:\n     * Define page-level settings\n     * enableServices()\n     * Define slots\n     * Display slots\n     */\n    try {\n      googletag.cmd.push(function () {\n        _this.initGoogleTargetingParams(); //  Define page-level settings\n        _this.initGoogleGlobalSettings(); //  enableServices()\n        _this.initSlotRenderedCallback(); //  Define callbacks\n      });\n      // Mouse special treatment to base path on mobile breakpoints\n      var currentBreakpointName = getBreakpointName(getBreakpoint());\n      if (this.config.adManagerConfig.adUnitBase.indexOf('mouse.co.il') > -1 && currentBreakpointName.indexOf('xs') > -1) {\n        this.config.adManagerConfig.adUnitBase = 'mouse.co.il.mobile_web';\n      }\n      // Holds adSlot objects as soon as possible.\n      googletag.cmd.push(function () {\n        _this.adSlots = _this.initAdSlots(config.adSlotConfig, adPriorities.high);\n      });\n      // Once DOM ready, add more adSlots.\n      var onDomLoaded = function onDomLoaded() {\n        // eslint-disable-line no-inner-declarations\n        try {\n          googletag.cmd.push(function () {\n            _this.adSlots = _this.initAdSlots(config.adSlotConfig, adPriorities.high);\n            googletag.cmd.push(function () {\n              _this.adSlots = _this.initAdSlots(config.adSlotConfig, adPriorities.normal);\n            });\n          });\n        } catch (err) {\n          console.log(err); // eslint-disable-line no-console\n        }\n      };\n      // Once window was loaded, add the rest of the adSlots.\n      var onWindowLoaded = function onWindowLoaded() {\n        // eslint-disable-line no-inner-declarations\n        googletag.cmd.push(function () {\n          _this.adSlots = _this.initAdSlots(config.adSlotConfig, adPriorities.low);\n          // Clean blocking adSlots that are not defined on this page\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this.conflictResolver.dependencyMap.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var blockingAdSlotKey = _step.value;\n\n              if (!_this.adSlots.has(blockingAdSlotKey)) {\n                _this.conflictResolver.dependencyMap.delete(blockingAdSlotKey);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this.showAllDeferredSlots();\n        });\n      };\n      switch (document.readyState) {\n        case 'loading':\n          document.addEventListener('DOMContentLoaded', onDomLoaded);\n          window.addEventListener('load', onWindowLoaded);\n          break;\n        case 'interactive':\n          onDomLoaded();\n          window.addEventListener('load', onWindowLoaded);\n          break;\n        default:\n          // 'complete' - no need for event listeners.\n          onDomLoaded();\n          onWindowLoaded();\n      }\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n    }\n  }\n\n  /**\n   * Shows all of the adSlots that can be displayed.\n   */\n\n  _createClass(AdManager, [{\n    key: 'showAllSlots',\n    value: function showAllSlots() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.adSlots.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var adSlotKey = _step2.value;\n\n          var adSlot$$1 = this.adSlots.get(adSlotKey);\n          if (adSlot$$1.type !== adTypes.talkback && this.shouldSendRequestToDfp(adSlot$$1)) {\n            adSlot$$1.show();\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    /**\n     * Gets all adSlots that has a certain priority\n     * @param {adPriority} priority - the priority of the ad {high, normal, low}\n     * @return {Array<AdSlot>} adSlots - all of the defined adSlots that matches\n     * the given priority\n     */\n\n  }, {\n    key: 'getAdSlotsByPriority',\n    value: function getAdSlotsByPriority(priority) {\n      function priorityFilter(adSlot$$1) {\n        return adSlot$$1.priority === priority;\n      }\n      return Array.from(this.adSlots.values()).filter(priorityFilter);\n    }\n  }, {\n    key: 'showAllDeferredSlots',\n    value: function showAllDeferredSlots() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.conflictResolver.deferredSlots[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var deferredSlotId = _step3.value;\n\n          if (this.adSlots.has(deferredSlotId)) {\n            if (!this.conflictResolver.isBlocked(deferredSlotId)) {\n              var deferredAdSlot = this.adSlots.get(deferredSlotId);\n              if (this.shouldSendRequestToDfp(deferredAdSlot)) {\n                deferredAdSlot.show();\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n\n    /**\n     * Refreshes all responsive adSlots\n     */\n\n  }, {\n    key: 'refreshAllSlots',\n    value: function refreshAllSlots() {\n      var currentBreakpoint = getBreakpoint();\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.adSlots.keys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var adSlotKey = _step4.value;\n\n          var adSlot$$1 = this.adSlots.get(adSlotKey);\n          if (adSlot$$1.responsive && adSlot$$1.type !== adTypes.maavaron) {\n            if (adSlot$$1.lastResolvedWithBreakpoint !== currentBreakpoint && this.shouldSendRequestToDfp(adSlot$$1)) {\n              // console.log(`calling refresh for adSlot: ${adSlot.id}`);\n              adSlot$$1.refresh();\n            } else {\n              adSlot$$1.hide();\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n\n    /**\n     * Refreshes all adSlots\n     */\n\n  }, {\n    key: 'refreshAllSlotsInPage',\n    value: function refreshAllSlotsInPage() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.adSlots.keys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var adSlotKey = _step5.value;\n\n          var adSlot$$1 = this.adSlots.get(adSlotKey);\n          if (this.shouldSendRequestToDfp(adSlot$$1)) {\n            // console.log(`calling refresh for adSlot: ${adSlot.id}`);\n            adSlot$$1.refresh();\n          } else {\n            adSlot$$1.hide();\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n\n    /**\n     * Refreshes adSlot\n     */\n\n  }, {\n    key: 'refreshSlot',\n    value: function refreshSlot(adUnitName) {\n      var adSlot$$1 = this.adSlots.get(adUnitName);\n      if (this.shouldSendRequestToDfp(adSlot$$1)) {\n        // console.log(`calling refresh for adSlot: ${adSlot.id}`);\n        adSlot$$1.refresh();\n      } else {\n        adSlot$$1.hide();\n      }\n    }\n\n    /**\n    * Initializes adSlots based on the currently found slot markup (HTML page specific),\n    * and the predefined configuration for the slots.\n    * @param {Object} adSlotConfig - the AdSlots configuration object (see: globalConfig)\n    * @param {String} filteredPriority - filters out all adSlots that does not match\n    * a given adPriority. This is used to cherry pick the init process of ads.\n    * @returns {Map}\n    */\n\n  }, {\n    key: 'initAdSlots',\n    value: function initAdSlots(adSlotConfig, filteredPriority) {\n      var _this2 = this;\n\n      var adSlots = new Map(this.adSlots);\n      var adSlotPlaceholders = Array.from(document.getElementsByClassName('js-dfp-ad'));\n      adSlotPlaceholders = adSlotPlaceholders.filter(function (node) {\n        return node.id;\n      }); // only nodes with an id\n      var adSlotNodeSet = new Set();\n      adSlotPlaceholders = Array.prototype.filter.call(adSlotPlaceholders, function (node) {\n        if (adSlotNodeSet.has(node.id) === false) {\n          // first occurrence of Node\n          adSlotNodeSet.add(node.id);\n          return true;\n        }\n        return false;\n      });\n      // adSlotPlaceholders = adSlotPlaceholders.sort((a, b) => a.offsetTop - b.offsetTop);\n      adSlotPlaceholders.forEach(function (adSlot$$1) {\n        var adSlotPriority = adSlotConfig[adSlot$$1.id] ? adSlotConfig[adSlot$$1.id].priority || adPriorities.normal : undefined;\n        if (adSlotConfig[adSlot$$1.id] && adSlots.has(adSlot$$1.id) === false && adSlotPriority === filteredPriority) {\n          // The markup has a matching configuration from adSlotConfig AND was not already defined\n          try {\n            // adSlotConfig is built from globalConfig, but can be overridden by markup\n            var computedAdSlotConfig = Object.assign({}, adSlotConfig[adSlot$$1.id], {\n              id: adSlot$$1.id,\n              target: adSlot$$1.attributes['data-audtarget'] ? adSlot$$1.attributes['data-audtarget'].value : adTargets.all,\n              type: _this2.getAdType(adSlot$$1.id),\n              responsive: adSlotConfig[adSlot$$1.id].responsive,\n              fluid: adSlotConfig[adSlot$$1.id].fluid || false,\n              user: _this2.user,\n              adManager: _this2,\n              htmlElement: adSlot$$1,\n              department: _this2.config.department,\n              network: _this2.config.adManagerConfig.network,\n              adUnitBase: _this2.config.adManagerConfig.adUnitBase,\n              deferredSlot: _this2.conflictResolver.isBlocked(adSlot$$1.id),\n              priority: adSlotPriority\n            });\n            var adSlotInstance = new adSlot(computedAdSlotConfig);\n            adSlots.set(adSlot$$1.id, adSlotInstance);\n            if (adSlotInstance.type !== adTypes.talkback && adSlotInstance.priority === adPriorities.high && _this2.shouldSendRequestToDfp(adSlotInstance)) {\n              /*\n               console.log('calling show for high priority slot', adSlotInstance.id, ' called @',\n               window.performance.now());\n               */\n              adSlotInstance.show();\n            }\n          } catch (err) {\n            console.error(err); // eslint-disable-line no-console\n          }\n        }\n      });\n      return adSlots;\n    }\n  }, {\n    key: 'isPriority',\n    value: function isPriority(adSlotId) {\n      return typeof adSlotId === 'string' && (adSlotId.indexOf('plazma') > 0 || adSlotId.indexOf('maavaron') > 0 || adSlotId.indexOf('popunder') > 0);\n    }\n\n    /**\n     * Returns the adType based on the adSlot name.\n     * @param {String} adSlotId - the adSlot's identifier.\n     * @returns {*} enumerated export 'adTypes'\n     */\n\n  }, {\n    key: 'getAdType',\n    value: function getAdType(adSlotId) {\n      if (!adSlotId) {\n        throw new Error('Missing argument: a call to getAdType must have an adSlotId');\n      }\n      if (adSlotId.indexOf(adTypes.maavaron) > -1) return adTypes.maavaron;\n      if (adSlotId.indexOf(adTypes.popunder) > -1) return adTypes.popunder;\n      if (adSlotId.indexOf(adTypes.talkback) > -1) return adTypes.talkback;\n      return adTypes.regular;\n    }\n\n    /**\n     * @param {object} adSlot the AdSlot\n     * @returns {boolean|*}\n     */\n\n  }, {\n    key: 'shouldSendRequestToDfp',\n    value: function shouldSendRequestToDfp(adSlot$$1) {\n      // Conflict management check\n      return this.conflictResolver.isBlocked(adSlot$$1.id) === false &&\n      // Valid Referrer check\n      adSlot$$1.isWhitelisted() &&\n      // Not in referrer Blacklist\n      adSlot$$1.isBlacklisted() === false && this.shouldDisplayAdAfterAdBlockRemoval(adSlot$$1) &&\n      //  if a paywall pop-up is shown And the number is 12 or more - SHOW MAAVRON\n      this.shouldDisplayAdMaavaronAfterPayWallBanner(adSlot$$1) &&\n      // Responsive: breakpoint contains ad?\n      this.doesBreakpointContainAd(adSlot$$1) &&\n      // check in case of Smartphoneapp\n      this.haveValidCookieForSmartphoneapp() &&\n      // Targeting check (userType vs. slotTargeting)\n      this.doesUserTypeMatchBannerTargeting(adSlot$$1) &&\n      // Impressions Manager check (limits number of impressions per slot)\n      this.user.impressionManager.reachedQuota(adSlot$$1.id) === false;\n    }\n  }, {\n    key: 'shouldDisplayAdAfterAdBlockRemoval',\n    value: function shouldDisplayAdAfterAdBlockRemoval(adSlot$$1) {\n      return !(this.config.adBlockRemoved === true && (adSlot$$1.type === adTypes.maavaron || adSlot$$1.type === adTypes.popunder));\n    }\n  }, {\n    key: 'shouldDisplayAdMaavaronAfterPayWallBanner',\n    value: function shouldDisplayAdMaavaronAfterPayWallBanner(adSlot$$1) {\n      var shouldDisplay = true;\n      if (this.config.site === 'haaretz' && adSlot$$1.type === adTypes.maavaron) {\n        try {\n          var paywallBanner = JSON.parse(window.localStorage.getItem('_cobj'));\n          shouldDisplay = !paywallBanner || paywallBanner.mc && paywallBanner.mc >= 12 || paywallBanner.nextslotLocation && !paywallBanner.nextslotLocation.includes('pop');\n        } catch (err) {\n          /* eslint-disable no-console*/\n          console.error('ERROR ON shouldDisplayAdMaavaronAfterPayWallBanner');\n          /* eslint-enable no-console*/\n        }\n      }\n      return shouldDisplay;\n    }\n\n    /**\n     * Check whether or not an ad slot should appear for the current user type\n     * @param {String} adSlotOrTarget the adSlot to check or the target as a string\n     * @returns {boolean} true iff the slot should appear for the user type\n     */\n\n  }, {\n    key: 'haveValidCookieForSmartphoneapp',\n    value: function haveValidCookieForSmartphoneapp() {\n      return this.config.isValidForsmartPhone;\n    }\n\n    /**\n     * Check whether or not an ad slot should appear for the current user type\n     * @param {String} adSlotOrTarget the adSlot to check or the target as a string\n     * @returns {boolean} true iff the slot should appear for the user type\n     */\n\n  }, {\n    key: 'doesUserTypeMatchBannerTargeting',\n    value: function doesUserTypeMatchBannerTargeting(adSlotOrTarget) {\n      var userType = this.user.type;\n      var adTarget = typeof adSlotOrTarget === 'string' ? adSlotOrTarget : adSlotOrTarget.target;\n\n      switch (adTarget) {\n        case adTargets.all:\n          return true;\n        case adTargets.nonPaying:\n          return userType === userTypes$1.anonymous || userType === userTypes$1.registered;\n        case adTargets.anonymous:\n          return userType === userTypes$1.anonymous;\n        case adTargets.registered:\n          return userType === userTypes$1.registered;\n        case adTargets.paying:\n          return userType === userTypes$1.payer;\n        case adTargets.digitalOnly:\n          return userType === userTypes$1.payer;\n        case adTargets.digitalAndPrint:\n          return userType === userTypes$1.payer;\n        default:\n          return false;\n      }\n    }\n\n    /**\n     * Report to the AdManager that a breakpoint has been switched (passed from one break to\n     * another). Should there be a responsive slot with a\n     * @param {Breakpoint} breakpoint - the breakpoint that is currently being displayed\n     * @returns {Integer} affected - the number of adSlots affected by the change\n     */\n\n  }, {\n    key: 'switchedToBreakpoint',\n    value: function switchedToBreakpoint(breakpoint) {\n      if (!breakpoint) {\n        throw new Error('Missing argument: a call to switchedToBreakpoint must have an breakpoint');\n      }\n      var count = 0;\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this.adSlots.keys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var adSlotKey = _step6.value;\n\n          var adSlot$$1 = this.adSlots.get(adSlotKey);\n          if (adSlot$$1.responsive === true && adSlot$$1.lastResolvedWithBreakpoint) {\n            if (adSlot$$1.lastResolvedWithBreakpoint !== breakpoint) {\n              adSlot$$1.refresh();\n              count++;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return count;\n    }\n\n    /**\n     * Checks whether an adSlot is defined for a given breakpoint (Default: current breakpoint)\n     * @param {AdSlot} adSlot - the adSlot to check.\n     * @param {Breakpoint} [breakpoint=currentBreakpoint] - the breakpoint to check this ad in.\n     * @returns {boolean} true iff the adSlot is defined for the given breakpoint.\n     */\n\n  }, {\n    key: 'doesBreakpointContainAd',\n    value: function doesBreakpointContainAd(adSlot$$1) {\n      var breakpoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getBreakpoint();\n\n      if (!adSlot$$1) {\n        throw new Error('Missing argument: a call to doesBreakpointContainAd must have an adSlot');\n      }\n      var containsBreakpoint = true;\n      if (adSlot$$1.responsive === true) {\n        var mapping = adSlot$$1.responsiveAdSizeMapping[getBreakpointName(breakpoint)];\n        if (Array.isArray(mapping) === false) {\n          throw new Error('Invalid argument: breakpoint:' + breakpoint + ' doesn\\'t exist!', this);\n        }\n        containsBreakpoint = mapping.length > 0 && !arraysEqual(mapping, [[0, 0]]);\n      }\n      return containsBreakpoint;\n    }\n\n    /**\n     * Initializes the callback from the 'slotRenderEnded' event for each slot\n     */\n\n  }, {\n    key: 'initSlotRenderedCallback',\n    value: function initSlotRenderedCallback() {\n      var _this3 = this;\n\n      if (window.googletag && window.googletag.apiReady) {\n        var pubads = window.googletag.pubads();\n        pubads.addEventListener('slotRenderEnded', function (event) {\n          var id = event.slot.getAdUnitPath().split('/')[3];\n          var isEmpty = event.isEmpty;\n          var resolvedSize = event.size;\n          // console.log('slotRenderEnded for slot',id,' called @',window.performance.now());\n          if (_this3.adSlots.has(id)) {\n            var adSlot$$1 = _this3.adSlots.get(id);\n            adSlot$$1.lastResolvedSize = resolvedSize;\n            adSlot$$1.lastResolvedWithBreakpoint = getBreakpoint();\n            if (isEmpty) {\n              adSlot$$1.lastResolvedSize = ConflictResolver.EMPTY_SIZE;\n              adSlot$$1.hide();\n              _this3.releaseSlotDependencies(adSlot$$1);\n            } else {\n              _this3.releaseSlotDependencies(adSlot$$1, adSlot$$1.lastResolvedSize);\n            }\n            _this3.user.impressionManager.registerImpression('' + adSlot$$1.id + _this3.config.department);\n            _this3.user.impressionManager.registerImpression(adSlot$$1.id + '_all');\n          }\n        });\n      } else {\n        throw new Error('googletag api was not ready when \\'initSlotRenderedCallback\\' was called!');\n      }\n    }\n  }, {\n    key: 'releaseSlotDependencies',\n    value: function releaseSlotDependencies(adSlot$$1) {\n      try {\n        var id = adSlot$$1.id;\n        this.conflictResolver.updateResolvedSlot(id, adSlot$$1.lastResolvedSize);\n        if (this.conflictResolver.isBlocking(id)) {\n          // Hide all blocked adSlots\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = this.conflictResolver.getBlockedSlotsIds(id)[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var blockedSlot = _step7.value;\n\n              if (this.conflictResolver.isBlocked(blockedSlot)) {\n                if (this.adSlots.has(blockedSlot)) {\n                  this.adSlots.get(blockedSlot).hide();\n                }\n              }\n            }\n            // Show the non blocked\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = this.conflictResolver.deferredSlots.keys()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var deferredSlotKey = _step8.value;\n\n              var deferredAdSlot = this.adSlots.get(deferredSlotKey);\n              if (deferredAdSlot && this.shouldSendRequestToDfp(deferredAdSlot)) {\n                this.conflictResolver.deferredSlots.delete(deferredSlotKey);\n                if (deferredAdSlot.deferredSlot) {\n                  deferredAdSlot.defineSlot();\n                  deferredAdSlot.deferredSlot = false;\n                }\n                deferredAdSlot.show();\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        /* eslint-disable no-console*/\n        console.error('Cannot updateSlotDependencies for adSlot: ' + adSlot$$1.id);\n        /* eslint-enable no-console*/\n      }\n    }\n\n    /**\n     * Initializes page-level targeting params.\n     */\n\n  }, {\n    key: 'initGoogleTargetingParams',\n    value: function initGoogleTargetingParams() {\n      if (window.googletag && window.googletag.apiReady) {\n        // Returns a reference to the pubads service.\n        var pubads = googletag.pubads();\n        // Environment targeting (dev, test, prod)\n        if (this.config.environment) {\n          pubads.setTargeting('stg', [this.config.environment]);\n        }\n\n        // User targeting\n        if (this.user.type) {\n          pubads.setTargeting('UserType', [this.user.type]);\n        }\n        if (this.user.htz_type) {\n          pubads.setTargeting('htz_user_type', [this.user.htz_type]);\n        }\n        if (this.user.tm_type) {\n          pubads.setTargeting('tm_user_type', [this.user.tm_type]);\n        }\n        if (this.user.hdc_type) {\n          pubads.setTargeting('hdc_user_type', [this.user.hdc_type]);\n        }\n        if (this.user.age) {\n          pubads.setTargeting('age', [this.user.age]);\n        }\n        if (this.user.gender) {\n          pubads.setTargeting('urgdr', [this.user.gender]);\n        }\n\n        // Context targeting\n        if (this.config.articleId) {\n          pubads.setTargeting('articleId', [this.config.articleId]);\n        }\n        if (this.config.gStatCampaignNumber && this.config.gStatCampaignNumber !== -1) {\n          pubads.setTargeting('gstat_campaign_id', [this.config.gStatCampaignNumber]);\n        }\n        if (this.config.proposalNumber) {\n          pubads.setTargeting('proposaltype', [this.config.proposalNumber]);\n        }\n        if (this.config.isWriterAlerts) {\n          pubads.setTargeting('WriterAlerts', ['true']);\n        }\n        // UTM targeting\n        /* eslint-disable no-underscore-dangle */\n        if (this.config.utm_.content) {\n          pubads.setTargeting('utm_content', [this.config.utm_.content]);\n        }\n        if (this.config.utm_.source) {\n          pubads.setTargeting('utm_source', [this.config.utm_.source]);\n        }\n        if (this.config.utm_.medium) {\n          pubads.setTargeting('utm_medium', [this.config.utm_.medium]);\n        }\n        if (this.config.utm_.campaign) {\n          pubads.setTargeting('utm_campaign', [this.config.utm_.campaign]);\n        }\n        /* eslint-enable no-underscore-dangle */\n        // AdBlock removal\n        if (this.config.adBlockRemoved) {\n          pubads.setTargeting('adblock_removed', [this.config.adBlockRemoved]);\n        }\n        // University targeting - triggered via cookie\n        if (this.config.wifiLocation) {\n          pubads.setTargeting('wifi', [this.config.wifiLocation]);\n        }\n        if (this.config.tags && Array.isArray(this.config.tags)) {\n          pubads.setTargeting('tags', [].concat(_toConsumableArray(this.config.tags)));\n        }\n\n        if (this.user.sso && this.config.ssoGroupKey) {\n          pubads.setTargeting(this.config.ssoGroupKey, this.user.sso);\n        }\n        if (this.config.anonymousId) {\n          var anonymousIdKeyName = 'anonymousIdKey';\n          pubads.setTargeting(anonymousIdKeyName, this.config.anonymousId);\n        }\n        // Ads Centering\n        pubads.setCentering(true);\n      } else {\n        throw new Error('googletag api was not ready when \\'initGoogleTargetingParams\\' was called!');\n      }\n    }\n\n    /**\n     * Initializes googletag services.\n     */\n\n  }, {\n    key: 'initGoogleGlobalSettings',\n    value: function initGoogleGlobalSettings() {\n      if (window.googletag && window.googletag.apiReady) {\n        var googleGlobalSettings = this.config.googleGlobalSettings;\n        // Enable GET parameter overrides\n        if (window.location.search) {\n          var search = window.location.search;\n          if (search.indexOf('sraon') > 0) {\n            console.log('Single Request Mode: active'); // eslint-disable-line no-console\n            googleGlobalSettings.enableSingleRequest = true;\n          } else if (search.indexOf('sraoff') > 0) {\n            console.log('Single Request Mode: disabled'); // eslint-disable-line no-console\n            googleGlobalSettings.enableSingleRequest = false;\n          }\n          if (search.indexOf('asyncrenderingon') > 0) {\n            console.log('Async rendering mode: active'); // eslint-disable-line no-console\n            googleGlobalSettings.enableAsyncRendering = true;\n          } else if (search.indexOf('asyncrenderingonoff') > 0) {\n            console.log('Sync rendering mode: active'); // eslint-disable-line no-console\n            googleGlobalSettings.enableAsyncRendering = false;\n          }\n        }\n        // Google services activation\n        if (googleGlobalSettings.enableSingleRequest === true) {\n          googletag.pubads().enableSingleRequest();\n        }\n        if (googleGlobalSettings.enableAsyncRendering === true) {\n          googletag.pubads().enableAsyncRendering();\n        } else {\n          googletag.pubads().enableSyncRendering();\n        }\n        // Enables all GPT services that have been defined for ad slots on the page.\n        googletag.enableServices();\n      } else {\n        throw new Error('googletag api wasn\\'t ready when \\'initGoogleGlobalSettings\\' was called!');\n      }\n    }\n  }]);\n\n  return AdManager;\n}();\n\nvar defaultConfig = dfpConfig || {};\nvar resizeTimeout = 250;\n\nvar DFP = function () {\n  function DFP(config) {\n    _classCallCheck(this, DFP);\n\n    this.config = Object.assign({}, defaultConfig, config);\n    this.wasInitialized = false;\n    this.initStarted = false;\n    this.breakpoint = getBreakpoint();\n    this.initWindowResizeListener();\n  }\n\n  /**\n   * This part of the object's construction is dependent on the call to 'init'\n   */\n\n  _createClass(DFP, [{\n    key: 'resumeInit',\n    value: function resumeInit() {\n      try {\n        this.adManager = this.adManager || new AdManager(this.config);\n      } catch (err) {\n        console.error(err); // eslint-disable-line no-console\n      }\n    }\n\n    /**\n     * initializes the 'googletag' global namespace and add the\n     * google publish tags library to the page\n     * @returns {Promise} that resolves to true once the googletag api is ready to use\n     * (googletag.apiReady = true)\n     */\n\n  }, {\n    key: 'initGoogleTag',\n    value: function initGoogleTag() {\n      var _this = this;\n\n      var dfpThis = this;\n      return new Promise(function (resolve, reject) {\n        if (dfpThis.initStarted === true) {\n          googletag.cmd.push(function () {\n            dfpThis.wasInitialized = true;\n            resolve(dfpThis);\n          });\n        } else {\n          dfpThis.initStarted = true;\n          // set up a place holder for the gpt code downloaded from google\n          window.googletag = window.googletag || {};\n\n          // this is a command queue used by GPT any methods added to it will be\n          // executed when GPT code is available, if GPT is already available they\n          // will be executed immediately\n          window.googletag.cmd = window.googletag.cmd || [];\n          // load google tag services JavaScript\n          (function () {\n            var tag = window.document.createElement('script');\n            tag.async = true;\n            tag.type = 'text/javascript';\n            // Supports both https and http\n            tag.setAttribute('src', '//www.googletagservices.com/tag/js/gpt.js');\n            var node = window.document.getElementsByTagName('script')[0];\n            tag.addEventListener('load', function () {\n              dfpThis.resumeInit();\n              googletag.cmd.push(function () {\n                dfpThis.wasInitialized = true;\n                resolve(_this);\n              });\n            });\n            tag.addEventListener('error', function (error) {\n              dfpThis.wasInitialized = false;\n              reject(error);\n            });\n            node.parentNode.insertBefore(tag, node);\n          })();\n        }\n      });\n    }\n\n    /**\n     *  Returns true iff googletag was properly initialized on the page\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isGoogleTagReady',\n    value: function isGoogleTagReady() {\n      if (this.wasInitialized === true || window.googletag && window.googletag.apiReady) {\n        this.wasInitialized = true;\n      }\n      return this.wasInitialized;\n    }\n\n    /**\n     * Initializes the window resize listener to support responsive ad refreshes\n     */\n\n  }, {\n    key: 'initWindowResizeListener',\n    value: function initWindowResizeListener() {\n      var dfpThis = this;\n      function onResize() {\n        var currentBreakpoint = getBreakpoint();\n        if (dfpThis.breakpoint !== currentBreakpoint) {\n          dfpThis.breakpoint = currentBreakpoint;\n          if (dfpThis.adManager) {\n            dfpThis.adManager.refreshAllSlots();\n          } else {\n            throw new Error('initWindowResizeListener error - adManager instance is not available');\n          }\n        }\n      }\n      var debouncedFunction = debounce(onResize, resizeTimeout);\n      window.onresize = debouncedFunction;\n    }\n  }]);\n\n  return DFP;\n}();\n\n// const pkg = require('./../package.json');\n\n// DFP version is based on the package.json\nDFP.version = version || 'VERSION';\n\n/*\n // Only for development mode\n if ( process.env.NODE_ENV !== 'production' ) {\n DFP.dev = '123';\n }\n */\n\nvar config = dfpConfig;\nvar version$1 = DFP.version;\n\nexport default DFP;\nexport { config, version$1 as version };\n"]}